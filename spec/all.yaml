produces:
  - application/json;charset=utf-8
schemes:
  - https
swagger: "2.0"
info:
  description: |+

    A set of APIs based on the LSO Reference Architecture for
    Serviceability (Address Validation, Site Queries, Product Offering Qualification) |
    Quoting | Product Inventory | Ordering | Trouble-ticketing Billing | Contract & Catalog

  title: "MEF LSO Sonata"
  version: 3.0.0
  x-logo:
    backgroundColor: "#FFFFFF"
    url: /redoc/logo.png
host: serverRoot
basePath: /api/mef
securityDefinitions:
  bearer:
    # This scheme uses the header: "Authorization: Bearer {base64 encoded string representing a JWT}"
    # Alternatively, the query param: "access_token" may be used.
    #
    # In our scenario, we must use the query param version in order to avoid
    # passing several headers with key 'Authorization'
    type: oauth2
    # The flow and URLs in spec are for documentary purpose: go-swagger does not implement OAuth workflows
    flow: accessCode
    authorizationUrl: 'https://dummy.oauth.net/auth'
    tokenUrl: 'https://dumy.oauth.net/token'
    # Required scopes are passed by the runtime to the authorizer
    scopes:
      customer: scope of registered customers
      admin: scope of admin customers
security:
  - bearer: []
paths:
  /productOrderManagement/v3/hub:
    post:
      tags:
        - "Hub"
      consumes:
        - "application/json;charset=utf-8"
      produces:
        - "application/json;charset=utf-8"
      operationId: "productOrderManagementHubCreate"
      summary: "Create a Hub"
      description: "Structure used to create a hub (to subscribe to notification)"
      security:
        - bearer: [ "customer","admin" ]
      deprecated: false
      parameters:
        - name: "Hub"
          required: true
          in: "body"
          description: ""
          schema:
            $ref: "#/definitions/HubInput"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/Hub"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        408:
          description: "Request Time-out\n\nList of supported error codes:\n- 63:\
            \ Request time-out"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
    get:
      tags:
        - "Hub"
      produces:
        - "application/json;charset=utf-8"
      operationId: "productOrderManagementHubFind"
      summary: "Find a list of Hub"
      description: "Find Hub"
      deprecated: false
      security:
        - bearer: [ "customer","admin" ]
      responses:
        200:
          description: "Ok"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Hub"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        408:
          description: "Request Time-out\n\nList of supported error codes:\n- 63:\
            \ Request time-out"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /productOrderManagement/v3/hub/{HubId}:
    delete:
      tags:
        - "Hub"
      operationId: "productOrderManagementHubDelete"
      summary: "Delete a Hub"
      description: "Delete Hub"
      deprecated: false
      security:
        - bearer: [ "customer","admin" ]
      parameters:
        - name: "HubId"
          required: true
          in: "path"
          description: ""
          type: "string"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        408:
          description: "Request Time-out\n\nList of supported error codes:\n- 63:\
            \ Request time-out"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /productOrderManagement/v3/cancelProductOrder:
    get:
      description: This operation allows buyer to retrieve a list of product order cancellation request
      produces:
        - application/json;charset=utf-8
      tags:
        - CancelProductOrder
      summary: Find a lost of product order cancellation request(s)
      security:
        - bearer: [ "customer","admin" ]
      operationId: cancelProductOrderFind
      parameters:
        - type: string
          name: productOrderId
          in: query
        - type: string
          name: productOrderExternalId
          in: query
      responses:
        "200":
          description: Ok
          schema:
            type: array
            items:
              $ref: "#/definitions/CancelProductOrder"
        "400":
          description: |-
            Bad Request

            List of supported error codes:
            - 20: Invalid URL parameter value
            - 21: Missing body
            - 22: Invalid body
            - 23: Missing body field
            - 24: Invalid body field
            - 25: Missing header
            - 26: Invalid header value
            - 27: Missing query-string parameter
            - 28: Invalid query-string parameter value
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "401":
          description: |-
            Unauthorized

            List of supported error codes:
            - 40: Missing credentials
            - 41: Invalid credentials
            - 42: Expired credentials
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "403":
          description: |-
            Forbidden

            List of supported error codes:
            - 50: Access denied
            - 51: Forbidden requester
            - 52: Forbidden user
            - 53: Too many requests
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "404":
          description: |-
            Not Found

            List of supported error codes:
            - 60: Resource not found
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "405":
          description: |-
            Method Not Allowed

            List of supported error codes:
            - 61: Method not allowed
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "408":
          description: |-
            Request Time-out

            List of supported error codes:
            - 63: Request time-out
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "422":
          description: |-
            Unprocessable entity

            Functional error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "500":
          description: |-
            Internal Server Error

            List of supported error codes:
            - 1: Internal error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "503":
          description: |+
            Service Unavailable

          schema:
            $ref: "#/definitions/ErrorRepresentation"
    post:
      description: "This operation allows buyer to request a product order cancellation request "
      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      tags:
        - CancelProductOrder
      summary: Create product order cancellation request
      security:
        - bearer: [ "customer","admin" ]
      operationId: cancelProductOrderCreate
      parameters:
        - name: CancelProductOrder
          in: body
          required: true
          schema:
            $ref: "#/definitions/CancelProductOrder_Create"
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/CancelProductOrder"
        "400":
          description: |-
            Bad Request

            List of supported error codes:
            - 20: Invalid URL parameter value
            - 21: Missing body
            - 22: Invalid body
            - 23: Missing body field
            - 24: Invalid body field
            - 25: Missing header
            - 26: Invalid header value
            - 27: Missing query-string parameter
            - 28: Invalid query-string parameter value
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "401":
          description: |-
            Unauthorized

            List of supported error codes:
            - 40: Missing credentials
            - 41: Invalid credentials
            - 42: Expired credentials
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "403":
          description: |-
            Forbidden

            List of supported error codes:
            - 50: Access denied
            - 51: Forbidden requester
            - 52: Forbidden user
            - 53: Too many requests
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "404":
          description: |-
            Not Found

            List of supported error codes:
            - 60: Resource not found
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "405":
          description: |-
            Method Not Allowed

            List of supported error codes:
            - 61: Method not allowed
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "408":
          description: |-
            Request Time-out

            List of supported error codes:
            - 63: Request time-out
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "422":
          description: |-
            Unprocessable entity

            Functional error





             - code: 100
            message: externalId must be provided
            description: 


             - code: 101
            message: externalId does not match productOrderId
            description: 


             - code: 102
            message: Product order state is not compliant with this request
            description:
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "500":
          description: |-
            Internal Server Error

            List of supported error codes:
            - 1: Internal error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "503":
          description: |+
            Service Unavailable

          schema:
            $ref: "#/definitions/ErrorRepresentation"
  "/productOrderManagement/v3/cancelProductOrder/{CancelProductOrderId}":
    get:
      description: This operation allows buyer to retrieve one product order cancellation request
      produces:
        - application/json;charset=utf-8
      tags:
        - CancelProductOrder
      summary: Get a product order cancellation request (by id)
      security:
        - bearer: [ "customer","admin" ]
      operationId: cancelProductOrderGet
      parameters:
        - type: string
          name: CancelProductOrderId
          in: path
          required: true
      responses:
        "200":
          description: Ok
          schema:
            $ref: "#/definitions/CancelProductOrder"
        "400":
          description: |-
            Bad Request

            List of supported error codes:
            - 20: Invalid URL parameter value
            - 21: Missing body
            - 22: Invalid body
            - 23: Missing body field
            - 24: Invalid body field
            - 25: Missing header
            - 26: Invalid header value
            - 27: Missing query-string parameter
            - 28: Invalid query-string parameter value
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "401":
          description: |-
            Unauthorized

            List of supported error codes:
            - 40: Missing credentials
            - 41: Invalid credentials
            - 42: Expired credentials
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "403":
          description: |-
            Forbidden

            List of supported error codes:
            - 50: Access denied
            - 51: Forbidden requester
            - 52: Forbidden user
            - 53: Too many requests
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "404":
          description: |-
            Not Found

            List of supported error codes:
            - 60: Resource not found
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "405":
          description: |-
            Method Not Allowed

            List of supported error codes:
            - 61: Method not allowed
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "408":
          description: |-
            Request Time-out

            List of supported error codes:
            - 63: Request time-out
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "422":
          description: |-
            Unprocessable entity

            Functional error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "500":
          description: |-
            Internal Server Error

            List of supported error codes:
            - 1: Internal error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "503":
          description: |+
            Service Unavailable

          schema:
            $ref: "#/definitions/ErrorRepresentation"
  "/geographicAddressManagement/v3/geographicAddress/{GeographicAddressId}":
    get:
      description: The Buyer requests the full details of a single Address based on an Address identifier that was previously provided by the Seller.
      produces:
        - application/json;charset=utf-8
      tags:
        - GeographicAddress
      summary: retrieveAddress
      security:
        - bearer: [ "customer","admin" ]
      operationId: geographicAddressGet
      parameters:
        - type: string
          name: GeographicAddressId
          in: path
          required: true
      responses:
        "200":
          description: Ok
          schema:
            $ref: "#/definitions/GeographicAddress"
        "400":
          description: |-
            Bad Request

            List of supported error codes:
            - 20: Invalid URL parameter value
            - 21: Missing body
            - 22: Invalid body
            - 23: Missing body field
            - 24: Invalid body field
            - 25: Missing header
            - 26: Invalid header value
            - 27: Missing query-string parameter
            - 28: Invalid query-string parameter value
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "401":
          description: |-
            Unauthorized

            List of supported error codes:
            - 40: Missing credentials
            - 41: Invalid credentials
            - 42: Expired credentials
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "403":
          description: |-
            Forbidden

            List of supported error codes:
            - 50: Access denied
            - 51: Forbidden requester
            - 52: Forbidden user
            - 53: Too many requests
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "404":
          description: |-
            Not Found

            List of supported error codes:
            - 60: Resource not found
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "405":
          description: |-
            Method Not Allowed

            List of supported error codes:
            - 61: Method not allowed
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "422":
          description: |-
            Unprocessable entity

            Functional error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "500":
          description: |-
            Internal Server Error

            List of supported error codes:
            - 1: Internal error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "503":
          description: |+
            Service Unavailable

          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /geographicAddressManagement/v3/geographicAddressValidation:
    post:
      description: "The Buyer sends Address information known to the Buyer to the Seller.  The Seller re-sponds with a list of Addresses known to the Seller that likely match the Address infor-mation sent by the Buyer.  For each Address returned, the Seller generally also provides an Address Identifier, which uniquely identifies this Address within the Seller."
      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      tags:
        - GeographicAddressValidation
      summary: validate a Geographic Address
      security:
        - bearer: [ "customer","admin" ]
      operationId: geographicAddressValidationCreate
      parameters:
        - name: addressValidationRequest
          in: body
          required: true
          schema:
            $ref: "#/definitions/GeographicAddressValidation_Create"
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/GeographicAddressValidation"
        "400":
          description: |-
            Bad Request

            List of supported error codes:
            - 20: Invalid URL parameter value
            - 21: Missing body
            - 22: Invalid body
            - 23: Missing body field
            - 24: Invalid body field
            - 25: Missing header
            - 26: Invalid header value
            - 27: Missing query-string parameter
            - 28: Invalid query-string parameter value
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "401":
          description: |-
            Unauthorized

            List of supported error codes:
            - 40: Missing credentials
            - 41: Invalid credentials
            - 42: Expired credentials
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "403":
          description: |-
            Forbidden

            List of supported error codes:
            - 50: Access denied
            - 51: Forbidden requester
            - 52: Forbidden user
            - 53: Too many requests
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "404":
          description: |-
            Not Found

            List of supported error codes:
            - 60: Resource not found
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "405":
          description: |-
            Method Not Allowed

            List of supported error codes:
            - 61: Method not allowed
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "422":
          description: |-
            Unprocessable entity

            Functional error





             - code: 100
            message: Too many addresses match - please re-try with more attribute values restriction
            description:
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "500":
          description: |-
            Internal Server Error

            List of supported error codes:
            - 1: Internal error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "503":
          description: |+
            Service Unavailable

          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /geographicSiteManagement/v3/geographicSite:
    get:
      description: "The Buyer requests that the Seller provides a list of Service Sites known to the Seller based on a set of Site/Address filter criteria.  For each Service Site returned, the Seller also provides a Service Site Identifier, which uniquely identifies this Service Site within the Seller."
      produces:
        - application/json;charset=utf-8
      tags:
        - GeographicSite
      summary: retrieveGeographicSites
      security:
        - bearer: [ "customer","admin" ]
      operationId: geographicSiteFind
      parameters:
        - enum:
            - planned
            - cancelled
            - underConstruction
            - existing
            - former
          type: string
          description: Status of the site
          name: status
          in: query
        - type: string
          description: "The name of the company that is the administrative authority (e.g. controls access) for this Service Site. (For example, the building owner)"
          name: siteCompanyName
          in: query
        - type: string
          description: "The name of the company that is the administrative authority for the space within this Service Site. (For example, the company leasing space in a multi-tenant building)."
          name: siteCustomerName
          in: query
        - type: string
          description: A textual description of the Service Site.
          name: siteDescription
          in: query
        - type: string
          description: This defines whether a Service Site is public or private.
          name: siteType
          in: query
        - type: string
          description: A name commonly used by people to refer to this Service Site.
          name: siteName
          in: query
        - type: string
          description: |-
            Identifies the name of the person or organization at the specific site location that is the local contact. This contact will primarily be used for gaining access to the site.
            Filtering is done on the name of the relatedParty which has role ‘Site Contact’ in the Site record.
          name: siteContactName
          in: query
        - type: string
          description: "Identifier of a geographic address (from the seller). It could be any type of address reference (fielded, formatted, referenced, geoCode)"
          name: geographicAddress.id
          in: query
        - type: string
          description: Street Nr of the geographic site address
          name: geographicAddress.streetNr
          in: query
        - type: string
          description: Street Name of the geographic site address
          name: geographicAddress.streetName
          in: query
        - type: string
          description: Street Type of the geographic site address
          name: geographicAddress.streetType
          in: query
        - type: string
          description: City of the geographic site address
          name: geographicAddress.city
          in: query
        - type: string
          description: Postcode of the geographic site address
          name: geographicAddress.postcode
          in: query
        - type: string
          description: Country of the geographic site address
          name: geographicAddress.country
          in: query
      responses:
        "200":
          description: Ok
          schema:
            type: array
            items:
              $ref: "#/definitions/GeographicSiteFindResp"
        "400":
          description: |-
            Bad Request

            List of supported error codes:
            - 20: Invalid URL parameter value
            - 21: Missing body
            - 22: Invalid body
            - 23: Missing body field
            - 24: Invalid body field
            - 25: Missing header
            - 26: Invalid header value
            - 27: Missing query-string parameter
            - 28: Invalid query-string parameter value
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "401":
          description: |-
            Unauthorized

            List of supported error codes:
            - 40: Missing credentials
            - 41: Invalid credentials
            - 42: Expired credentials
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "404":
          description: |-
            Not Found

            List of supported error codes:
            - 60: Resource not found
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "408":
          description: |-
            Request Time-out

            List of supported error codes:
            - 63: Request time-out
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "422":
          description: |-
            Unprocessable entity

            Functional error





             - code: 100
            message: Too many records retrieved - please restrict requested parameter value(s)
            description:
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "500":
          description: |-
            Internal Server Error

            List of supported error codes:
            - 1: Internal error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "503":
          description: |+
            Service Unavailable

          schema:
            $ref: "#/definitions/ErrorRepresentation"
  "/geographicSiteManagement/v3/geographicSite/{SiteId}":
    get:
      description: "The Buyer requests the full details for a single Service Site based on a Service Site identifier that was previously provided by the Seller. "
      produces:
        - application/json;charset=utf-8
      tags:
        - GeographicSite
      summary: retrieveSite
      security:
        - bearer: [ "customer","admin" ]
      operationId: geographicSiteGet
      parameters:
        - type: string
          name: SiteId
          in: path
          required: true
      responses:
        "200":
          description: Ok
          schema:
            $ref: "#/definitions/GeographicSite"
        "400":
          description: |-
            Bad Request

            List of supported error codes:
            - 20: Invalid URL parameter value
            - 21: Missing body
            - 22: Invalid body
            - 23: Missing body field
            - 24: Invalid body field
            - 25: Missing header
            - 26: Invalid header value
            - 27: Missing query-string parameter
            - 28: Invalid query-string parameter value
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "401":
          description: |-
            Unauthorized

            List of supported error codes:
            - 40: Missing credentials
            - 41: Invalid credentials
            - 42: Expired credentials
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "404":
          description: |-
            Not Found

            List of supported error codes:
            - 60: Resource not found
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "408":
          description: |-
            Request Time-out

            List of supported error codes:
            - 63: Request time-out
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "422":
          description: |-
            Unprocessable entity

            Functional error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "500":
          description: |-
            Internal Server Error

            List of supported error codes:
            - 1: Internal error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "503":
          description: |+
            Service Unavailable

          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /productOrderNotification/v3/notification/productOrderAttributeValueChangeNotification:
    post:
      description: Product Order attribute value change structure description
      consumes:
        - application/json;charset=utf-8
      tags:
        - Notification
      summary: Product Order attribute value change structure
      security:
        - bearer: [ "customer","admin" ]
      operationId: notificationProductOrderAttributeValueChangeNotification
      parameters:
        - name: productOrderAttributeValueChange
          in: body
          required: true
          schema:
            $ref: "#/definitions/PoEventPlus"
      responses:
        "204":
          description: No Content
        "400":
          description: |-
            Bad Request

            List of supported error codes:
            - 20: Invalid URL parameter value
            - 21: Missing body
            - 22: Invalid body
            - 23: Missing body field
            - 24: Invalid body field
            - 25: Missing header
            - 26: Invalid header value
            - 27: Missing query-string parameter
            - 28: Invalid query-string parameter value
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "401":
          description: |-
            Unauthorized

            List of supported error codes:
            - 40: Missing credentials
            - 41: Invalid credentials
            - 42: Expired credentials
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "403":
          description: |-
            Forbidden

            List of supported error codes:
            - 50: Access denied
            - 51: Forbidden requester
            - 52: Forbidden user
            - 53: Too many requests
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "404":
          description: |-
            Not Found

            List of supported error codes:
            - 60: Resource not found
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "405":
          description: |-
            Method Not Allowed

            List of supported error codes:
            - 61: Method not allowed
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "408":
          description: |-
            Request Time-out

            List of supported error codes:
            - 63: Request time-out
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "422":
          description: |-
            Unprocessable entity

            Functional error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "500":
          description: |-
            Internal Server Error

            List of supported error codes:
            - 1: Internal error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "503":
          description: |+
            Service Unavailable

          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /productOrderNotification/v3/notification/productOrderCreationNotification:
    post:
      description: Product order creation notification structure description
      consumes:
        - application/json;charset=utf-8
      tags:
        - Notification
      summary: Product order creation notification structure
      security:
        - bearer: [ "customer","admin" ]
      operationId: notificationProductOrderCreationNotification
      parameters:
        - name: productOrderCreationNotification
          in: body
          schema:
            $ref: "#/definitions/PoEvent"
      responses:
        "204":
          description: No Content
        "400":
          description: |-
            Bad Request

            List of supported error codes:
            - 20: Invalid URL parameter value
            - 21: Missing body
            - 22: Invalid body
            - 23: Missing body field
            - 24: Invalid body field
            - 25: Missing header
            - 26: Invalid header value
            - 27: Missing query-string parameter
            - 28: Invalid query-string parameter value
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "401":
          description: |-
            Unauthorized

            List of supported error codes:
            - 40: Missing credentials
            - 41: Invalid credentials
            - 42: Expired credentials
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "403":
          description: |-
            Forbidden

            List of supported error codes:
            - 50: Access denied
            - 51: Forbidden requester
            - 52: Forbidden user
            - 53: Too many requests
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "404":
          description: |-
            Not Found

            List of supported error codes:
            - 60: Resource not found
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "405":
          description: |-
            Method Not Allowed

            List of supported error codes:
            - 61: Method not allowed
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "408":
          description: |-
            Request Time-out

            List of supported error codes:
            - 63: Request time-out
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "422":
          description: |-
            Unprocessable entity

            Functional error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "500":
          description: |-
            Internal Server Error

            List of supported error codes:
            - 1: Internal error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "503":
          description: |+
            Service Unavailable

          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /productOrderNotification/v3/notification/productOrderInformationRequiredNotification:
    post:
      description: Product Order information required structure description
      consumes:
        - application/json;charset=utf-8
      tags:
        - Notification
      summary: Product Order information required structure
      security:
        - bearer: [ "customer","admin" ]
      operationId: notificationProductOrderInformationRequiredNotification
      parameters:
        - name: productOrderInformationRequired
          in: body
          required: true
          schema:
            $ref: "#/definitions/PoEventPlus"
      responses:
        "204":
          description: No Content
        "400":
          description: |-
            Bad Request

            List of supported error codes:
            - 20: Invalid URL parameter value
            - 21: Missing body
            - 22: Invalid body
            - 23: Missing body field
            - 24: Invalid body field
            - 25: Missing header
            - 26: Invalid header value
            - 27: Missing query-string parameter
            - 28: Invalid query-string parameter value
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "401":
          description: |-
            Unauthorized

            List of supported error codes:
            - 40: Missing credentials
            - 41: Invalid credentials
            - 42: Expired credentials
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "403":
          description: |-
            Forbidden

            List of supported error codes:
            - 50: Access denied
            - 51: Forbidden requester
            - 52: Forbidden user
            - 53: Too many requests
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "404":
          description: |-
            Not Found

            List of supported error codes:
            - 60: Resource not found
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "405":
          description: |-
            Method Not Allowed

            List of supported error codes:
            - 61: Method not allowed
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "408":
          description: |-
            Request Time-out

            List of supported error codes:
            - 63: Request time-out
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "422":
          description: |-
            Unprocessable entity

            Functional error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "500":
          description: |-
            Internal Server Error

            List of supported error codes:
            - 1: Internal error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "503":
          description: |+
            Service Unavailable

          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /productOrderNotification/v3/notification/productOrderStateChangeNotification:
    post:
      description: Product order state change structure description
      consumes:
        - application/json;charset=utf-8
      tags:
        - Notification
      summary: Product order state change structure
      security:
        - bearer: [ "customer","admin" ]
      operationId: notificationProductOrderStateChangeNotification
      parameters:
        - name: productOrderStateChange
          in: body
          required: true
          schema:
            $ref: "#/definitions/PoEvent"
      responses:
        "204":
          description: No Content
        "400":
          description: |-
            Bad Request

            List of supported error codes:
            - 20: Invalid URL parameter value
            - 21: Missing body
            - 22: Invalid body
            - 23: Missing body field
            - 24: Invalid body field
            - 25: Missing header
            - 26: Invalid header value
            - 27: Missing query-string parameter
            - 28: Invalid query-string parameter value
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "401":
          description: |-
            Unauthorized

            List of supported error codes:
            - 40: Missing credentials
            - 41: Invalid credentials
            - 42: Expired credentials
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "403":
          description: |-
            Forbidden

            List of supported error codes:
            - 50: Access denied
            - 51: Forbidden requester
            - 52: Forbidden user
            - 53: Too many requests
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "404":
          description: |-
            Not Found

            List of supported error codes:
            - 60: Resource not found
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "405":
          description: |-
            Method Not Allowed

            List of supported error codes:
            - 61: Method not allowed
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "408":
          description: |-
            Request Time-out

            List of supported error codes:
            - 63: Request time-out
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "422":
          description: |-
            Unprocessable entity

            Functional error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "500":
          description: |-
            Internal Server Error

            List of supported error codes:
            - 1: Internal error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "503":
          description: |+
            Service Unavailable

          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /quoteNotification/v1/quoteNotification/v1/notification/quoteAttributeValueChangeNotification:
    post:
      description: |
        Quote attribute value change notification structure description.
        Attribute resourcePatch allows to target quote but also quoteItem - example: resourcePath":"/quote/42/quoteItem/3" is the item #3 of quote #42
        Attribute fieldPath allows to target attribute with value changed.

        Specific business errors for current operation will be encapsulated in

        HTTP Response 422 Unprocessable entity
      consumes:
        - application/json;charset=utf-8
      tags:
        - Notification
      summary: Quote attribute value change notification structure
      operationId: notificationQuoteAttributeValueChangeNotification
      parameters:
        - name: quoteAttributeValueChangeNotification
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/QuoteEventPlus"
      responses:
        "204":
          description: Success
        "400":
          description: |-
            Bad Request

            List of supported error codes:
            - 20: Invalid URL parameter value
            - 21: Missing body
            - 22: Invalid body
            - 23: Missing body field
            - 24: Invalid body field
            - 25: Missing header
            - 26: Invalid header value
            - 27: Missing query-string parameter
            - 28: Invalid query-string parameter value
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "401":
          description: |-
            Unauthorized

            List of supported error codes:
            - 40: Missing credentials
            - 41: Invalid credentials
            - 42: Expired credentials
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "403":
          description: |-
            Forbidden

            List of supported error codes:
            - 50: Access denied
            - 51: Forbidden requester
            - 52: Forbidden user
            - 53: Too many requests
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "404":
          description: |-
            Not Found

            List of supported error codes:
            - 60: Resource not found
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "405":
          description: |-
            Method Not Allowed

            List of supported error codes:
            - 61: Method not allowed
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "422":
          description: |-
            Unprocessable entity

            Functional error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "500":
          description: |-
            Internal Server Error

            List of supported error codes:
            - 1: Internal error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "503":
          description: |+
            Service Unavailable

          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /quoteNotification/v1/notification/quoteCreationNotification:
    post:
      description: |
        Quote creation notification structure definition

        Specific business errors for current operation will be encapsulated in

        HTTP Response 422 Unprocessable entity
      consumes:
        - application/json;charset=utf-8
      tags:
        - Notification
      summary: Quote creation notification structure
      operationId: notificationQuoteCreationNotification
      parameters:
        - name: quoteCreationNotification
          in: body
          required: true
          schema:
            $ref: "#/definitions/QuoteEvent"
      responses:
        "204":
          description: Success
        "400":
          description: |-
            Bad Request

            List of supported error codes:
            - 20: Invalid URL parameter value
            - 21: Missing body
            - 22: Invalid body
            - 23: Missing body field
            - 24: Invalid body field
            - 25: Missing header
            - 26: Invalid header value
            - 27: Missing query-string parameter
            - 28: Invalid query-string parameter value
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "401":
          description: |-
            Unauthorized

            List of supported error codes:
            - 40: Missing credentials
            - 41: Invalid credentials
            - 42: Expired credentials
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "403":
          description: |-
            Forbidden

            List of supported error codes:
            - 50: Access denied
            - 51: Forbidden requester
            - 52: Forbidden user
            - 53: Too many requests
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "404":
          description: |-
            Not Found

            List of supported error codes:
            - 60: Resource not found
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "405":
          description: |-
            Method Not Allowed

            List of supported error codes:
            - 61: Method not allowed
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "422":
          description: |-
            Unprocessable entity

            Functional error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "500":
          description: |-
            Internal Server Error

            List of supported error codes:
            - 1: Internal error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "503":
          description: |+
            Service Unavailable

          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /quoteNotification/v1/quoteNotification/v1/notification/quoteInformationRequiredNotification:
    post:
      description: |
        Quote information required notification structure description.
        Attribute resourcePatch allows to target quote but also quoteItem - example: resourcePath":"/quote/42/quoteItem/3" is the item #3 of quote #42
        Attribute fieldPath allows to target missing information: fieldPath":"missing=quote.relatedParty.Role.value&party.id=46" means role information is missing for party 46.

        Specific business errors for current operation will be encapsulated in

        HTTP Response 422 Unprocessable entity
      consumes:
        - application/json;charset=utf-8
      tags:
        - Notification
      summary: Quote information required notification structure
      operationId: notificationQuoteInformationRequiredNotification
      parameters:
        - name: quoteInformationRequiredNotification
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/QuoteEventPlus"
      responses:
        "204":
          description: Success
        "400":
          description: |-
            Bad Request

            List of supported error codes:
            - 20: Invalid URL parameter value
            - 21: Missing body
            - 22: Invalid body
            - 23: Missing body field
            - 24: Invalid body field
            - 25: Missing header
            - 26: Invalid header value
            - 27: Missing query-string parameter
            - 28: Invalid query-string parameter value
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "401":
          description: |-
            Unauthorized

            List of supported error codes:
            - 40: Missing credentials
            - 41: Invalid credentials
            - 42: Expired credentials
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "403":
          description: |-
            Forbidden

            List of supported error codes:
            - 50: Access denied
            - 51: Forbidden requester
            - 52: Forbidden user
            - 53: Too many requests
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "404":
          description: |-
            Not Found

            List of supported error codes:
            - 60: Resource not found
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "405":
          description: |-
            Method Not Allowed

            List of supported error codes:
            - 61: Method not allowed
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "422":
          description: |-
            Unprocessable entity

            Functional error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "500":
          description: |-
            Internal Server Error

            List of supported error codes:
            - 1: Internal error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "503":
          description: |+
            Service Unavailable

          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /quoteNotification/v1/notification/quoteStateChangeNotification:
    post:
      description: |
        Quote state change notification structure description

        Specific business errors for current operation will be encapsulated in

        HTTP Response 422 Unprocessable entity
      consumes:
        - application/json;charset=utf-8
      tags:
        - Notification
      summary: Quote state change notification structure
      operationId: notificationQuoteStateChangeNotification
      parameters:
        - name: quoteStateChangeNotification
          in: body
          required: true
          schema:
            $ref: "#/definitions/QuoteEvent"
      responses:
        "204":
          description: Success
        "400":
          description: |-
            Bad Request

            List of supported error codes:
            - 20: Invalid URL parameter value
            - 21: Missing body
            - 22: Invalid body
            - 23: Missing body field
            - 24: Invalid body field
            - 25: Missing header
            - 26: Invalid header value
            - 27: Missing query-string parameter
            - 28: Invalid query-string parameter value
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "401":
          description: |-
            Unauthorized

            List of supported error codes:
            - 40: Missing credentials
            - 41: Invalid credentials
            - 42: Expired credentials
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "403":
          description: |-
            Forbidden

            List of supported error codes:
            - 50: Access denied
            - 51: Forbidden requester
            - 52: Forbidden user
            - 53: Too many requests
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "404":
          description: |-
            Not Found

            List of supported error codes:
            - 60: Resource not found
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "405":
          description: |-
            Method Not Allowed

            List of supported error codes:
            - 61: Method not allowed
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "422":
          description: |-
            Unprocessable entity

            Functional error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "500":
          description: |-
            Internal Server Error

            List of supported error codes:
            - 1: Internal error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "503":
          description: |+
            Service Unavailable

          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /productInventoryManagement/v3/product:
    get:
      description: The Buyer requests a list of Products from the Seller based on filter criteria.
      produces:
        - application/json;charset=utf-8
      tags:
        - Product
      summary: productFind (list) - retrieve product list with summary view
      security:
        - bearer: [ "customer","admin" ]
      operationId: productFind
      parameters:
        - type: string
          description: Identifier of the party who role is buyer.
          name: buyerId
          in: query
        - enum:
            - active
            - suspended
            - activePendingTerminate
            - terminated
            - pendingActive
            - suspendedPendingTerminate
          type: string
          description: The status of the product
          name: status
          in: query
        - type: string
          description: A reference to a product spec by id
          name: productSpecificationId
          in: query
        - type: string
          description: A reference to a product offering by id
          name: productOfferingId
          in: query
        - type: string
          description: A reference to the buyerProductId provided in the order
          name: buyerProductId
          in: query
        - type: string
          description: A site identifier which is associated to the product
          name: geographicalSiteId
          in: query
        - type: string
          description: |-
            This criteria allows to retrieve all Product records with a Product Relationship to a specified Product.
            E.g. All Products related to Product with ID 5
          name: relatedProductId
          in: query
        - type: string
          description: The Billing Account associated with the Product.
          name: billingAccountId
          in: query
        - type: string
          description: Identifies Product Order(s) associated with the Product
          name: productOrderId
          in: query
        - type: string
          format: date-time
          description: Less than the date that is the initial install date for the Product
          name: startDate.lt
          in: query
        - type: string
          format: date-time
          description: Greater than the date that is the initial install date for the Product
          name: startDate.gt
          in: query
        - type: string
          format: date-time
          description: Less than date that the last change affecting this Product was completed
          name: lastUpdateDate.lt
          in: query
        - type: string
          format: date-time
          description: Greater than the date that the last change affecting this Product was complet-ed
          name: lastUpdateDate.gt
          in: query
        - type: string
          description: Requested index for start of resources to be provided in response requested by client
          name: offset
          in: query
        - type: string
          description: Requested number of resources to be provided in response requested by client
          name: limit
          in: query
      responses:
        "200":
          description: Ok
          schema:
            type: array
            items:
              $ref: "#/definitions/ProductSummary"
          headers:
            X-Result-Count:
              type: string
              description: The number of resources retrieved in the response
            X-Total_Count:
              type: string
              description: The total number of matching resources
        "400":
          description: |-
            Bad Request

            List of supported error codes:
            - 20: Invalid URL parameter value
            - 21: Missing body
            - 22: Invalid body
            - 23: Missing body field
            - 24: Invalid body field
            - 25: Missing header
            - 26: Invalid header value
            - 27: Missing query-string parameter
            - 28: Invalid query-string parameter value
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "401":
          description: |-
            Unauthorized

            List of supported error codes:
            - 40: Missing credentials
            - 41: Invalid credentials
            - 42: Expired credentials
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "403":
          description: |-
            Forbidden

            List of supported error codes:
            - 50: Access denied
            - 51: Forbidden requester
            - 52: Forbidden user
            - 53: Too many requests
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "404":
          description: |-
            Not Found

            List of supported error codes:
            - 60: Resource not found
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "422":
          description: |-
            Unprocessable entity

            Functional error





             - code: 100
            message: Too many records retrieved - please restrict requested parameter value(s)
            description: 


             - code: 103
            message: Incomplete request - If place.id is filled, place.type must be filled
            description: 


             - code: 104
            message: Incomplete request - If place.type is filled, place.id must be filled
            description: 


             - code: 105
            message: Incomplete request - If partyRole.role is filled, partyRole.relatedPartyId must be filled
            description: 


             - code: 106
            message: Incomplete request - If partyRole.relatedPartyId is filled, partyRole.role must be filled
            description:
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "503":
          description: |+
            Service Unavailable

          schema:
            $ref: "#/definitions/ErrorRepresentation"
  "/productInventoryManagement/v3/product/{ProductId}":
    get:
      description: The Buyer requests the details associated with a single Product based on a Seller Product Identifier.
      produces:
        - application/json;charset=utf-8
      tags:
        - Product
      summary: productGet (by id) - retrieve one product with all information
      security:
        - bearer: [ "customer","admin" ]
      operationId: productGet
      parameters:
        - type: string
          name: ProductId
          in: path
          required: true
      responses:
        "200":
          description: Ok
          schema:
            $ref: "#/definitions/Product"
        "400":
          description: |-
            Bad Request

            List of supported error codes:
            - 20: Invalid URL parameter value
            - 21: Missing body
            - 22: Invalid body
            - 23: Missing body field
            - 24: Invalid body field
            - 25: Missing header
            - 26: Invalid header value
            - 27: Missing query-string parameter
            - 28: Invalid query-string parameter value
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "401":
          description: |-
            Unauthorized

            List of supported error codes:
            - 40: Missing credentials
            - 41: Invalid credentials
            - 42: Expired credentials
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "403":
          description: |-
            Forbidden

            List of supported error codes:
            - 50: Access denied
            - 51: Forbidden requester
            - 52: Forbidden user
            - 53: Too many requests
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "404":
          description: |-
            Not Found

            List of supported error codes:
            - 60: Resource not found
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "422":
          description: |-
            Unprocessable entity

            Functional error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "503":
          description: |+
            Service Unavailable

          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /productOfferingQualificationManagement/v3/hub:
    get:
      description: This operation retrieves a set of hubs.
      produces:
        - application/json;charset=utf-8
      tags:
        - Hub
      summary: hubFind
      security:
        - bearer: [ "customer","admin" ]
      operationId: productOfferingQualificationManagementHubGet
      responses:
        "200":
          description: Ok
          schema:
            type: array
            items:
              $ref: "#/definitions/Hub"
        "400":
          description: |-
            Bad Request

            List of supported error codes:
            - 20: Invalid URL parameter value
            - 21: Missing body
            - 22: Invalid body
            - 23: Missing body field
            - 24: Invalid body field
            - 25: Missing header
            - 26: Invalid header value
            - 27: Missing query-string parameter
            - 28: Invalid query-string parameter value
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "401":
          description: |-
            Unauthorized

            List of supported error codes:
            - 40: Missing credentials
            - 41: Invalid credentials
            - 42: Expired credentials
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "403":
          description: |-
            Forbidden

            List of supported error codes:
            - 50: Access denied
            - 51: Forbidden requester
            - 52: Forbidden user
            - 53: Too many requests
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "404":
          description: |-
            Not Found

            List of supported error codes:
            - 60: Resource not found
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "408":
          description: |-
            Request Time-out

            List of supported error codes:
            - 63: Request time-out
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "422":
          description: |-
            Unprocessable entity

            Functional error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "503":
          description: |+
            Service Unavailable

          schema:
            $ref: "#/definitions/ErrorRepresentation"
    post:
      description: A request initiated by the Buyer to instruct the Seller to send notifications of POQ state changes in the event the Seller uses the Deferred Response pattern to respond to a Create Product Offering Qualifica-tion request.
      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      tags:
        - Hub
      summary: hubCreate
      security:
        - bearer: [ "customer","admin" ]
      operationId: productOfferingQualificationManagementHubPost
      parameters:
        - name: Hub
          in: body
          required: true
          schema:
            $ref: "#/definitions/HubInput"
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/Hub"
        "400":
          description: |-
            Bad Request

            List of supported error codes:
            - 20: Invalid URL parameter value
            - 21: Missing body
            - 22: Invalid body
            - 23: Missing body field
            - 24: Invalid body field
            - 25: Missing header
            - 26: Invalid header value
            - 27: Missing query-string parameter
            - 28: Invalid query-string parameter value
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "401":
          description: |-
            Unauthorized

            List of supported error codes:
            - 40: Missing credentials
            - 41: Invalid credentials
            - 42: Expired credentials
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "403":
          description: |-
            Forbidden

            List of supported error codes:
            - 50: Access denied
            - 51: Forbidden requester
            - 52: Forbidden user
            - 53: Too many requests
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "404":
          description: |-
            Not Found

            List of supported error codes:
            - 60: Resource not found
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "408":
          description: |-
            Request Time-out

            List of supported error codes:
            - 63: Request time-out
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "422":
          description: |-
            Unprocessable entity

            Functional error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "503":
          description: |+
            Service Unavailable

          schema:
            $ref: "#/definitions/ErrorRepresentation"
  "/productOfferingQualificationManagement/v3/hub/{HubId}":
    delete:
      description: This operation is used to delete a hub.
      tags:
        - Hub
      summary: hubDelete
      security:
        - bearer: [ "customer","admin" ]
      operationId: productOfferingQualificationManagementHubDelete
      parameters:
        - type: string
          name: HubId
          in: path
          required: true
      responses:
        "204":
          description: No Content
        "400":
          description: |-
            Bad Request

            List of supported error codes:
            - 20: Invalid URL parameter value
            - 21: Missing body
            - 22: Invalid body
            - 23: Missing body field
            - 24: Invalid body field
            - 25: Missing header
            - 26: Invalid header value
            - 27: Missing query-string parameter
            - 28: Invalid query-string parameter value
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "401":
          description: |-
            Unauthorized

            List of supported error codes:
            - 40: Missing credentials
            - 41: Invalid credentials
            - 42: Expired credentials
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "403":
          description: |-
            Forbidden

            List of supported error codes:
            - 50: Access denied
            - 51: Forbidden requester
            - 52: Forbidden user
            - 53: Too many requests
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "404":
          description: |-
            Not Found

            List of supported error codes:
            - 60: Resource not found
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "408":
          description: |-
            Request Time-out

            List of supported error codes:
            - 63: Request time-out
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "422":
          description: |-
            Unprocessable entity

            Functional error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "503":
          description: |+
            Service Unavailable

          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /productOfferingQualificationManagement/v3/productOfferingQualification:
    get:
      description: "The Buyer requests a list of POQs (in any state) from the Seller based on a set of POQ filter criteria.  For each POQ returned, the Seller also provides a POQ Identifier that uniquely identifies this POQ within the Seller. "
      produces:
        - application/json;charset=utf-8
      tags:
        - ProductOfferingQualification
      summary: Retrieve a list of ProductOfferingQualifications based on a set of criteria
      security:
        - bearer: [ "customer","admin" ]
      operationId: productOfferingQualificationFind
      parameters:
        - type: string
          description: State of the POQ to be retrieeved
          name: state
          in: query
        - type: string
          description: Identifier of buyer project associated to POQ
          name: projectId
          in: query
        - type: string
          format: date-time
          description: POQ expected response date is after this date
          name: requestedResponseDate.gt
          in: query
        - type: string
          format: date-time
          description: POQ expected response date is before this date
          name: requestedResponseDate.lt
          in: query
        - type: string
          description: Requested index for start of resources to be provided in response requested by client
          name: offset
          in: query
        - type: string
          description: Requested number of resources to be provided in response requested by client
          name: limit
          in: query
      responses:
        "200":
          description: Ok
          schema:
            type: array
            items:
              $ref: "#/definitions/ProductOfferingQualification_Find"
          headers:
            X-Result-Count:
              type: integer
              format: int32
              description: The number of resources retrieved in the response
            X-Total-Count:
              type: integer
              format: int32
              description: The total number of matching resources
        "400":
          description: |-
            Bad Request

            List of supported error codes:
            - 20: Invalid URL parameter value
            - 21: Missing body
            - 22: Invalid body
            - 23: Missing body field
            - 24: Invalid body field
            - 25: Missing header
            - 26: Invalid header value
            - 27: Missing query-string parameter
            - 28: Invalid query-string parameter value
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "401":
          description: |-
            Unauthorized

            List of supported error codes:
            - 40: Missing credentials
            - 41: Invalid credentials
            - 42: Expired credentials
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "403":
          description: |-
            Forbidden

            List of supported error codes:
            - 50: Access denied
            - 51: Forbidden requester
            - 52: Forbidden user
            - 53: Too many requests
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "404":
          description: |-
            Not Found

            List of supported error codes:
            - 60: Resource not found
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "408":
          description: |-
            Request Time-out

            List of supported error codes:
            - 63: Request time-out
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "422":
          description: |-
            Unprocessable entity

            Functional error





             - code: 100
            message: Too many records retrieved - please restrict requested parameter value(s)
            description:
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "503":
          description: |+
            Service Unavailable

          schema:
            $ref: "#/definitions/ErrorRepresentation"
    post:
      description: "A request initiated by the Buyer to determine whether the Seller can feasibly deliver a particular Product (or Products) to a specific set of geographic locations specified by a set of Site/Address filter criteria. The Seller also provides estimated time intervals to complete these deliveries. "
      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      tags:
        - ProductOfferingQualification
      summary: Create a ProductOfferingQualification
      security:
        - bearer: [ "customer","admin" ]
      operationId: productOfferingQualificationCreate
      parameters:
        - name: ProductOfferingQualification
          in: body
          required: true
          schema:
            $ref: "#/definitions/ProductOfferingQualification_Create"
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/ProductOfferingQualification"
        "400":
          description: |-
            Bad Request

            List of supported error codes:
            - 20: Invalid URL parameter value
            - 21: Missing body
            - 22: Invalid body
            - 23: Missing body field
            - 24: Invalid body field
            - 25: Missing header
            - 26: Invalid header value
            - 27: Missing query-string parameter
            - 28: Invalid query-string parameter value
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "401":
          description: |-
            Unauthorized

            List of supported error codes:
            - 40: Missing credentials
            - 41: Invalid credentials
            - 42: Expired credentials
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "403":
          description: |-
            Forbidden

            List of supported error codes:
            - 50: Access denied
            - 51: Forbidden requester
            - 52: Forbidden user
            - 53: Too many requests
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "404":
          description: |-
            Not Found

            List of supported error codes:
            - 60: Resource not found
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "408":
          description: |-
            Request Time-out

            List of supported error codes:
            - 63: Request time-out
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "422":
          description: |-
            Unprocessable entity

            Functional error





             - code: 100
            message: A relatedParty - at productOfferingQualification level - with a role 'Buyer' must be provided (including contact information)
            description: 


             - code: 101
            message: A least a productOffering OR a productSpecification OR a Product must be provided for a POQItem
            description: 


             - code: 102
            message: Provided Product Offering Identifier is unknown
            description: 


             - code: 103
            message: Provided Product Specification Identifier is unknown
            description: 


             - code: 104
            message: Provided Product Identifier is unknown
            description: 


             - code: 105
            message: The place information provided are invalid
            description: 


             - code: 106
            message: A least one date provided is invalid
            description: 


             - code: 107
            message: Incorrect related party role provided
            description:
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "503":
          description: |+
            Service Unavailable

          schema:
            $ref: "#/definitions/ErrorRepresentation"
  "/productOfferingQualificationManagement/v3/productOfferingQualification/{ProductOfferingQualificationId}":
    get:
      description: "The Buyer requests the full details of a single Product Offering Qualification based on a POQ identifier. "
      produces:
        - application/json;charset=utf-8
      tags:
        - ProductOfferingQualification
      summary: Get a ProductOfferingQualification based on its id
      security:
        - bearer: [ "customer","admin" ]
      operationId: productOfferingQualificationGet
      parameters:
        - type: string
          name: ProductOfferingQualificationId
          in: path
          required: true
      responses:
        "200":
          description: Ok
          schema:
            $ref: "#/definitions/ProductOfferingQualification"
        "400":
          description: |-
            Bad Request

            List of supported error codes:
            - 20: Invalid URL parameter value
            - 21: Missing body
            - 22: Invalid body
            - 23: Missing body field
            - 24: Invalid body field
            - 25: Missing header
            - 26: Invalid header value
            - 27: Missing query-string parameter
            - 28: Invalid query-string parameter value
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "401":
          description: |-
            Unauthorized

            List of supported error codes:
            - 40: Missing credentials
            - 41: Invalid credentials
            - 42: Expired credentials
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "403":
          description: |-
            Forbidden

            List of supported error codes:
            - 50: Access denied
            - 51: Forbidden requester
            - 52: Forbidden user
            - 53: Too many requests
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "404":
          description: |-
            Not Found

            List of supported error codes:
            - 60: Resource not found
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "408":
          description: |-
            Request Time-out

            List of supported error codes:
            - 63: Request time-out
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "422":
          description: |-
            Unprocessable entity

            Functional error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "503":
          description: |+
            Service Unavailable

          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /productOfferingQualificationManagement/v3/notification/productOfferingQualificationCreationNotification:
    post:
      tags:
      - "Notification"
      consumes:
      - "application/json;charset=utf-8"
      operationId: "notificationProductOfferingQualificationCreationNotification"
      summary: "Product Offering Qualification Creation Notification structure"
      security:
        - bearer: [ "customer","admin" ]
      description: "Product Offering Qualification Creation Notification structure\
        \ definition"
      deprecated: false
      parameters:
      - name: "productOfferingQualificationCreationNotification"
        required: true
        in: "body"
        description: ""
        schema:
          $ref: "#/definitions/PoQEventContainer"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        408:
          description: "Request Time-out\n\nList of supported error codes:\n- 63:\
            \ Request time-out"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /productOfferingQualificationNotification/v3/notification/productOfferingQualificationStateChangeNotification:
    post:
      tags:
      - "Notification"
      consumes:
      - "application/json;charset=utf-8"
      operationId: "notificationProductOfferingQualificationStateChangeNotification"
      summary: "Product Offering Qualification State Change Notification structure"
      security:
        - bearer: [ "customer","admin" ]
      description: "Product Offering Qualification State Change Notification structure\
        \ definition"
      deprecated: false
      parameters:
      - name: "productOfferingQualificationStateChangeNotification"
        required: true
        in: "body"
        description: ""
        schema:
          $ref: "#/definitions/PoQEventContainer"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        408:
          description: "Request Time-out\n\nList of supported error codes:\n- 63:\
            \ Request time-out"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /productOfferingQualificationNotification/v3/productOrderManagement/v3/productOrder:
    get:
      description: This operation is used to retrieve one or more product orders based upon filter criteria specified on input.
      produces:
        - application/json;charset=utf-8
      tags:
        - ProductOrder
      summary: Find a list of product order(s)
      security:
        - bearer: [ "customer","admin" ]
      operationId: productOrderFind
      parameters:
        - type: string
          description: "A Party Role played by an Individual or an Organization that buys products and services from a Seller. Specifically, the ID of the Service Provider (Buyer) organization placing the order."
          name: buyerId
          in: query
        - type: string
          description: |-
            A Party Role played by an organization that provides products and services to a Buyer.
            Specifically, the ID of the Partner/Access Provider (Seller) organization receiving the order.
          name: sellerId
          in: query
        - type: string
          description: The status of the order
          name: state
          in: query
        - type: string
          format: date-time
          description: Buyer requested date greater than
          name: buyerRequestedDate.gt
          in: query
        - type: string
          format: date-time
          description: Buyer requested date lesser than
          name: buyerRequestedDate.lt
          in: query
        - type: string
          format: date-time
          description: Date when the order was created greater than
          name: orderDate.gt
          in: query
        - type: string
          format: date-time
          description: Date when the order was created lesser than
          name: orderDate.lt
          in: query
        - type: string
          format: date-time
          description: Buyer requested start date greater than
          name: requestedStartDate.gt
          in: query
        - type: string
          format: date-time
          description: Buyer requested start date lesser than
          name: requestedStartDate.lt
          in: query
        - type: string
          format: date-time
          description: Identifies the Buyer's desired due date (requested delivery date) greater than
          name: requestedCompletionDate.gt
          in: query
        - type: string
          format: date-time
          description: Identifies the Buyer's desired due date (requested delivery date) lesser than
          name: requestedCompletionDate.lt
          in: query
        - type: string
          format: date-time
          description: Seller planned completion date greater than
          name: expectedCompletionDate.gt
          in: query
        - type: string
          format: date-time
          description: Seller planned completion date lesser than
          name: expectedCompletionDate.lt
          in: query
        - type: string
          format: date-time
          description: Effective completion date greater than
          name: completionDate.gt
          in: query
        - type: string
          format: date-time
          description: Effective completion date lesser than
          name: completionDate.lt
          in: query
        - type: string
          format: date-time
          description: order cancellation date greater than
          name: orderCancellationDate.gt
          in: query
        - type: string
          format: date-time
          description: order cancellation date lesser than
          name: orderCancellationDate.lt
          in: query
        - type: string
          description: A name by which the site is known.
          name: siteName
          in: query
        - type: string
          description: The name of the company that is located at the service location.  This may be different from the name of the Buyer that ordered services at that site.
          name: siteCompanyName
          in: query
        - type: string
          description: The customer name at a site where the service is being delivered
          name: siteCustomerName
          in: query
        - type: string
          description: An identifier that is used to group Orders that represent a unit of functionality that is important to a Buyer.
          name: projectId
          in: query
        - type: string
          description: A number that uniquely identifies an order within the Buyer's enterprise.
          name: externalId
          in: query
        - type: string
          description: Requested index for start of resources to be provided in response requested by client
          name: offset
          in: query
        - type: string
          description: Requested number of resources to be provided in response requested by client
          name: limit
          in: query
      responses:
        "200":
          description: Ok
          schema:
            type: array
            items:
              $ref: "#/definitions/ProductOrderSummary"
          headers:
            X-Result-Count:
              type: integer
              format: int32
              description: The number of resources retrieved in the response
            X-Total-Count:
              type: integer
              format: int32
              description: The total number of matching resources
        "400":
          description: |-
            Bad Request

            List of supported error codes:
            - 20: Invalid URL parameter value
            - 21: Missing body
            - 22: Invalid body
            - 23: Missing body field
            - 24: Invalid body field
            - 25: Missing header
            - 26: Invalid header value
            - 27: Missing query-string parameter
            - 28: Invalid query-string parameter value
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "401":
          description: |-
            Unauthorized

            List of supported error codes:
            - 40: Missing credentials
            - 41: Invalid credentials
            - 42: Expired credentials
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "403":
          description: |-
            Forbidden

            List of supported error codes:
            - 50: Access denied
            - 51: Forbidden requester
            - 52: Forbidden user
            - 53: Too many requests
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "404":
          description: |-
            Not Found

            List of supported error codes:
            - 60: Resource not found
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "405":
          description: |-
            Method Not Allowed

            List of supported error codes:
            - 61: Method not allowed
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "408":
          description: |-
            Request Time-out

            List of supported error codes:
            - 63: Request time-out
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "422":
          description: |-
            Unprocessable entity

            Functional error





             - code: 100
            message: Too many records retrieved - please restrict requested parameter value(s)
            description:
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "500":
          description: |-
            Internal Server Error

            List of supported error codes:
            - 1: Internal error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "503":
          description: |+
            Service Unavailable

          schema:
            $ref: "#/definitions/ErrorRepresentation"
    post:
      description: 'This operation is used to create an order. Depending on the order activity, one can "INSTALL", "CHANGE", or "DISCONNECT" an associated product.'
      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      tags:
        - ProductOrder
      summary: Create a product order
      security:
        - bearer: [ "customer","admin" ]
      operationId: productOrderCreate
      parameters:
        - name: ProductOrder
          in: body
          required: true
          schema:
            $ref: "#/definitions/ProductOrder_Create"
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/ProductOrder"
        "400":
          description: |-
            Bad Request

            List of supported error codes:
            - 20: Invalid URL parameter value
            - 21: Missing body
            - 22: Invalid body
            - 23: Missing body field
            - 24: Invalid body field
            - 25: Missing header
            - 26: Invalid header value
            - 27: Missing query-string parameter
            - 28: Invalid query-string parameter value
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "401":
          description: |-
            Unauthorized

            List of supported error codes:
            - 40: Missing credentials
            - 41: Invalid credentials
            - 42: Expired credentials
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "403":
          description: |-
            Forbidden

            List of supported error codes:
            - 50: Access denied
            - 51: Forbidden requester
            - 52: Forbidden user
            - 53: Too many requests
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "404":
          description: |-
            Not Found

            List of supported error codes:
            - 60: Resource not found
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "405":
          description: |-
            Method Not Allowed

            List of supported error codes:
            - 61: Method not allowed
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "408":
          description: |-
            Request Time-out

            List of supported error codes:
            - 63: Request time-out
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "422":
          description: |-
            Unprocessable entity

            Functional error





             - code: 100
            message: Missing order item (minimum 1)
            description: At least one order item must be provided


             - code: 101
            message: Missing Buyer at order level
            description: One and only one related partyRole with a "Buyer" role should be provided at the product order level.


             - code: 114
            message: Missing Seller at order level
            description: One and only one related partyRole with a "Seller" role should be provided at the product order level.


             - code: 102
            message: A relatedParty is at the wrong level
            description: The partyRole provided is not at the correct level - MEF allows to have
            "Buyer", "Seller", "Billing Contact", "Order Contact", "Implementation Contact", "Technical Contact" roles at product order level and "UNI Site Contact", "UNI Alt Site Contact", "ENNI Site Contact", "ENNI Alt Site Contact" at product order item level.


             - code: 103
            message: Missing Buyer Order Contact at order level
            description: One and only one related partyRole with a "Order Contact" role should be provided at the product order level.
            Buyer Order Contact name & Telephone number must be provided.


             - code: 104
            message: Missing Buyer Implementation Contact at order level
            description: One and only one related partyRole with a "Implementation Contact" role should be provided at the product order level.
            Implementation Contact name & Telephone number must be provided.


             - code: 105
            message: Missing Buyer Technical contact at order level
            description: One and only one related partyRole with a "Technical Contact" role should be provided at the product order level.
            Technical Contact name, Telephone number and email address must be provided.


             - code: 106
            message: Address information must match place type
            description: If place type is 'Formatted Address' : addrLine1, city, stateOrProvince, postCode and country must be there.
            If place type is 'Fielded Address' : streetName, streetType, city, stateOrProvince, postCode and country must be there.


             - code: 107
            message: postCode extension requires postcode value to be filled
            description: A postCode extension must not be present without a postcode being present


             - code: 108
            message: Product id is required for all OrderItem Actions other than INSTALL
            description: If orderItemAction is not INSTALL, orderItem.product.id is mandatory


             - code: 109
            message: Order Activity must match all OrderItem Actions for INSTALL
            description: If orderActivity is set to INSTALL, all orderItemAction must be INSTALL


             - code: 110
            message: Referred quote cannot be used for ordering due to its status
            description: Quote cannot be used in the order if its status is in CANCELLED, UNABLE TO PROVIDE, REJECTED or EXPIRED state.


             - code: 111
            message: Billing Account information must not be both at order level and order item level
            description: Billing Account must not be present both at order header level and order item level.


             - code: 112
            message: PricingMethod, pricing Reference & pricing term attributes  must not be both at order level and order item level
            description: Pricing data  must not be present both at order header level and order item level.


             - code: 113
            message: Referred Serviceability request is expired
            description: Serviceability information are expired.


             - code: 114
            message: A reccuring price is mentionned without a charge period.
            description: 


             - code: 115
            message: Referred Quote is not existing
            description: 


             - code: 116
            message: Referred ProductOfferingQualification is not existing
            description: 


             - code: 117
            message: Product /item relationship is missing
            description: 


             - code: 118
            message: Product Id refered in a relationship is not existing
            description:
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "500":
          description: |-
            Internal Server Error

            List of supported error codes:
            - 1: Internal error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "503":
          description: |+
            Service Unavailable

          schema:
            $ref: "#/definitions/ErrorRepresentation"
  "/productOrderManagement/v3/productOrder/{ProductOrderId}":
    get:
      description: This operation is used to retrieve a single product order based upon a specified product order id.
      produces:
        - application/json;charset=utf-8
      tags:
        - ProductOrder
      summary: Get a product order (by id)
      security:
        - bearer: [ "customer","admin" ]
      operationId: productOrderGet
      parameters:
        - type: string
          name: ProductOrderId
          in: path
          required: true
      responses:
        "200":
          description: Ok
          schema:
            $ref: "#/definitions/ProductOrder"
        "400":
          description: |-
            Bad Request

            List of supported error codes:
            - 20: Invalid URL parameter value
            - 21: Missing body
            - 22: Invalid body
            - 23: Missing body field
            - 24: Invalid body field
            - 25: Missing header
            - 26: Invalid header value
            - 27: Missing query-string parameter
            - 28: Invalid query-string parameter value
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "401":
          description: |-
            Unauthorized

            List of supported error codes:
            - 40: Missing credentials
            - 41: Invalid credentials
            - 42: Expired credentials
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "403":
          description: |-
            Forbidden

            List of supported error codes:
            - 50: Access denied
            - 51: Forbidden requester
            - 52: Forbidden user
            - 53: Too many requests
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "404":
          description: |-
            Not Found

            List of supported error codes:
            - 60: Resource not found
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "405":
          description: |-
            Method Not Allowed

            List of supported error codes:
            - 61: Method not allowed
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "408":
          description: |-
            Request Time-out

            List of supported error codes:
            - 63: Request time-out
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "422":
          description: |-
            Unprocessable entity

            Functional error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "500":
          description: |-
            Internal Server Error

            List of supported error codes:
            - 1: Internal error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "503":
          description: |+
            Service Unavailable

          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /quoteManagement/v2/hub:
    post:
      tags:
        - "Hub"
      consumes:
        - "application/json;charset=utf-8"
      produces:
        - "application/json;charset=utf-8"
      operationId: "quoteManagementHubCreate"
      summary: "Register a listener"
      description: "Sets the communication endpoint address the service instance must\
        \ use to deliver information about its health state, execution state, failures\
        \ and metrics"
      deprecated: false
      security:
        - bearer: [ "customer","admin" ]
      parameters:
        - name: "Hub"
          required: true
          in: "body"
          description: ""
          schema:
            $ref: "#/definitions/HubInput"
      responses:
        201:
          description: "Created"
          schema:
            $ref: "#/definitions/Hub"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
    get:
      tags:
        - "Hub"
      produces:
        - "application/json;charset=utf-8"
      operationId: "quoteManagementHubFind"
      summary: "listHub"
      description: "Retrieve hub(s)"
      deprecated: false
      security:
        - bearer: [ "customer","admin" ]
      parameters:
        - name: "fields"
          required: false
          in: "header"
          description: ""
          type: "string"
      responses:
        200:
          description: "Ok"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Hub"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /quoteManagement/v2/hub/{HubId}:
    delete:
      tags:
        - "Hub"
      operationId: "quoteManagementHubDelete"
      summary: "Unregister a listener"
      description: "Clears the communication endpoint address that was set by creating\
        \ the Hub"
      deprecated: false
      security:
        - bearer: [ "customer","admin" ]
      parameters:
        - name: "HubId"
          required: true
          in: "path"
          description: ""
          type: "string"
      responses:
        204:
          description: "No Content"
        400:
          description: "Bad Request\n\nList of supported error codes:\n- 20: Invalid\
            \ URL parameter value\n- 21: Missing body\n- 22: Invalid body\n- 23: Missing\
            \ body field\n- 24: Invalid body field\n- 25: Missing header\n- 26: Invalid\
            \ header value\n- 27: Missing query-string parameter\n- 28: Invalid query-string\
            \ parameter value"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        401:
          description: "Unauthorized\n\nList of supported error codes:\n- 40: Missing\
            \ credentials\n- 41: Invalid credentials\n- 42: Expired credentials"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        403:
          description: "Forbidden\n\nList of supported error codes:\n- 50: Access\
            \ denied\n- 51: Forbidden requester\n- 52: Forbidden user\n- 53: Too many\
            \ requests"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        404:
          description: "Not Found\n\nList of supported error codes:\n- 60: Resource\
            \ not found"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        405:
          description: "Method Not Allowed\n\nList of supported error codes:\n- 61:\
            \ Method not allowed"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        422:
          description: "Unprocessable entity\n\nFunctional error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        500:
          description: "Internal Server Error\n\nList of supported error codes:\n\
            - 1: Internal error"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        503:
          description: "Service Unavailable\n\n"
          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /quoteManagement/v2/quote:
    get:
      description: This operation is used to retrieve quote information using filter criteria.
      produces:
        - application/json;charset=utf-8
      tags:
        - Quote
      summary: List quotes
      security:
        - bearer: [ "customer","admin" ]
      operationId: quoteFind
      parameters:
        - type: string
          description: ID given by the consumer and only understandable by him (to facilitate his searches afterwards)
          name: externalId
          in: query
        - enum:
            - IN_PROGRESS
            - READY
            - CANCELLED
            - REJECTED
            - ACCEPTED
            - EXPIRED
            - UNABLE_TO_PROVIDE
            - INSUFICIENT_INFORMATION_PROVIDED
          type: string
          description: State of the Quote
          name: state
          in: query
        - enum:
            - BUDGETARY
            - INDICATIVE
            - FIRM
          type: string
          description: "Level of the quote - could be indicative, budgetary or firm"
          name: quoteLevel
          in: query
        - type: string
          description: This value MAY be assigned by the Buyer/Seller to identify a project the quoting request is associated with.
          name: projectId
          in: query
        - type: string
          format: date-time
          description: Date when the quote was created - greater than
          name: quoteDate.gt
          in: query
        - type: string
          format: date-time
          description: Date when the quote was created - lower than
          name: quoteDate.lt
          in: query
        - type: string
          format: date-time
          description: Date when the quote was completed -  greater than
          name: quoteCompletionDate.gt
          in: query
        - type: string
          format: date-time
          description: Date when the quote was completed -  lower than
          name: quoteCompletionDate.lt
          in: query
        - type: string
          description: Requested index for start of resources to be provided in response requested by client
          name: offset
          in: query
        - type: string
          description: Requested number of resources to be provided in response requested by client
          name: limit
          in: query
      responses:
        "200":
          description: Ok
          schema:
            type: array
            items:
              $ref: "#/definitions/Quote_Find"
          headers:
            X-Result-Count:
              type: integer
              format: int32
              description: The number of resources retrieved in the response
            X-Total-Count:
              type: integer
              format: int32
              description: Total number of items matching criteria
        "400":
          description: |-
            Bad Request

            List of supported error codes:
            - 20: Invalid URL parameter value
            - 21: Missing body
            - 22: Invalid body
            - 23: Missing body field
            - 24: Invalid body field
            - 25: Missing header
            - 26: Invalid header value
            - 27: Missing query-string parameter
            - 28: Invalid query-string parameter value
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "401":
          description: |-
            Unauthorized

            List of supported error codes:
            - 40: Missing credentials
            - 41: Invalid credentials
            - 42: Expired credentials
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "403":
          description: |-
            Forbidden

            List of supported error codes:
            - 50: Access denied
            - 51: Forbidden requester
            - 52: Forbidden user
            - 53: Too many requests
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "404":
          description: |-
            Not Found

            List of supported error codes:
            - 60: Resource not found
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "405":
          description: |-
            Method Not Allowed

            List of supported error codes:
            - 61: Method not allowed
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "422":
          description: |-
            Unprocessable entity

            Functional error





             - code: 100
            message: Too many records retrieved - please restrict requested parameter value(s)
            description:
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "500":
          description: |-
            Internal Server Error

            List of supported error codes:
            - 1: Internal error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "503":
          description: |+
            Service Unavailable

          schema:
            $ref: "#/definitions/ErrorRepresentation"
    post:
      description: This operation is used to create a new quote.
      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      tags:
        - Quote
      summary: Create a quote
      operationId: quoteCreate
      security:
        - bearer: [ "customer","admin" ]
      parameters:
        - name: Quote
          in: body
          required: true
          schema:
            $ref: "#/definitions/Quote_Create"
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/Quote"
        "400":
          description: |-
            Bad Request

            List of supported error codes:
            - 20: Invalid URL parameter value
            - 21: Missing body
            - 22: Invalid body
            - 23: Missing body field
            - 24: Invalid body field
            - 25: Missing header
            - 26: Invalid header value
            - 27: Missing query-string parameter
            - 28: Invalid query-string parameter value
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "401":
          description: |-
            Unauthorized

            List of supported error codes:
            - 40: Missing credentials
            - 41: Invalid credentials
            - 42: Expired credentials
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "403":
          description: |-
            Forbidden

            List of supported error codes:
            - 50: Access denied
            - 51: Forbidden requester
            - 52: Forbidden user
            - 53: Too many requests
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "404":
          description: |-
            Not Found

            List of supported error codes:
            - 60: Resource not found
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "405":
          description: |-
            Method Not Allowed

            List of supported error codes:
            - 61: Method not allowed
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "422":
          description: |-
            Unprocessable entity

            Functional error





             - code: 101
            message: A relatedPartyRole for Buyer role must be provided
            description: 


             - code: 103
            message: A relatedPartyRole is incomplete (must have partyRole.id or role.id+relatedParty)
            description: 


             - code: 104
            message: A relatedParty is incomplete (must have a party.id or a party.name)
            description: 


             - code: 105
            message: Qualification Id provided did not exist or expired
            description: 


             - code: 106
            message: At least a productOffering Id or a product.id or a productSpec.id must be provided in quote item
            description: 


             - code: 107
            message: inconsistency between  requestedQuoteCompletionDate and expectedFulfillmentStartDate
            description: 


             - code: 108
            message: Seller requires agreement under which the buyer is requesting but is missing from the request.
            description: 


             - code: 109
            message: The agreement provided cannot be validated by the seller
            description: 


             - code: 110
            message: Product requested is not part of the provided agreement
            description: 


             - code: 111
            message: Mandatory product/item relationship is missing
            description:
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "500":
          description: |-
            Internal Server Error

            List of supported error codes:
            - 1: Internal error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "503":
          description: |+
            Service Unavailable

          schema:
            $ref: "#/definitions/ErrorRepresentation"
  /quoteManagement/v2/quote/requestStateChange:
    post:
      description: |-
        Request from buyer to cancel or reject a quote.
        When seller receive cancel request, seller will shift quote state to CANCELLED (no change on order item state)
        When seller receive reject request, seller will shift quote state to REJECTED (no change on order item state)
      consumes:
        - application/json;charset=utf-8
      produces:
        - application/json;charset=utf-8
      tags:
        - Quote
      summary: request a quote state change
      security:
        - bearer: [ "customer","admin" ]
      operationId: quoteRequestStateChange
      parameters:
        - name: changeQuoteStateRequest
          in: body
          required: true
          schema:
            $ref: "#/definitions/ChangelQuoteStateRequest"
      responses:
        "200":
          description: Ok
          schema:
            $ref: "#/definitions/ChangeQuoteStateResponse"
        "400":
          description: |-
            Bad Request

            List of supported error codes:
            - 20: Invalid URL parameter value
            - 21: Missing body
            - 22: Invalid body
            - 23: Missing body field
            - 24: Invalid body field
            - 25: Missing header
            - 26: Invalid header value
            - 27: Missing query-string parameter
            - 28: Invalid query-string parameter value
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "401":
          description: |-
            Unauthorized

            List of supported error codes:
            - 40: Missing credentials
            - 41: Invalid credentials
            - 42: Expired credentials
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "403":
          description: |-
            Forbidden

            List of supported error codes:
            - 50: Access denied
            - 51: Forbidden requester
            - 52: Forbidden user
            - 53: Too many requests
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "404":
          description: |-
            Not Found

            List of supported error codes:
            - 60: Resource not found
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "405":
          description: |-
            Method Not Allowed

            List of supported error codes:
            - 61: Method not allowed
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "422":
          description: |-
            Unprocessable entity

            Functional error





             - code: 100
            message: Quote current status is incompatible with requested quote state change
            description: 


             - code: 101
            message: Quote external Id provided did not match
            description:
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "500":
          description: |-
            Internal Server Error

            List of supported error codes:
            - 1: Internal error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "503":
          description: |+
            Service Unavailable

          schema:
            $ref: "#/definitions/ErrorRepresentation"
  "/quoteManagement/v2/quote/{id}":
    get:
      description: This operation is used to retrieve quote information using the ID.
      produces:
        - application/json;charset=utf-8
      tags:
        - Quote
      summary: Retrieve a quote
      operationId: quoteGet
      security:
        - bearer: [ "customer","admin" ]
      parameters:
        - type: string
          name: id
          in: path
          required: true
      responses:
        "200":
          description: Ok
          schema:
            $ref: "#/definitions/Quote"
        "400":
          description: |-
            Bad Request

            List of supported error codes:
            - 20: Invalid URL parameter value
            - 21: Missing body
            - 22: Invalid body
            - 23: Missing body field
            - 24: Invalid body field
            - 25: Missing header
            - 26: Invalid header value
            - 27: Missing query-string parameter
            - 28: Invalid query-string parameter value
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "401":
          description: |-
            Unauthorized

            List of supported error codes:
            - 40: Missing credentials
            - 41: Invalid credentials
            - 42: Expired credentials
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "403":
          description: |-
            Forbidden

            List of supported error codes:
            - 50: Access denied
            - 51: Forbidden requester
            - 52: Forbidden user
            - 53: Too many requests
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "404":
          description: |-
            Not Found

            List of supported error codes:
            - 60: Resource not found
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "405":
          description: |-
            Method Not Allowed

            List of supported error codes:
            - 61: Method not allowed
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "422":
          description: |-
            Unprocessable entity

            Functional error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "500":
          description: |-
            Internal Server Error

            List of supported error codes:
            - 1: Internal error
          schema:
            $ref: "#/definitions/ErrorRepresentation"
        "503":
          description: |+
            Service Unavailable

          schema:
            $ref: "#/definitions/ErrorRepresentation"
definitions:
  Agreement:
    description: "Agreement reference. An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement."
    type: object
    required:
      - id
    properties:
      id:
        description: Unique identifier of the agreement
        type: string
      name:
        description: Name of the agreement
        type: string
      path:
        description: A URI/URL to where the agreement resides.
        type: string
  AgreementRef:
    description: "An agreement represents a contract or arrangement, either written or verbal and sometimes enforceable by law, such as a service level agreement or a customer price agreement. An agreement involves a number of other business entities, such as products, services, and resources and/or their specifications."
    type: object
    required:
      - id
      - name
      - path
    properties:
      href:
        description: Reference of the agreement
        type: string
      id:
        description: Id of the agreement
        type: string
      name:
        description: Name of the agreement
        type: string
      path:
        description: A URI/URL providing the path to where an agreement resides.
        type: string
  AlternateProductProposal:
    description: "If in the request the buyer has requested to have alternate product proposals, then this class represents these proposals."
    type: object
    required:
      - id
    properties:
      "@type":
        description: Technical attribute to extend the class.
        type: string
      eligibleProductOffering:
        type: array
        items:
          $ref: "#/definitions/ProductOfferingRef"
      id:
        description: Identifier of the Product Offering Qualification alternate proposal
        type: string
      installationInterval:
        $ref: "#/definitions/TimeInterval"
      productSpecification:
        $ref: "#/definitions/ProductSpecificationRef"
  BillingAccountRef:
    description: An arrangement that a customer has with an enterprise that provides products to the customer.
    type: object
    required:
      - id
    properties:
      id:
        description: An unique identifier of the billing account
        type: string
  CancelProductOrder:
    description: Structure to allow Seller to answer to a cancel order request
    type: object
    required:
      - id
      - state
      - requestedCancellationDate
      - productOrder
    properties:
      "@schemaLocation":
        description: Technical attribute to extend this class.
        type: string
      "@type":
        description: Technical attribute to extend this class.
        type: string
      cancellationDeniedReason:
        description: If seller denied cancellation request he could here provide reason for this denial
        type: string
      cancellationReason:
        description: An optional free-form text field for the Seller to provide additional information regarding the reason for the cancellation.
        type: string
      href:
        description: Hyperlink to access order cancellation request.This is not a product order href.
        type: string
      id:
        description: Unique identifier for the order cancellation request that is generated by the Seller when the order cancellation is accepted via an API. This is not the order id.
        type: string
      productOrder:
        $ref: "#/definitions/ProductOrderRefCancel"
      requestedCancellationDate:
        description: Identifies the date the Seller cancelled the Order.
        type: string
        format: date-time
      state:
        $ref: "#/definitions/TaskStateType"
  CancelProductOrder_Create:
    type: object
    required:
      - requestedCancellationDate
      - productOrder
    properties:
      "@schemaLocation":
        description: Technical attribute to extend this class.
        type: string
      "@type":
        description: Technical attribute to extend this class.
        type: string
      cancellationReason:
        description: An optional free-form text field for the Seller to provide additional information regarding the reason for the cancellation.
        type: string
      productOrder:
        $ref: "#/definitions/ProductOrderRefCancel"
      requestedCancellationDate:
        description: Identifies the date the Seller cancelled the Order.
        type: string
        format: date-time
  ChangeQuoteStateResponse:
    description: Structure to response for a quote cancellation/rejection request
    type: object
    required:
      - id
      - quoteEffectiveStateChangeDate
      - state
    properties:
      externalId:
        description: External Id of the quote (buyer quote id). If provided by seller this information is send back in the response.
        type: string
      id:
        description: id of the quote to be cancelled
        type: string
      quoteEffectiveStateChangeDate:
        description: Cancellation or rejection date (effective)
        type: string
        format: date-time
      state:
        $ref: "#/definitions/QuoteStateType"
  ChangelQuoteStateRequest:
    description: Structure used to request quote cancellation/rejection
    type: object
    required:
      - id
      - state
      - quoteChangeStateReason
    properties:
      externalId:
        description: External Id of the quote (buyer quote id). If provided seller will check consistence.
        type: string
      id:
        description: id of the quote to be cancelled
        type: string
      quoteChangeStateReason:
        description: Cancellation reason
        type: string
      state:
        $ref: "#/definitions/QuoteChangeState"
  ChargePeriod:
    type: string
    enum:
      - day
      - week
      - month
      - year
  Contact:
    description: Contact allow to capture contact information. It is used to capture billing account contact information
    type: object
    required:
      - contactName
      - phoneNumber
      - emailAdress
      - streetAdress
    properties:
      "@referredType":
        description: Technical attribut to extend API
        type: string
      contactName:
        description: Identifies the name of the person or office to be contacted on billing matters.
        type: string
      emailAdress:
        description: Identifies the electronic mail address of the Billing Contact when a Buyer profile does not already exist.
        type: string
      phoneNumber:
        description: Identifies the telephone number (excluding extension) of the billing contact
        type: string
      phoneNumberExtension:
        description: Identifies the telephone number extension of the billing contact
        type: string
      streetAdress:
        description: Identifies the address of the person or office to be contacted on billing matters.
        type: string
  Describing:
    description: Technical structure to describe productSpecification
    type: object
    required:
      - "@type"
      - "@schemaLocation"
    properties:
      "@schemaLocation":
        description: An URL to target a description file
        type: string
      "@type":
        description: Type of the resource
        type: string
  DesiredOrderResponses:
    description: The kind of responses that the buyer expects to receive from the seller.
    type: string
    enum:
      - confirmationAndEngineeringDesign
      - confirmationOnly
      - none
  Duration:
    description: "To describe a duration (period of time) with a value and an unit (day, month, etc...)"
    type: object
    required:
      - value
      - unit
    properties:
      unit:
        $ref: "#/definitions/DurationUnit"
      value:
        description: value of the duration
        type: integer
        format: int32
        default: 12
  DurationUnit:
    type: string
    enum:
      - DAY
      - WEEK
      - MONTH
      - YEAR
  ErrorRepresentation:
    description: Class used to describe API response error
    type: object
    required:
      - code
      - reason
    properties:
      "@schemaLocation":
        description: it provides a link to the schema describing a REST resource.
        type: string
      "@type":
        description: The class type of a REST resource.
        type: string
      code:
        description: Application related code (as defined in the API or from a common list)
        type: integer
        format: int32
      message:
        description: Text that provide more details and corrective actions related to the error. This can be shown to a client user.
        type: string
      reason:
        description: Text that explains the reason for error. This can be shown to a client user.
        type: string
      referenceError:
        description: url pointing to documentation describing the error
        type: string
      status:
        description: http error code extension like 400-2
        type: string
  QuoteEvent:
    description: "Event class is used to describe information structure used for notification."
    discriminator: "eventId"
    required:
    - "eventId"
    - "eventTime"
    - "eventType"
    - "event"
    type: "object"
    properties:
      eventId:
        description: "Id of the event"
        type: "string"
      eventTime:
        description: "Datetime when the event occurred"
        type: "string"
        format: "date-time"
      eventType:
        $ref: "#/definitions/QuoteEventType"
      event:
        $ref: "#/definitions/QuoteSummaryView"
  QuoteEventPlus:
    allOf:
      - $ref: "#/definitions/QuoteEvent"
      - type: object
        required:
          - resourcePath
          - fieldPath
        properties:
          fieldPath:
            type: array
            items:
              type: string
          resourcePath:
            type: string
  FieldedAddress:
    description: "A type of Address that has a discrete field and value for each type of boundary or identifier down to the lowest level of detail. For example “street number” is one field, “street name” is another field, etc."
    type: object
    properties:
      city:
        description: City that the address is in
        type: string
      country:
        description: Country that the address is in
        type: string
      geographicSubAddress:
        type: array
        items:
          $ref: "#/definitions/GeographicSubAddress"
      id:
        description: Unique identifier of the address
        type: string
      locality:
        description: '"An area of defined or undefined boundaries within a local authority or other legislatively defined area, usually rural or semi-rural in nature." [ANZLIC-STREET], or a suburb "a bounded locality within a city, town or shire principally of urban character " [ANZLICSTREET].'
        type: string
      postCodeExtension:
        description: "The four-digit extension on an American postal code, what comes after the hyphen when specified."
        type: string
      postcode:
        description: "Descriptor for a postal delivery area, used to speed and simplify the delivery of mail (also known as zipcode)"
        type: string
      stateOrProvince:
        description: The State or Province that the address is in
        type: string
      streetName:
        description: Name of the street or other street type
        type: string
      streetNr:
        description: Number identifying a specific property on a public street. It may be combined with streetNrLast for ranged addresses
        type: string
      streetNrLast:
        description: Last number in a range of street numbers allocated to a property
        type: string
      streetNrLastSuffix:
        description: Last street number suffix for a ranged address
        type: string
      streetNrSuffix:
        description: The first street number suffix
        type: string
      streetSuffix:
        description: A modifier denoting a relative direction
        type: string
      streetType:
        description: "Alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade, place, tarn, way, wharf"
        type: string
  FieldedAddressRequest:
    description: |-
      A type of Address that has a discrete field and value for each type of boundary or identifier down to the lowest level of detail. For example “street number” is one field, “street name” is another field, etc.
      This structure is used in the request addressValidation only
    type: object
    properties:
      city:
        description: City that the address is in
        type: string
      country:
        description: Country that the address is in
        type: string
      geographicSubAddress:
        $ref: "#/definitions/GeographicSubAddressRequest"
      locality:
        description: '"An area of defined or undefined boundaries within a local authority or other legislatively defined area, usually rural or semi-rural in nature." [ANZLIC-STREET], or a suburb "a bounded locality within a city, town or shire principally of urban character " [ANZLICSTREET].'
        type: string
      postCodeExtension:
        description: "The four-digit extension on an American postal code, what comes after the hyphen when specified."
        type: string
      postcode:
        description: "Descriptor for a postal delivery area, used to speed and simplify the delivery of mail (also known as zipcode)"
        type: string
      stateOrProvince:
        description: The State or Province that the address is in
        type: string
      streetName:
        description: Name of the street or other street type
        type: string
      streetNr:
        description: Number identifying a specific property on a public street. It may be combined with streetNrLast for ranged addresses
        type: string
      streetNrLast:
        description: Last number in a range of street numbers allocated to a property
        type: string
      streetNrLastSuffix:
        description: Last street number suffix for a ranged address
        type: string
      streetNrSuffix:
        description: The first street number suffix
        type: string
      streetSuffix:
        description: A modifier denoting a relative direction
        type: string
      streetType:
        description: "Alley, avenue, boulevard, brae, crescent, drive, highway, lane, terrace, parade, place, tarn, way, wharf"
        type: string
  FormattedAddress:
    description: "A type of Address that has discrete fields for each type of boundary or identifier with the exception of street and more specific location details, which are combined into a maximum of two strings based on local postal addressing conventions"
    type: object
    required:
      - addrLine1
    properties:
      addrLine1:
        description: The first address line in a formatted address
        type: string
      addrLine2:
        description: The second address line in a formatted address
        type: string
      city:
        description: City that the address is in
        type: string
      country:
        description: Country that the address is in
        type: string
      id:
        description: Unique identifier of the address
        type: string
      locality:
        description: '"An area of defined or undefined boundaries within a local authority or other legislatively defined area, usually rural or semi-rural in nature." [ANZLIC-STREET], or a suburb "a bounded locality within a city, town or shire principally of urban character " [ANZLICSTREET].'
        type: string
      postCodeExtension:
        description: "The four-digit extension on an American postal code, what comes after the hyphen when specified."
        type: string
      postcode:
        description: "Descriptor for a postal delivery area, used to speed and simplify the delivery of mail (also known as zipcode)"
        type: string
      stateOrProvince:
        description: The State or Province that the address is in
        type: string
  FormattedAddressRequest:
    description: "A type of Address that has discrete fields for each type of boundary or identifier with the exception of street and more specific location details, which are combined into a maximum of two strings based on local postal addressing conventions"
    type: object
    required:
      - addrLine1
    properties:
      addrLine1:
        description: The first address line in a formatted address
        type: string
      addrLine2:
        description: The second address line in a formatted address
        type: string
      city:
        description: City that the address is in
        type: string
      country:
        description: Country that the address is in
        type: string
      locality:
        description: '"An area of defined or undefined boundaries within a local authority or other legislatively defined area, usually rural or semi-rural in nature." [ANZLIC-STREET], or a suburb "a bounded locality within a city, town or shire principally of urban character " [ANZLICSTREET].'
        type: string
      postCodeExtension:
        description: "The four-digit extension on an American postal code, what comes after the hyphen when specified."
        type: string
      postcode:
        description: "Descriptor for a postal delivery area, used to speed and simplify the delivery of mail (also known as zipcode)"
        type: string
      stateOrProvince:
        description: The State or Province that the address is in
        type: string
  GeographicAddress:
    description: An address is a structured textual way of describing how to find a Property in an urban area (country properties are often defined differently)
    type: object
    properties:
      "@schemaLocation":
        description: Technical attribute to extend this class
        type: string
      "@type":
        description: Technical attribute to extend this class
        type: string
      allowsNewSite:
        description: "This attribute specifies if a Buyer must use one of the known existing Service Sites at this location for any Products delivered to this Address.  For example, if a particular building owner mandated that all interconnects be done in a shared Public Meet-Me-Room, this attribute would be set to False for that Address."
        type: boolean
      fieldedAddress:
        $ref: "#/definitions/FieldedAddress"
      formattedAddress:
        $ref: "#/definitions/FormattedAddress"
      geographicLocation:
        $ref: "#/definitions/GeographicLocation"
      hasPublicSite:
        description: This attribute specifies if that Address contains Service Sites that are public such as Meet-Me-Rooms at an interconnect location or a shared telecom room in the basement of a multi-tenant building.
        type: boolean
      id:
        description: Unique identifier of the address
        type: string
      referencedAddress:
        $ref: "#/definitions/ReferencedAddress"
  GeographicAddressFindResp:
    description: Structure used to describe geographic address in response to GET geographicalSite
    type: object
    properties:
      fieldedAddress:
        $ref: "#/definitions/FieldedAddress"
      formattedAddress:
        $ref: "#/definitions/FormattedAddress"
  GeographicAddressRequestBuyerInput:
    description: Structure used by the buyer to request geographic address validation
    type: object
    properties:
      fieldedAddress:
        $ref: "#/definitions/FieldedAddressRequest"
      formattedAddress:
        $ref: "#/definitions/FormattedAddressRequest"
  GeographicAddressSellerResponse:
    description: An address is a structured textual way of describing how to find a Property in an urban area (country properties are often defined differently)
    type: object
    required:
      - isBestMatch
    properties:
      "@schemaLocation":
        description: Technical attribute to extend this class
        type: string
      "@type":
        description: Technical attribute to extend this class
        type: string
      allowsNewSite:
        description: "This attribute specifies if a Buyer must use one of the known existing Service Sites at this location for any Products delivered to this Address.  For example, if a particular building owner mandated that all interconnects be done in a shared Public Meet-Me-Room, this attribute would be set to False for that Address."
        type: boolean
      fieldedAddress:
        $ref: "#/definitions/FieldedAddress"
      formattedAddress:
        $ref: "#/definitions/FormattedAddress"
      hasPublicSite:
        description: This attribute specifies if that Address contains Service Sites that are public such as Meet-Me-Rooms at an interconnect location or a shared telecom room in the basement of a multi-tenant building
        type: boolean
      id:
        description: Unique identifier of the address
        type: string
      isBestMatch:
        description: "For each Address returned, this attribute specifies if the Seller believes this is the best match to the Buyer specified Address.  Setting this to TRUE also represents that the Seller believes this is likely a direct match to the Buyer Specified Address."
        type: boolean
  GeographicAddressValidation:
    description: |-
      Resource used to support a request for a validation address : check if a geographic address described by values attributes exists)
      If exist, id is provided
      if not, alternate address(es) could be provided
    type: object
    required:
      - requestedAddress
    properties:
      id:
        description: Unique identifier of the Address Validation (Not an address id !!)
        type: string
      requestedAddress:
        $ref: "#/definitions/GeographicAddressRequestBuyerInput"
      validationDate:
        description: Date when the address validation is performed
        type: string
        format: date-time
      validationResult:
        $ref: "#/definitions/ValidationResult"
      verifiedAddress:
        type: array
        items:
          $ref: "#/definitions/GeographicAddressSellerResponse"
  GeographicAddressValidation_Create:
    description: Structure used to describe a geographic address validation request
    type: object
    required:
      - requestedAddress
    properties:
      requestedAddress:
        $ref: "#/definitions/GeographicAddressRequestBuyerInput"
  GeographicLocation:
    description: A set of coordinates (typically including latitude and longitude) that describes a particular location on earth.
    type: object
    required:
      - spatialRef
      - geographicPoint
    properties:
      geographicPoint:
        type: array
        items:
          $ref: "#/definitions/GeographicPoint"
      id:
        description: Unique Identifier of a GeographicLocation
        type: string
      spatialRef:
        description: The spatial reference system used to determine the coordinates
        type: string
  GeographicPoint:
    description: "A geometric point on earth, which can include a latitude, longitude, and elevation in “decimal degrees” format."
    type: object
    required:
      - latitude
      - longitude
    properties:
      id:
        description: "A unique identifier for the geographic point."
        type: string
      latitude:
        description: The latitude expressed in decimal degrees format
        type: string
      longitude:
        description: The longitude expressed in decimal degrees format
        type: string
  GeographicSite:
    description: |-
      Designated as Service Site in TS.
      A fixed physical location at which a Product can be installed.  Its location can be described either with geocodes (Lat/Long information) or by association with an Address or Address Reference.  This association may include a Sub-address describing where within that Address or Address Reference, this particular Service Site is located.
    type: object
    properties:
      "@schemaLocation":
        description: Technical attribute to extend this class
        type: string
      "@type":
        description: Technical attribute to extend this class
        type: string
      additionnalSiteInformation:
        description: Additional site information
        type: string
      description:
        description: A textual description of the Service Site.
        type: string
      fieldedAddress:
        $ref: "#/definitions/FieldedAddress"
      formattedAdress:
        $ref: "#/definitions/FormattedAddress"
      geographicLocation:
        $ref: "#/definitions/GeographicLocation"
      id:
        description: Identifier of the Service Site unique within the Seller.
        type: string
      referencedAddress:
        $ref: "#/definitions/ReferencedAddress"
      relatedParty:
        type: array
        items:
          $ref: "#/definitions/RelatedParty"
      siteCompanyName:
        description: "The name of the company that is the administrative authority (e.g. controls access) for this Service Site. (For example, the building owner)"
        type: string
      siteCustomerName:
        description: "The name of the company that is the administrative authority for the space within this Service Site. (For example, the company leasing space in a multi-tenant building)."
        type: string
      siteName:
        description: A name commonly used by people to refer to this Service Site.
        type: string
      siteType:
        description: "This defines whether a Service Site is public or private.  “PUBLIC” means that the existence of this Service Site is public information.  A meet-me-room in a hosted data center facility (where all interconnects between parties take place) is an example of a public Service Site.  A shared facility in the basement of a multi-tenant business building where all interconnects between parties take place is another example of a public Service Site.  “PRIVATE” means that the existence of this Service Site is on a need-to-know basis.  A wiring closet set up inside a customer facility just to connect two parties is an example of a private Service Site. For “PRIVATE” sites, the Seller does not return any information regarding the existence of this Service Site unless it has been established that this Buyer is authorized to obtain this information."
        type: string
      status:
        $ref: "#/definitions/Status"
  GeographicSiteFindResp:
    description: Technical structure to provide site list retrieve in the GET operation
    type: object
    properties:
      geographicAddress:
        $ref: "#/definitions/GeographicAddressFindResp"
      id:
        description: id of the site. This is coud be used in other API as a place
        type: string
      siteCompanyName:
        description: "The name of the company that is the administrative authority (e.g. controls access) for this Service Site. (For example, the building owner)"
        type: string
      siteContactName:
        description: Name of the relatedParty which has role 'Site Contact' in the Site record.
        type: string
      siteCustomerName:
        description: "The name of the company that is the administrative authority for the space within this Service Site. (For example, the company leasing space in a multi-tenant building)."
        type: string
      siteDescription:
        description: A textual description of the Service Site.
        type: string
      siteName:
        description: A name commonly used by people to refer to this Service Site.
        type: string
      siteType:
        description: This defines whether a Service Site is public or private.
        type: string
      status:
        $ref: "#/definitions/Status"
  GeographicSubAddress:
    description: "It is used for addressing within a property in an urban area (country properties are often defined differently). It may refer to a building, a building cluster, or a floor of a multistory building."
    type: object
    properties:
      "@schemaLocation":
        description: Technical attribute to extend this class
        type: string
      "@type":
        description: Technical attribute to extend this class
        type: string
      buildingName:
        description: Allows for buildings that have well-known names
        type: string
      id:
        description: Unique Identifier of the subAddress
        type: string
      levelNumber:
        description: "Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2"
        type: string
      levelType:
        description: Describes level types within a building
        type: string
      privateStreetName:
        description: Private streets internal to a property (e.g. a university) may have internal names that are not recorded by the land title office
        type: string
      privateStreetNumber:
        description: Private streets numbers internal to a private street
        type: string
      subUnit:
        type: array
        items:
          $ref: "#/definitions/SubUnit"
  GeographicSubAddressRequest:
    description: "It is used for addressing within a property in an urban area (country properties are often defined differently). It may refer to a building, a building cluster, or a floor of a multistory building."
    type: object
    properties:
      "@schemaLocation":
        description: Technical attribute to extend this class
        type: string
      "@type":
        description: Technical attribute to extend this class
        type: string
      buildingName:
        description: Allows for buildings that have well-known names
        type: string
      levelNumber:
        description: "Used where a level type may be repeated e.g. BASEMENT 1, BASEMENT 2"
        type: string
      levelType:
        description: Describes level types within a building
        type: string
      privateStreetName:
        description: Private streets internal to a property (e.g. a university) may have internal names that are not recorded by the land title office
        type: string
      privateStreetNumber:
        description: Private streets numbers internal to a private street
        type: string
      subUnit:
        type: array
        items:
          $ref: "#/definitions/SubUnit"
  Hub:
    description: This resource is used to manage notification subscription.
    type: object
    required:
      - id
      - callback
      - query
    properties:
      callback:
        description: This callback address is an url. the norification will be sent to this url address
        type: string
      id:
        description: id of the Hub
        type: string
      query:
        description: 'This attribute is used to define notification type. Example: ","query":”eventType = ProductOfferingQualificationStateChangeNotification”}'
        type: string
  HubInput:
    description: This class is used to request a HUB creation - Used in the POST operation.
    type: object
    required:
      - callback
      - query
    properties:
      callback:
        description: "This attribute is the callback url where event will be sent when occurs, for instance an url http://yourdomain/listener/api/v1/event"
        type: string
      query:
        description: 'This attribute is used to define notification type. Example: ","query":”eventType = ProductOfferingQualificationStateChangeNotification”}'
        type: string
  ItemTerm:
    description: Used to describe a term (also know as commitment) for a quote item
    type: object
    required:
      - duration
    properties:
      description:
        description: Description of the term
        type: string
      duration:
        $ref: "#/definitions/Duration"
      name:
        description: Name of the term
        type: string
  Money:
    description: base / value business entity used to represent money
    type: object
    required:
      - value
      - unit
    properties:
      unit:
        description: Currency (ISO4217 norm uses 3 letters to define the currency
        type: string
      value:
        description: A positive floating point number
        type: number
        format: float
  Note:
    description: Free form text to clarify or explain the order.
    type: object
    required:
      - text
      - date
      - author
    properties:
      author:
        description: The author of the note
        type: string
      date:
        description: "The date of the note. Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00)."
        type: string
        format: date-time
      text:
        description: The text of the note
        type: string
  Notification:
    description: This class is created only to gather Notification data structure. This structure must be send to the callback url provided in the HUB resource.
    type: object
  OrderActivity:
    description: The type of order as defined by the business.
    type: string
    enum:
      - install
      - change
      - disconnect
  OrderItem:
    description: An enumeration of the entities that are part of this order expressed in terms of a Product Offering or a Product (for a change order).
    type: object
    required:
      - id
      - action
      - state
    properties:
      "@schemaLocation":
        description: Target a description file of productOrder extension
        type: string
      "@type":
        description: Type of productOrder
        type: string
      action:
        $ref: "#/definitions/ProductActionType"
      billingAccount:
        $ref: "#/definitions/BillingAccountRef"
      id:
        description: "Identifier of the line item (generally it is a sequence number 01, 02, 03, ...)"
        type: string
      orderItemPrice:
        type: array
        items:
          $ref: "#/definitions/OrderItemPrice"
      orderItemRelationship:
        type: array
        items:
          $ref: "#/definitions/OrderItemRelationShip"
      pricingMethod:
        $ref: "#/definitions/PricingMethod"
      pricingReference:
        description: "The identifier references the previously agreed upon pricing terms, as applicable, based on the pricingMethod (e.g. a contract id or tariff id."
        type: string
      pricingTerm:
        description: The length of the contract in months
        type: integer
        format: int32
      product:
        $ref: "#/definitions/Product"
      productOffering:
        $ref: "#/definitions/ProductOfferingRef"
      qualification:
        $ref: "#/definitions/QualificationRef"
      quote:
        $ref: "#/definitions/QuoteRef"
      relatedParty:
        type: array
        items:
          $ref: "#/definitions/RelatedParty"
      state:
        $ref: "#/definitions/ProductOrderItemStateType"
      stateChange:
        type: array
        items:
          $ref: "#/definitions/StateChange"
  OrderItemEvent:
    type: object
    required:
      - id
      - action
      - state
    properties:
      "@schemaLocation":
        description: Target a description file of productOrder extension
        type: string
      "@type":
        description: Type of productOrder
        type: string
      action:
        $ref: "#/definitions/ProductActionType"
      billingAccount:
        $ref: "#/definitions/BillingAccountRef"
      id:
        description: "Identifier of the line item (generally it is a sequence number 01, 02, 03, ...)"
        type: string
      product:
        $ref: "#/definitions/ProductEvent"
      state:
        $ref: "#/definitions/ProductOrderItemStateType"
  OrderItemPrice:
    description: |-
      Structure used to define a product price.
      An order item could have 0-* order item price.
    type: object
    required:
      - priceType
      - name
      - price
    properties:
      "@type":
        description: Technical attribute to extend the class
        type: string
      description:
        description: A narrative that explains in detail the semantics of yhis order item price
        type: string
      name:
        description: Name of the product price
        type: string
      price:
        $ref: "#/definitions/Price"
      priceType:
        $ref: "#/definitions/PriceType"
      recurringChargePeriod:
        $ref: "#/definitions/ChargePeriod"
  OrderItemRelationShip:
    description: This class allows the ability to associate one order item to another order item.
    type: object
    required:
      - type
      - id
    properties:
      id:
        description: The id of the targeted order item by the relationship
        type: string
      productOrderId:
        description: Id of another product order if this relationship is between two distinct orders.
        type: string
      type:
        description: Indicates the type of order item relationship
        type: string
  OrderMessage:
    description: An optional array of messages associated with the Order
    type: object
    required:
      - messageInformation
      - severity
    properties:
      code:
        description: The code associated with the Message
        type: string
      correctionRequired:
        description: Indicates whether the Buyer must submit an updated Order to resolve the Error/Jeopardy condition.
        type: boolean
        default: false
      field:
        description: The field/attribute on the Order associated with message
        type: string
      messageInformation:
        description: A description of the error condition or information to be conveyed to the Buyer
        type: string
      severity:
        $ref: "#/definitions/Severity"
  Price:
    description: Provides pre tax amount for a product
    type: object
    properties:
      "@type":
        description: Technical attribute to extend this class
        type: string
      dutyFreeAmount:
        $ref: "#/definitions/Money"
      taxIncludedAmount:
        $ref: "#/definitions/Money"
      taxRate:
        description: Applied tax rate on amount
        type: number
        format: float
  PriceAlteration:
    description: "Is an amount, usually of money, that modifies the price charged for an order item"
    type: object
    required:
      - priceType
    properties:
      "@schemaLocation":
        description: Link to the schema describing this REST resource
        type: string
      "@type":
        description: Indicates the (class) type of the price alteration
        type: string
      applicationDuration:
        description: Duration during which the alteration applies on the order item price (for instance 2 months free of charge for the recurring charge).
        type: integer
        format: int32
      description:
        description: A narrative that explains in detail the semantics of this order item price alteration.
        type: string
      name:
        description: A short descriptive name such as "Monthly discount".
        type: string
      percentage:
        type: number
        format: float
      price:
        $ref: "#/definitions/Price"
      priceType:
        description: "A category that describes the price such as recurring, one time and usage."
        type: string
      priority:
        description: Priority level for applying this alteration among all the defined alterations on the order item price
        type: integer
        format: int32
      recurringChargePeriod:
        description: "Could be month, week..."
        type: string
      unitOfMeasure:
        description: "Could be minutes, GB..."
        type: string
  PriceRange:
    description: PriceRange class allows to describe a range of price (Min/Max) for budgetary or indicative quote.
    type: object
    required:
      - minPreTaxAmount
      - maxPreTaxAmount
    properties:
      maxPreTaxAmount:
        $ref: "#/definitions/Money"
      minPreTaxAmount:
        $ref: "#/definitions/Money"
  PriceType:
    type: string
    enum:
      - recurring
      - nonRecurring
  PricingMethod:
    description: An enumeration of valid pricing methods for ordered items
    type: string
    enum:
      - tariff
      - contract
      - individualCaseBasis
      - other
  Product:
    description: One or more services sold to a Buyer by a Seller.  A particular Product Offering defines the technical and commercial attributes and behav-iors of a Product.
    type: object
    required:
      - id
      - status
      - startDate
    properties:
      "@baseType":
        description: |-
          the Base Type of the product if specialization.
          This is a technical attribute to extend this class.
        type: string
      "@schemaLocation":
        description: |-
          A pointer to a file describing extension attributes (if used).
          This is a technical attribute to extend this class.
        type: string
      "@type":
        description: The type of product if specialization
        type: string
      agreement:
        type: array
        items:
          $ref: "#/definitions/Agreement"
      billingAccount:
        type: array
        items:
          $ref: "#/definitions/BillingAccountRef"
      buyerProductId:
        description: This identifier is optionally provided during the Product ordering and stored for informative purpose in the Seller inventory.
        type: string
      href:
        description: Reference of the product (link)
        type: string
      id:
        description: Unique identifier of the product in the product domain.
        type: string
      lastUpdateDate:
        description: Latest date when the product has been updated
        type: string
        format: date-time
      productOffering:
        $ref: "#/definitions/ProductOfferingRef"
      productOrder:
        type: array
        items:
          $ref: "#/definitions/ProductOrderRef"
      productPrice:
        type: array
        items:
          $ref: "#/definitions/ProductPrice"
      productRelationship:
        type: array
        items:
          $ref: "#/definitions/ProductRelationship"
      productSpecification:
        $ref: "#/definitions/ProductSpecificationRef"
      productTerm:
        type: array
        items:
          $ref: "#/definitions/ProductTerm"
      relatedParty:
        type: array
        items:
          $ref: "#/definitions/RelatedParty"
      site:
        type: array
        items:
          $ref: "#/definitions/GeographicSite"
      startDate:
        description: Start date is when the product is active for the first time (when the install in the product order has been processed).
        type: string
        format: date-time
      status:
        $ref: "#/definitions/ProductStatus"
      statusChange:
        type: array
        items:
          $ref: "#/definitions/StatusChange"
      terminationDate:
        description: Termination date (commercial) is when the product has been terminated (when the disconnect in the product order has been processed).
        type: string
        format: date-time
  ProductActionType:
    description: Action to be performed on the Product
    type: string
    enum:
      - add
      - change
      - remove
      - noChange
  ProductEvent:
    description: Product structure used for notification
    type: object
    properties:
      buyerProductId:
        description: Buyer product Id - informative information
        type: string
      id:
        description: Unique (within the product domain) identifier for the product that is generated by the seller when the product is instantiated.
        type: string
      productSpecification:
        $ref: "#/definitions/ProductSpecification"
      relatedParty:
        type: array
        items:
          $ref: "#/definitions/RelatedParty"
  PoEvent:
    description: "Event class is used to describe information structure used for notification."
    discriminator: "eventId"
    required:
    - "eventId"
    - "eventType"
    - "eventTime"
    - "event"
    type: "object"
    properties:
      eventId:
        description: ""
        type: "string"
      eventType:
        $ref: "#/definitions/ProductOrderEventType"
      eventTime:
        description: ""
        type: "string"
        format: "date-time"
      event:
        $ref: "#/definitions/ProductOrderEvent"
  PoEventPlus:
    description: ""
    allOf:
    - $ref: "#/definitions/PoEvent"
    - required:
      - "resourcePath"
      - "fieldPath"
      type: "object"
      properties:
        resourcePath:
          description: ""
          type: "string"
        fieldPath:
          description: ""
          type: "array"
          items:
            type: "string"
  ProductOfferingQualification:
    description: A grouping of POQ Items formulated into a request made by a Buyer to a Seller
    type: object
    required:
      - id
      - state
      - relatedParty
      - productOfferingQualificationItem
    properties:
      "@schemaLocation":
        description: Technical attribute to extend the class
        type: string
      "@type":
        description: "When\_sub-classing,\_this\_defines\_the\_sub-class\_entity\_name"
        type: string
      effectiveQualificationCompletionDate:
        description: Effective date seller provides qualification result.
        type: string
        format: date-time
      expectedResponseDate:
        description: The date the seller is expected to provide qualification result.
        type: string
        format: date-time
      href:
        description: Link to this POQ resource
        type: string
      id:
        description: The Serviceability Request's unique identifier.
        type: string
      instantSyncQualification:
        description: "If this flag is set to Yes, Buyer requests to have instant qualificationto be provided in operation POST response"
        type: boolean
        default: false
      productOfferingQualificationItem:
        type: array
        minItems: 1
        items:
          $ref: "#/definitions/ProductOfferingQualificationItem"
      projectId:
        description: This value MAY be assigned by the Buyer/Seller to identify a project the serviceability request is associated with.
        type: string
      provideAlternative:
        description: This Boolean allows requester (buyer) to indicate if he is willing to get alternate proposal if requested product not available.
        type: boolean
      relatedParty:
        type: array
        items:
          $ref: "#/definitions/RelatedParty"
      requestedResponseDate:
        description: Corresponds to desiredResponseDate - The date a response for the service request is desired.
        type: string
        format: date-time
      state:
        $ref: "#/definitions/ProductOfferingQualificationStateType"
      stateChange:
        type: array
        items:
          $ref: "#/definitions/StateChange"
  ProductOfferingQualificationItem:
    description: An individual article included in a POQ that describes a Product of a particular type (Product Offering) being delivered to a specific geographical location.  The objective is to determine if it is feasible for the Seller to deliver this item as described and for the Seller to inform the Buyer of the estimated time interval to complete this delivery.
    type: object
    required:
      - id
      - state
      - action
    properties:
      "@type":
        description: "When\_sub-classing,\_this\_defines\_the\_sub-class\_entity\_name"
        type: string
      action:
        $ref: "#/definitions/ProductActionType"
      alternateProductProposal:
        type: array
        items:
          $ref: "#/definitions/AlternateProductProposal"
      eligibleProductOffering:
        type: array
        items:
          $ref: "#/definitions/ProductOfferingRef"
      guaranteedUntilDate:
        description: Date until seller is guaranted the qualification result.
        type: string
        format: date-time
      id:
        description: Id of this POQ item
        type: string
      installationInterval:
        $ref: "#/definitions/TimeInterval"
      product:
        $ref: "#/definitions/Product"
      productOffering:
        $ref: "#/definitions/ProductOfferingRef"
      productOfferingQualificationItemRelationship:
        type: array
        items:
          $ref: "#/definitions/ProductOfferingQualificationItemRelationship"
      relatedParty:
        type: array
        items:
          $ref: "#/definitions/RelatedParty"
      serviceConfidenceReason:
        description: A description of the reason a particular color is being provided. This may include a specific standard reason codes and descriptions.
        type: string
      serviceabilityConfidence:
        $ref: "#/definitions/ServiceabilityColor"
      state:
        $ref: "#/definitions/ProductOfferingQualificationItemStateType"
      stateChange:
        type: array
        items:
          $ref: "#/definitions/StateChange"
      terminationError:
        type: array
        items:
          $ref: "#/definitions/TerminationError"
  ProductOfferingQualificationItemRelationship:
    description: The relationship between product offering qualification items that can be used to validate business rules between POQ Items
    type: object
    required:
      - type
      - id
    properties:
      id:
        description: id of the targeted POQ item
        type: string
      type:
        $ref: "#/definitions/RelationshipType"
  ProductOfferingQualificationItemStateType:
    description: POQ item states - The specific states are managed by the Seller based on its processing and/or based on Buyer's action.
    type: string
    enum:
      - done
      - terminatedWithError.unableToProvide
      - terminatedWithError.insufficientInformationProvided
      - inProgress
  ProductOfferingQualificationItem_Create:
    description: |-
      This structure serves as a request for a product offering qualification item
      An individual article included in a POQ that describes a Product of a particular type (Product Offering) being delivered to a specific geographical location.  The objective is to determine if it is feasible for the Seller to deliver this item as described and for the Seller to inform the Buyer of the estimated time interval to complete this delivery.
    type: object
    required:
      - id
      - product
    properties:
      "@type":
        description: "When\_sub-classing,\_this\_defines\_the\_sub-class\_entity\_name"
        type: string
      action:
        $ref: "#/definitions/ProductActionType"
      id:
        description: |-
          Id of the productOfferingQualification item.
          This id must be unique within POQ create request
        type: string
      product:
        $ref: "#/definitions/Product"
      productOffering:
        $ref: "#/definitions/ProductOfferingRef"
      productOfferingQualificationItemRelationship:
        type: array
        items:
          $ref: "#/definitions/ProductOfferingQualificationItemRelationship"
      relatedParty:
        type: array
        items:
          $ref: "#/definitions/RelatedParty"
  ProductOfferingQualificationRef:
    description: Reference to productOfferingQualification previously done to check requested product serviceability
    type: object
    required:
      - id
      - qualificationItem
    properties:
      "@referredType":
        description: Technical attribute to extend this class
        type: string
      href:
        description: Link to the productOfferingQualification
        type: string
      id:
        description: Id of the productOfferingQualification
        type: string
      qualificationItem:
        description: Id of the item of the productOfferingQualification
        type: string
  ProductOfferingQualificationStateType:
    description: These values represent the valid states through which the product offering qualification can transition
    type: string
    enum:
      - done
      - terminatedWithError.unableToProvide
      - terminatedWithError.insufficientInformationProvided
      - inProgress
  ProductOfferingQualification_Create:
    description: |-
      This structure serves as a request for a product offering qualification.
      A POQ is a grouping of POQ Items formulated into a request made by a Buyer to a Seller
    type: object
    required:
      - relatedParty
      - productOfferingQualificationItem
    properties:
      "@schemaLocation":
        description: Technical attribute to extend this class
        type: string
      "@type":
        description: "When\_sub-classing,\_this\_defines\_the\_sub-class\_entity\_name"
        type: string
      instantSyncQualification:
        description: "If this flag is set to Yes, Buyer requests to have instant qualification to be provided in operation POST response"
        type: boolean
        default: false
      productOfferingQualificationItem:
        type: array
        minItems: 1
        items:
          $ref: "#/definitions/ProductOfferingQualificationItem_Create"
      projectId:
        description: This value MAY be assigned by the Buyer/Seller to identify a project the qualification request is associated with.
        type: string
      provideAlternative:
        description: This Boolean allows requester (buyer) to indicate if he is willing to get alternate proposal if requested product not available.
        type: boolean
        default: false
      relatedParty:
        type: array
        items:
          $ref: "#/definitions/RelatedParty"
      requestedResponseDate:
        description: Corresponds to desiredResponseDate - The date a response for the service request is desired.
        type: string
        format: date
  ProductOfferingQualification_Find:
    description: This class is used to describe attribute to be used for requesting POQ list (used in the GET by list)
    type: object
    properties:
      id:
        description: The Serviceability Request's unique identifier.
        type: string
      projectId:
        description: This value MAY be assigned by the Buyer/Seller to identify a project the serviceability request is associated with.
        type: string
      requestedResponseDate:
        description: Corresponds to desiredResponseDate - The date a response for the service request is desired.
        type: string
        format: date
      state:
        $ref: "#/definitions/ProductOfferingQualificationStateType"
  ProductOfferingRef:
    description: "The commercial and technical details of a Product sold by a particular Seller.  A Product Offering defines all of the commercial terms and, through association with a particular Product Specification, defines all the technical attributes and behaviors of the Product. A Product Offering may constrain the allowable set of configurable technical attributes and/or behaviors specified in the associated Product Specification"
    type: object
    required:
      - id
    properties:
      id:
        description: A unique product offering identifier. This identifier is provided by the seller and communicated to the buyer during the on-boarding process.
        type: string
  ProductOrder:
    description: A ProductOrder is a type of business interaction that is used to procure a Product based upon a Product Offering.
    type: object
    required:
      - id
      - href
      - externalId
      - orderDate
      - state
      - requestedCompletionDate
      - orderActivity
      - desiredResponses
      - orderVersion
      - relatedParty
      - orderItem
    properties:
      "@baseType":
        description: Technical attribute to extend the API
        type: string
      "@schemaLocation":
        description: Technical attribute to extend the API
        type: string
      "@type":
        description: Technical attribute to extend the API
        type: string
      billingAccount:
        $ref: "#/definitions/BillingAccountRef"
      buyerRequestDate:
        description: "Buyer order creation date. Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00)"
        type: string
        format: date-time
      cancellationDate:
        description: Identifies the date the Seller canceled the Order
        type: string
        format: date-time
      cancellationReason:
        description: Indicates reason why buyer requested cancellation
        type: string
      completionDate:
        description: "The date the order is completed. Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00)"
        type: string
        format: date-time
      desiredResponses:
        $ref: "#/definitions/DesiredOrderResponses"
      expectedCompletionDate:
        description: Expected delivery date amended by the provider
        type: string
        format: date-time
      expeditePriority:
        description: "Indicates that expedited treatment is requested and any charges generated in provisioning this request (e.g., additional engineering charges or labor charges if applicable) will be accepted by the buyer."
        type: boolean
      externalId:
        description: A number that uniquely identifies an order within the buyer's enterprise.
        type: string
      href:
        description: Hyperlink to access the order
        type: string
      id:
        description: Unique (within the ordering domain) identifier for the order that is generated by the seller when the order is initially accepted.
        type: string
      note:
        type: array
        items:
          $ref: "#/definitions/Note"
      orderActivity:
        $ref: "#/definitions/OrderActivity"
      orderDate:
        description: "Date when the order was created by seller. Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00)"
        type: string
        format: date-time
      orderItem:
        type: array
        minItems: 1
        items:
          $ref: "#/definitions/OrderItem"
      orderMessage:
        type: array
        items:
          $ref: "#/definitions/OrderMessage"
      orderVersion:
        description: The version number that the Buyer uses to refer to this particular version of the order
        type: string
        default: "1"
      pricingMethod:
        $ref: "#/definitions/PricingMethod"
      pricingReference:
        description: "The identifier references the previously agreed upon pricing terms, as applicable, based on the pricingMethod (e.g. a contract id or tariff id."
        type: string
      pricingTerm:
        description: The length of the contract in months.
        type: integer
        format: int32
      priority:
        description: |-
          An integer that specifies that expedited treatment is to be provided in a specific priority.
          This field will be ignored if the Expedite/Priority Indicator is False.
          The valid values and the business/operational rules for this field will be defined by the Seller as part of the contracting or on-boarding process.
        type: integer
        format: int32
      projectId:
        description: An identifier that is used to group Orders that is important to the Buyer. A ProjectId can be used to relate multiple Orders together
        type: string
      relatedBuyerPON:
        description: Related Buyer Purchase Order Number (RPON)
        type: string
      relatedParty:
        type: array
        items:
          $ref: "#/definitions/RelatedParty"
      requestedCompletionDate:
        description: "Identifies the buyer's desired due date (requested delivery date). Cannot be requested on cancelled orders.  Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00)."
        type: string
        format: date-time
      requestedStartDate:
        description: "The buyer's requested date that order processing should start. Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00)."
        type: string
        format: date-time
      state:
        $ref: "#/definitions/ProductOrderStateType"
      stateChange:
        type: array
        items:
          $ref: "#/definitions/StateChange"
      tspRestorationPriority:
        description: "Within the United States, indicates the provisioning and restoration priority as defined under the TSP Service Vendor Handbook, The valid values are defined in ATIS OBF document: ATIS-0404001"
        type: string
  ProductOrderEvent:
    description: ProductOrder structure used for notification
    type: object
    required:
      - id
      - externalId
      - state
      - requestedCompletionDate
      - orderVersion
      - relatedParty
      - orderItem
    properties:
      "@baseType":
        type: string
      "@schemaLocation":
        type: string
      "@type":
        type: string
      completionDate:
        description: "The date the order is completed. Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00)"
        type: string
        format: date-time
      expectedCompletionDate:
        description: Expected delivery date amended by the provider
        type: string
        format: date-time
      externalId:
        description: A number that uniquely identifies an order within the buyer's enterprise.
        type: string
      id:
        description: Unique (within the ordering domain) identifier for the order that is generated by the seller when the order is initially accepted.
        type: string
      note:
        type: array
        items:
          $ref: "#/definitions/Note"
      orderItem:
        type: array
        items:
          $ref: "#/definitions/OrderItemEvent"
      orderMessage:
        type: array
        items:
          $ref: "#/definitions/OrderMessage"
      orderVersion:
        description: The version number that the Buyer uses to refer to this particular version of the order
        type: string
        default: "1"
      projectId:
        description: An identifier that is used to group Orders that represent a unit of functionality that is important to a Buyer.  A Project can be used to relate multiple Orders together.
        type: string
      relatedParty:
        type: array
        items:
          $ref: "#/definitions/RelatedParty"
      requestedCompletionDate:
        description: "Identifies the buyer's desired due date (requested delivery date). Cannot be requested on cancelled orders.  Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00)."
        type: string
        format: date-time
      requestedStartDate:
        description: "The buyer's requested date that order processing should start. Format is YYYY-MM-DDThh:mmTZD (e.g. 1997-07-16T19:20+01:00)."
        type: string
        format: date-time
      state:
        $ref: "#/definitions/ProductOrderStateType"
  ProductOrderEventType:
    description: Product Order event type
    type: string
    enum:
      - productOrderCreationNotification
      - productOrderAttributeValueChangeNotification
      - productOrderStateChangeNotification
      - productOrderInformationRequiredNotification
  ProductOrderItemStateType:
    description: An enumeration of valid order item statuses.
    type: string
    enum:
      - acknowledged
      - rejected
      - inProgress
      - pending
      - held
      - assesssingCancellation
      - pendingCancellation
      - cancelled
      - inProgress.configured
      - failed
      - completed
  ProductOrderItem_Create:
    description: A ProductOrderItem_Create object is provided as input to the product order item create operation.
    type: object
    required:
      - id
      - action
      - productOffering
    properties:
      "@schemaLocation":
        description: Technical attribute to extend API
        type: string
      "@type":
        description: Technical attribute to extend API
        type: string
      action:
        $ref: "#/definitions/ProductActionType"
      billingAccount:
        $ref: "#/definitions/BillingAccountRef"
      id:
        description: "Identifier of the line item (generally it is a sequence number 01, 02, 03, ...)"
        type: string
      orderItemPrice:
        type: array
        minItems: 1
        items:
          $ref: "#/definitions/OrderItemPrice"
      orderItemRelationship:
        type: array
        items:
          $ref: "#/definitions/OrderItemRelationShip"
      pricingMethod:
        $ref: "#/definitions/PricingMethod"
      pricingReference:
        description: "The identifier references the previously agreed upon pricing terms, as applicable, based on the pricingMethod (e.g. a contract id or tariff id."
        type: string
      pricingTerm:
        description: The length of the contract in months
        type: integer
        format: int32
        minimum: 0
      product:
        $ref: "#/definitions/Product"
      productOffering:
        $ref: "#/definitions/ProductOfferingRef"
      qualification:
        $ref: "#/definitions/QualificationRef"
      quote:
        $ref: "#/definitions/QuoteRef"
      relatedParty:
        type: array
        items:
          $ref: "#/definitions/RelatedParty"
  ProductOrderRef:
    description: A reference to a productOrder and optionally to an order item.
    type: object
    required:
      - id
      - orderItemId
    properties:
      href:
        description: Hyperlink to the productOrder
        type: string
      id:
        description: Identifier of the productOrder(provided by the seller)
        type: string
      orderItemId:
        description: "Identifier of the line item (generally it is a sequence number 01, 02, 03, ...)"
        type: string
  ProductOrderRefCancel:
    description: A reference to a product order used to perform cancellation request.
    type: object
    required:
      - id
    properties:
      "@referredType":
        description: Technical attribute to extend the API
        type: string
      externalId:
        description: |-
          A number that uniquely identifies an order within the buyer's enterprise.
          Must be provided if provided when the order was initially accepted
        type: string
      href:
        description: Hyperlink to access the order
        type: string
      id:
        description: Unique (within the ordering domain) identifier for the order that is generated by the seller when the order is initially accepted.
        type: string
      state:
        $ref: "#/definitions/ProductOrderStateType"
      version:
        description: |-
          The version number that the Buyer uses to refer to this particular version of the order.
          This not checked for conformance (informative information)
        type: string
  ProductOrderStateType:
    description: An enumeration of valid order states
    type: string
    enum:
      - acknowledged
      - rejected
      - inProgress
      - pending
      - held
      - assessingCancellation
      - pendingCancellation
      - cancelled
      - inProgress.configured
      - inProgress.confirmed
      - inProgress.jeopardy
      - failed
      - partial
      - completed
  ProductOrderSummary:
    description: Structure to define GET without id response. A list of productOrder matching request criteria. Provides Product order summary view.
    type: object
    required:
      - id
      - externalId
      - orderDate
      - state
    properties:
      externalId:
        description: |-
          ID given by the consumer and only understandable by him (to facilitate his searches afterwards).
          MEF: Buyer Purchase Order Number
        type: string
      id:
        description: |-
          ID created on repository side (OM system)
          MEF: Unique identifier for the order that is generated by the Seller when the order is initially accepted via an API.
        type: string
      orderDate:
        description: Date when the order was created
        type: string
        format: date-time
      state:
        $ref: "#/definitions/ProductOrderStateType"
  ProductOrder_Create:
    description: A CreateProductOrder object is provided as input to the product order create operation.
    type: object
    required:
      - externalId
      - buyerRequestDate
      - requestedCompletionDate
      - orderActivity
      - desiredResponse
      - orderVersion
      - relatedParty
      - orderItem
    properties:
      "@baseType":
        description: Technical attribute to extend API
        type: string
      "@schemaLocation":
        description: Technical attribute to extend API
        type: string
      "@type":
        description: Technical attribute to extend API
        type: string
      billingAccount:
        $ref: "#/definitions/BillingAccountRef"
      buyerRequestDate:
        description: Date when the order was submitted by the Buyer to the Seller
        type: string
        format: date-time
      desiredResponse:
        $ref: "#/definitions/DesiredOrderResponses"
      expeditePriority:
        description: "Indicates that expedited treatment is requested and any charges generated in provisioning this request (e.g., additional engineering charges or labor charges if applicable) will be accepted by the buyer."
        type: boolean
      externalId:
        description: "Buyer Purchase Order Number: A number that uniquely identifies an order within the Buyer's enterprise"
        type: string
      note:
        type: array
        items:
          $ref: "#/definitions/Note"
      orderActivity:
        $ref: "#/definitions/OrderActivity"
      orderItem:
        type: array
        minItems: 1
        items:
          $ref: "#/definitions/ProductOrderItem_Create"
      orderVersion:
        description: "Buyer Order Version: The version number that the Buyer uses to refer to this particular version of the order."
        type: string
      pricingMethod:
        $ref: "#/definitions/PricingMethod"
      pricingReference:
        description: "The identifier references the previously agreed upon pricing terms, as applicable, based on the pricingMethod (e.g. a contract id or tariff id."
        type: string
      pricingTerm:
        description: The length of the contract in months
        type: integer
        format: int32
      priority:
        description: An integer that specifies that expedited treatment is to be provided in a specific priority.
        type: integer
        format: int32
      projectId:
        description: An identifier that is used to group Orders that is important to the Buyer. A ProjectId can be used to relate multiple Orders together.
        type: string
      relatedBuyerPON:
        description: Related Buyer Purchase Order Number (RPON) - Identifies the Buyer Purchase Order Number that is related to this order.
        type: string
      relatedParty:
        type: array
        items:
          $ref: "#/definitions/RelatedParty"
      requestedCompletionDate:
        description: Identifies the Buyer's desired due date (requested delivery date)
        type: string
        format: date-time
      requestedStartDate:
        description: "If specified, identifies the Buyer's desired date for order processing to start"
        type: string
        format: date-time
      tspRestorationPriority:
        description: "Within the United States, indicates the provisioning and restoration priority as defined under the TSP Service Vendor Handbook."
        type: string
  ProductPrice:
    description: Price of the product
    type: object
    required:
      - name
    properties:
      "@type":
        description: A technical attribute to extend the class
        type: string
      description:
        description: A narrative that explains in detail the semantics of this product price
        type: string
      name:
        description: A short descriptive name such as "Subscription price"
        type: string
      price:
        $ref: "#/definitions/Price"
      priceType:
        $ref: "#/definitions/PriceType"
      recurringChargePeriod:
        $ref: "#/definitions/ChargePeriod"
      unitOfMeasure:
        description: "Unit of Measure, if price depends on it (like Gb for example)"
        type: string
  ProductRef:
    description: Product reference used to describe product relationship.
    type: object
    required:
      - id
    properties:
      buyerProductId:
        description: Targeted Buyer product id - Informative
        type: string
      href:
        description: Reference of the product
        type: string
      id:
        description: Unique identifier of the product
        type: string
  ProductRelationship:
    description: A product has relationships to other products.
    type: object
    required:
      - type
      - product
    properties:
      product:
        $ref: "#/definitions/ProductRef"
      type:
        description: 'Indicates whether the type of relationship is "bundled", "reliesOn", or "comesFrom"'
        type: string
  ProductSpecification:
    description: "A ProductSpec describes the invariant properties (i.e., features) that a given set of Products MAY have. These properties provide the information needed to plan, construct, allocate, and/or retire the Services and Resources from the operator environment needed to deliver the Product"
    type: object
    properties:
      describing:
        $ref: "#/definitions/Describing"
      id:
        description: "A unique identifier for the product spec, within the product spec domain. It is assigned by the seller and communicated to the buyer at on-boarding time."
        type: string
  ProductSpecificationRef:
    description: A structured set of well-defined technical attributes and/or behaviors that are used to construct a Product Offering for sale to a market.
    type: object
    required:
      - id
    properties:
      describing:
        $ref: "#/definitions/Describing"
      id:
        description: A unique identifier of the product spec.
        type: string
  ProductSpecificationSummary:
    description: Technical class to provide productSpecification id in the summary view
    type: object
    required:
      - id
    properties:
      id:
        description: Unique identifier of the product specification
        type: string
  ProductStatus:
    description: The state of the product in accordance with the product lifecycle.
    type: string
    enum:
      - active
      - suspended
      - activePendingTerminate
      - terminated
      - pendingActive
      - suspendedPendingTerminate
  ProductSummary:
    description: Class used to provide product overview retrieved in GET (by list) operation
    type: object
    required:
      - id
      - status
    properties:
      buyerProductId:
        description: This identifier is optionally provided during the product ordering and stored for informative purpose in the seller inventory
        type: string
      href:
        description: Reference of the product
        type: string
      id:
        description: Unique identifier of the product
        type: string
      productOffering:
        $ref: "#/definitions/ProductOfferingRef"
      productSpecification:
        $ref: "#/definitions/ProductSpecificationSummary"
      startDate:
        description: The date from which the product starts
        type: string
        format: date-time
      status:
        $ref: "#/definitions/ProductStatus"
  ProductTerm:
    description: Indicate a commitment term associated to the product
    type: object
    properties:
      description:
        description: Description of the commitment
        type: string
      duration:
        $ref: "#/definitions/Quantity"
      name:
        description: Name of the commitment
        type: string
      validFor:
        $ref: "#/definitions/TimePeriod"
  QualificationRef:
    description: Using to refer a serviceability request previously done
    type: object
    properties:
      "@referredType":
        description: Technical attribute to extend the API
        type: string
      href:
        description: Hyperlink to the qualification previously done for this item
        type: string
      id:
        description: id of the qualification previously done for this item
        type: string
      qualificationItem:
        description: item id of the qualification previously done for this item
        type: string
  Quantity:
    description: An amount in a given unit
    type: object
    properties:
      amount:
        description: Numeric value in a given unit
        type: number
        format: float
      units:
        description: Unit
        type: string
  Quote:
    description: |-
      A quote which can be used to negotiate service and product acquisition or modification between
      a customer and a service provider
    type: object
    required:
      - state
      - instantSyncQuoting
      - quoteLevel
      - requestedQuoteCompletionDate
      - relatedParty
      - quoteItem
    properties:
      "@baseType":
        description: Indicates the base (class) type of the quote.
        type: string
      "@schemaLocation":
        description: Link to the schema describing the REST resource.
        type: string
      "@type":
        description: Indicates the (class) type of the quote.
        type: string
      agreement:
        type: array
        items:
          $ref: "#/definitions/AgreementRef"
      description:
        description: Description of the quote
        type: string
      effectiveQuoteCompletionDate:
        description: Date when the quoted was Cancelled or Rejected or Accepted
        type: string
        format: date-time
      expectedFulfillmentStartDate:
        description: This is the date wished by the requester to have the requested quote item(s) delivered
        type: string
        format: date
      expectedQuoteCompletionDate:
        description: This is the date filled by the seller to indicate expected quote completion date.
        type: string
        format: date
      externalId:
        description: ID given by the consumer and only understandable by him (to facilitate his searches afterwards)
        type: string
      href:
        description: Hyperlink to access the quote
        type: string
      id:
        description: "Unique (within the quoting domain) identifier for the quote, as attributed by the quoting system"
        type: string
      instantSyncQuoting:
        description: "If this flag is set to Yes, Buyer requests to have instant quoting to be provided in operation POST response"
        type: boolean
        default: false
      note:
        type: array
        items:
          $ref: "#/definitions/Note"
      projectId:
        description: This value MAY be assigned by the Buyer/Seller to identify a project the quoting request is associated with.
        type: string
      quoteDate:
        description: Date when the quote was created
        type: string
        format: date-time
      quoteItem:
        type: array
        items:
          $ref: "#/definitions/QuoteItem"
      quoteLevel:
        $ref: "#/definitions/QuoteLevel"
      relatedParty:
        type: array
        items:
          $ref: "#/definitions/RelatedParty"
      requestedQuoteCompletionDate:
        description: This is the date wished by the requester to have the quote completed (meaning priced)
        type: string
        format: date-time
      state:
        $ref: "#/definitions/QuoteStateType"
      validFor:
        $ref: "#/definitions/TimePeriod"
    discriminator: id
  QuoteChangeState:
    description: Quote state change 'request able' by buyer
    type: string
    enum:
      - CANCELLED
      - REJECTED
  QuoteEventType:
    description: Type of the Event
    type: string
    enum:
      - QUOTE_CREATION_NOTIFICATION
      - QUOTE_STATE_CHANGE_NOTIFICATION
      - QUOTE_INFORMATION_REQUIRED_NOTIFICATION
      - QUOTE_ATTRIBUTE_VALUE_CHANGE_NOTIFICATION
  QuoteItem:
    description: A quote items describe an action to be performed on a productOffering or a product in order to get pricing elements and condition
    type: object
    required:
      - id
      - state
      - action
    properties:
      "@schemaLocation":
        description: Link to the schema describing this REST resource
        type: string
      "@type":
        description: Indicates the base (class) type of the quote Item.
        type: string
      action:
        $ref: "#/definitions/ProductActionType"
      id:
        description: "Identifier of the quote item (generally it is a sequence number 01, 02, 03, ...)."
        type: string
      note:
        type: array
        items:
          $ref: "#/definitions/Note"
      product:
        $ref: "#/definitions/Product"
      productOffering:
        $ref: "#/definitions/ProductOfferingRef"
      qualification:
        type: array
        items:
          $ref: "#/definitions/ProductOfferingQualificationRef"
      quoteItemPrice:
        type: array
        items:
          $ref: "#/definitions/QuotePrice"
      quoteItemRelationship:
        type: array
        items:
          $ref: "#/definitions/QuoteItemRelationship"
      quoteItemTerm:
        $ref: "#/definitions/ItemTerm"
      relatedParty:
        type: array
        items:
          $ref: "#/definitions/RelatedParty"
      requestedQuoteItemTerm:
        $ref: "#/definitions/ItemTerm"
      state:
        $ref: "#/definitions/QuoteItemStateType"
  QuoteItemAction:
    description: Quote Item Action
    type: string
    enum:
      - INSTALL
      - CHANGE
      - DISCONNECT
      - NO_CHANGE
  QuoteItemRelationship:
    description: Used to describe relationship between quote item. These relationships could have an impact on pricing and conditions.
    type: object
    required:
      - type
      - id
    properties:
      id:
        description: ID of the related order item (must be in the same quote).
        type: string
      type:
        $ref: "#/definitions/RelationshipType"
  QuoteItemState:
    type: string
    enum:
      - IN_PROGRESS
      - UNABLE_TO_PROVIDE
      - READY
      - ABANDONED
  QuoteItemStateType:
    description: Valid quote item state enumeration
    type: string
    enum:
      - IN_PROGRESS
      - UNABLE_TO_PROVIDE
      - READY
      - ABANDONED
      - INSUFICIENT_INFORMATION_PROVIDED
  QuoteItem_Create:
    description: This structure is used to describe Quote item only in the POST operation for the request.
    type: object
    required:
      - id
      - action
    properties:
      "@schemaLocation":
        description: Link to the schema describing this REST resource
        type: string
      "@type":
        description: Indicates the base (class) type of the quote Item.
        type: string
      action:
        $ref: "#/definitions/ProductActionType"
      id:
        description: "Identifier of the quote item (generally it is a sequence number 01, 02, 03, ...)."
        type: string
      note:
        type: array
        items:
          $ref: "#/definitions/Note"
      product:
        $ref: "#/definitions/Product"
      productOffering:
        $ref: "#/definitions/ProductOfferingRef"
      qualification:
        $ref: "#/definitions/ProductOfferingQualificationRef"
      quoteItemRelationship:
        type: array
        items:
          $ref: "#/definitions/QuoteItemRelationship"
      relatedParty:
        type: array
        items:
          $ref: "#/definitions/RelatedParty"
      requestedQuoteItemTerm:
        $ref: "#/definitions/ItemTerm"
  QuoteLevel:
    description: Quote level
    type: string
    enum:
      - BUDGETARY
      - INDICATIVE
      - FIRM
  QuotePrice:
    description: Description of price and discount awarded.
    type: object
    required:
      - priceType
      - name
      - price
    properties:
      "@type":
        description: Indicates the base (class) type of the quote price
        type: string
      description:
        description: Description of the quote/quote item price.
        type: string
      name:
        description: Name of the quote /quote item price
        type: string
      price:
        $ref: "#/definitions/Price"
      priceType:
        $ref: "#/definitions/PriceType"
      recurringChargePeriod:
        $ref: "#/definitions/ChargePeriod"
  QuoteRef:
    description: Quote used before this order to define pricing terms
    type: object
    required:
      - id
    properties:
      "@referredType":
        description: Technical attribute to extend the API
        type: string
      href:
        description: Hyperlink to access the quote (using MEF quote API)
        type: string
      id:
        description: Unique identifier for the Quote that is generated by the Seller when the Quote is initially accepted via an API.
        type: string
      quoteItem:
        description: Identifier of the quote item
        type: string
  QuoteState:
    type: string
    enum:
      - IN_PROGRESS
      - READY
      - CANCELLED
      - REJECTED
      - ACCEPTED
      - EXPIRED
      - UNABLE_TO_PROVIDE
  QuoteStateType:
    description: Valid quote state enumeration
    type: string
    enum:
      - IN_PROGRESS
      - READY
      - CANCELLED
      - REJECTED
      - ACCEPTED
      - EXPIRED
      - UNABLE_TO_PROVIDE
      - INSUFICIENT_INFORMATION_PROVIDED
  QuoteSummaryView:
    description: Quote Summary view is provided in the response of the GET(LIST) quote. Only a subset of information are provided.
    type: object
    required:
      - requestedQuoteCompletionDate
      - relatedPartyRole
      - quoteItem
    properties:
      "@baseType":
        description: Indicates the base (class) type of the quote.
        type: string
      "@schemaLocation":
        description: Link to the schema describing the REST resource.
        type: string
      "@type":
        description: Indicates the (class) type of the quote.
        type: string
      category:
        description: "Used to categorize the quote from a business perspective that can be useful for the CRM system (e.g. “enterprise”, “residential”, ...)"
        type: string
      effectiveQuoteCompletionDate:
        description: Date when the quoted was Cancelled or Rejected or Accepted
        type: string
        format: date-time
      expectedFulfillmentStartDate:
        description: This is the date wished by the requester to have the requested quote item(s) delivered
        type: string
        format: date
      expectedQuoteCompletionDate:
        description: This is the date filled by the seller to indicate expected quote completion date.
        type: string
        format: date
      externalId:
        description: ID given by the consumer and only understandable by him (to facilitate his searches afterwards)
        type: string
      href:
        description: Hyperlink to access the quote
        type: string
      id:
        description: ID attributed by quoting system
        type: string
      quoteDate:
        description: Date when the quote was created
        type: string
        format: date-time
      quoteItem:
        type: array
        items:
          $ref: "#/definitions/QuoteItem"
      quoteLevel:
        $ref: "#/definitions/QuoteLevel"
      relatedPartyRole:
        type: array
        items:
          $ref: "#/definitions/RelatedPartyRole"
      requestedQuoteCompletionDate:
        description: This is the date wished by the requester to have the quote completed (meaning priced)
        type: string
        format: date-time
      state:
        $ref: "#/definitions/QuoteState"
      validFor:
        $ref: "#/definitions/TimePeriod"
    discriminator: id
  Quote_Create:
    description: This structure is used only in the POST operation for the request.
    type: object
    required:
      - requestedQuoteCompletionDate
      - relatedParty
      - quoteItem
    properties:
      "@baseType":
        description: Indicates the base (class) type of the quote.
        type: string
      "@schemaLocation":
        description: |-
          Link to the schema describing the REST resource.
          Technical attribute to extend this class.
        type: string
      "@type":
        description: |-
          Indicates the (class) type of the quote.
          Technical attribute to extend this class.
        type: string
      agreement:
        type: array
        items:
          $ref: "#/definitions/AgreementRef"
      description:
        description: Description of the quote
        type: string
      expectedFulfillmentStartDate:
        description: This is the date wished by the requester to have the requested quote item(s) delivered
        type: string
        format: date
      externalId:
        description: ID given by the consumer and only understandable by him (to facilitate his searches afterwards)
        type: string
      instantSyncQuoting:
        description: "If this flag is set to Yes, Buyer requests to have instant quoting to be provided in operation POST response"
        type: boolean
        default: false
      note:
        type: array
        items:
          $ref: "#/definitions/Note"
      projectId:
        description: This value MAY be assigned by the Buyer/Seller to identify a project the quoting request is associated with.
        type: string
      quoteItem:
        type: array
        items:
          $ref: "#/definitions/QuoteItem_Create"
      quoteLevel:
        $ref: "#/definitions/QuoteLevel"
      relatedParty:
        type: array
        items:
          $ref: "#/definitions/RelatedParty"
      requestedQuoteCompletionDate:
        description: |-
          This is the date wished by the requester to have the quote completed (meaning priced).
          This attribute is not considered when instantSyncQuoting is set to Yes.
        type: string
        format: date-time
  Quote_Find:
    description: Quote Summary view is provided in the response of the GET(LIST) quote. Only a subset of information are provided.
    type: object
    required:
      - requestedQuoteCompletionDate
    properties:
      description:
        description: Description of the quote
        type: string
      effectiveQuoteCompletionDate:
        description: Date when the quoted was Cancelled or Rejected or Accepted
        type: string
        format: date-time
      expectedQuoteCompletionDate:
        description: This is the date filled by the seller to indicate expected quote completion date.
        type: string
        format: date
      externalId:
        description: ID given by the consumer and only understandable by him (to facilitate his searches afterwards)
        type: string
      href:
        description: Hyperlink to access the quote
        type: string
      id:
        description: ID attributed by quoting system
        type: string
      projectId:
        description: This value MAY be assigned by the Buyer/Seller to identify a project the quoting request is associated with.
        type: string
      quoteDate:
        description: Date when the quote was created
        type: string
        format: date-time
      quoteLevel:
        $ref: "#/definitions/QuoteLevel"
      requestedQuoteCompletionDate:
        description: This is the date wished by the requester to have the quote completed (meaning priced)
        type: string
        format: date-time
      state:
        $ref: "#/definitions/QuoteStateType"
    discriminator: id
  ReferencedAddress:
    description: A globally unique identifier controlled by a generally accepted independent administrative authority that specifies a fixed geographical location.
    type: object
    required:
      - referenceId
      - referenceType
    properties:
      id:
        description: Unique identifier of the address
        type: string
      referenceId:
        description: Id of a reference address
        type: string
      referenceType:
        description: Type of a reference address
        type: string
  RelatedParty:
    description: "An entity or organization that is involved to the geographical site, such as the Site Contact or Site Alternate Contact."
    type: object
    required:
      - id
      - role
      - name
    properties:
      "@referredType":
        description: Allow to specify the party type like Organization or Individual
        type: string
      emailAddress:
        description: The email address of the related party.
        type: string
      id:
        description: An identifier of the related party.
        type: string
      name:
        description: 'The name of the related party, e.g. "Jean Pontus".'
        type: string
      number:
        description: The telephone number of the related party.
        type: string
      numberExtension:
        description: Phone number Extension.
        type: string
      role:
        description: Role played by this party for this Site as UNISiteContact for example.
        type: array
        items:
          type: string
  RelatedPartyRole:
    description: A party role (not a party) playing a role for this quote or quote Item.
    type: object
    required:
      - role
      - relatedParty
    properties:
      "@referredType":
        description: |-
          Referred type for this party role
          Technical attribute
        type: string
      id:
        description: id of the party role
        type: string
      relatedParty:
        $ref: "#/definitions/RelatedParty"
      role:
        description: "Role played for this party role. Could be 'buyer’, ‘seller’ for example."
        type: string
  RelatedPlaceRefOrValue:
    description: Place defines the places where the quoted products are sold or delivered
    type: object
    required:
      - role
    properties:
      "@type":
        type: string
      href:
        description: Unique reference of the place
        type: string
      id:
        description: Unique identifier of the place
        type: string
      role:
        description: 'The role that the place plays, e.g.  "UNI Site", or "ENNI Site".'
        type: string
    discriminator: "@type"
  RelatedPlaceReforValue:
    description: Place defines the places where the products qualification must be done.
    type: object
    required:
      - role
    properties:
      "@referredType":
        description: "The\_actual\_type\_of\_the\_target\_instance\_when\_needed\_for\_disambiguation.\nUsed when place is described by reference\n@referredType could be valued to FormattedAddress, FieldedAddress, GeographicSite, GeographicLocation or ReferencedAddress"
        type: string
      "@type":
        description: "When\_sub-classing,\_this\_defines\_the\_sub-class\_entity\_name.\nUsed when place is described by value (litterally)\nCould be valued to FormattedAddress, FieldedAddress,  GeographicLocation or ReferencedAddress"
        type: string
      href:
        description: href to this place resource
        type: string
      id:
        description: id of this place
        type: string
        maxLength: 45
      role:
        description: Role of this place
        type: string
    discriminator: "@type"
  RelationshipType:
    description: Relationship type to be used between POQ item or product
    type: string
    enum:
      - reliesOn
      - bundled
      - comesFrom
  ServiceabilityColor:
    description: A color that indicates confidence to service the request.
    type: string
    enum:
      - green
      - red
      - yellow
  Severity:
    description: Severity of the order message
    type: string
    enum:
      - error
      - information
  StateChange:
    description: "Holds the state notification reasons and associated date the state changed, populated by the server"
    type: object
    properties:
      changeDate:
        type: string
        format: date-time
      changeReason:
        type: string
      state:
        $ref: "#/definitions/ProductOfferingQualificationStateType"
  Status:
    description: Status of a geographical site
    type: string
    enum:
      - planned
      - cancelled
      - underConstruction
      - existing
      - former
  StatusChange:
    description: "Holds the status modification reasons and associated date the status changed, populated by the server"
    type: object
    properties:
      changeDate:
        description: Date when the state changed
        type: string
        format: date-time
      changeReason:
        description: Raison for which the state changed
        type: string
      status:
        $ref: "#/definitions/ProductStatus"
  SubUnit:
    description: Sub Unit structure is used to describe several subUnits with a geographical subAddress.
    type: object
    required:
      - subUnitType
      - subUnitIdentifier
    properties:
      subUnitIdentifier:
        description: "The discriminator used for the subunit, often just a simple number but may also be a range."
        type: string
      subUnitType:
        description: "The type of subunit e.g.BERTH, FLAT, PIER, SUITE, SHOP, TOWER, UNIT, WHARF."
        type: string
  TaskStateType:
    type: string
    enum:
      - acknowledged
      - inProgress
      - done
      - terminatedWithError
  TerminationError:
    description: Termination error may be provided if seller is unable to perform qualification
    type: object
    properties:
      id:
        description: Id of the termination error
        type: string
      value:
        description: Value (text) for the termination error
        type: string
  TimeInterval:
    description: "A time interval, e.g.  3 hours, or 5 days."
    type: object
    required:
      - amount
      - timeUnit
    properties:
      amount:
        description: Amount
        type: integer
        format: int32
      timeUnit:
        $ref: "#/definitions/TimeUnit"
  TimePeriod:
    description: Indicates a time period for validity.
    type: object
    properties:
      endDateTime:
        type: string
        format: date-time
      startDateTime:
        type: string
        format: date-time
  TimeUnit:
    description: Represents a unit of time.
    type: string
    enum:
      - calendarDays
      - calendarHours
      - calendarMinutes
      - businessDays
      - businessHours
      - businessMinutes
  ValidationResult:
    description: Validation Result
    type: string
    enum:
      - success
      - fails
      - partial
  Principal:
    type: object
    properties:
      code:
        type: integer
        format: int32
      reason:
        type: string
      roles:
        type: array
        items:
          type: string
  QualificationState:
    description: "These values represent the valid states through which the product\
      \ offering qualification can transition"
    type: "string"
    enum:
    - "inProgress"
    - "done"
    - "terminatedWithError.unableToProvide"
    - "terminatedWithError.insufficientInformationProvided"
  PoQEventContainer:
    description: "Event class is used to describe information structure used for notification."
    required:
    - "eventId"
    - "eventType"
    - "eventTime"
    - "event"
    type: "object"
    properties:
      eventId:
        description: "Id of the event"
        type: "string"
      eventType:
        $ref: "#/definitions/PoqEventType"
      eventTime:
        description: "Datetime when the event occurred"
        type: "string"
        format: "date-time"
      event:
        $ref: "#/definitions/PoqEvent"
  PoqEventType:
    description: "Indicates the type of product offering qualification event."
    type: "string"
    enum:
    - "ProductOfferingQualificationCreateEventNotification"
    - "ProductOfferingQualificationStateChangeEventNotification"
  PoqItemEvent:
    description: "The product offering qualification item event structure that gets\
      \ passed in the \"event\" of a notification."
    required:
    - "id"
    type: "object"
    properties:
      id:
        description: "Id of this POQ item"
        type: "string"
      state:
        $ref: "#/definitions/QualificationState"
      serviceabilityConfidence:
        $ref: "#/definitions/ServiceabilityColor"
      desiredActivationDate:
        description: "Desired Activation Date for the product requested in this item"
        type: "string"
        format: "date"
  PoqEvent:
    description: "The product offering qualification passed as the \"event\" in a\
      \ notification."
    type: "object"
    properties:
      id:
        description: "The Serviceability Request's unique identifier."
        type: "string"
      href:
        description: "Link to the POQ"
        type: "string"
  # PoqEventPlus:
  #   description: "Event class is used to describe information structure used for notification."
  #   allOf:
  #   - $ref: "#/definitions/PoQEventContainer"
  #   - required:
  #     - "resourcePath"
  #     - "fieldPath"
  #     type: "object"
  #     properties:
  #       resourcePath:
  #         description: "Path to the resource (where an information is required or\
  #           \ an attribute changed value)"
  #         type: "string"
  #       fieldPath:
  #         description: "Path to the field which has value changed or information required"
  #         type: "array"
  #         items:
  #           type: "string"
tags:
  - description: "Geographic address describe an geographic address with usual parameters as street, postcode, county, etc... information"
    name: GeographicAddress
  - description: "geographic Address Validation - resource used to perform an address validation: the requester provide an address description and in the response he will get a validation of his address or alternate address proposal or information that this address description is not corresponding to server existing address. All address here a geographical."
    name: GeographicAddressValidation
  - description: Geographic Site resource
    name: GeographicSite
  - description: Specific implementation of a Product Offering or Product Specification dedicated to the benefit of a party.
    name: Product
  - description: ProductOfferingQualification (POQ) resource is use in the Serviceability process.  The POQ provides a means to determine whether it is feasible for the Seller to deliver a particular Product to a particular geographic location.
    name: ProductOfferingQualification
  - description: Product Order resource
    name: ProductOrder
  - description: |-
      Request to cancel an order submitted by the buyer.

      Seller answers with a cancel order request state + order state (could be CANCELLED, ASSESSING_CANCELLATION or previous order state if seller did not accept cancellation request).
    name: CancelProductOrder
  - description: "Notification class is used to describe structure used for product order notification (product order created, product order state change, product order information required, product order attribute value change)"
    name: Notification
  - description: "Quote can be used to negotiate service and product acquisition or modification between a buyer and a seller (Partner). Quote contain list of quote items, a reference to customer (partyRole), a list of productOffering/product and attached prices and conditions."
    name: Quote
