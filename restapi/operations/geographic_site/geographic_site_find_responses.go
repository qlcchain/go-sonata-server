// Code generated by go-swagger; DO NOT EDIT.

package geographic_site

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/qlcchain/go-sonata-server/models"
)

// GeographicSiteFindOKCode is the HTTP code returned for type GeographicSiteFindOK
const GeographicSiteFindOKCode int = 200

/*GeographicSiteFindOK Ok

swagger:response geographicSiteFindOK
*/
type GeographicSiteFindOK struct {

	/*
	  In: Body
	*/
	Payload []*models.GeographicSiteFindResp `json:"body,omitempty"`
}

// NewGeographicSiteFindOK creates GeographicSiteFindOK with default headers values
func NewGeographicSiteFindOK() *GeographicSiteFindOK {

	return &GeographicSiteFindOK{}
}

// WithPayload adds the payload to the geographic site find o k response
func (o *GeographicSiteFindOK) WithPayload(payload []*models.GeographicSiteFindResp) *GeographicSiteFindOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the geographic site find o k response
func (o *GeographicSiteFindOK) SetPayload(payload []*models.GeographicSiteFindResp) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GeographicSiteFindOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.GeographicSiteFindResp, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GeographicSiteFindBadRequestCode is the HTTP code returned for type GeographicSiteFindBadRequest
const GeographicSiteFindBadRequestCode int = 400

/*GeographicSiteFindBadRequest Bad Request

List of supported error codes:
- 20: Invalid URL parameter value
- 21: Missing body
- 22: Invalid body
- 23: Missing body field
- 24: Invalid body field
- 25: Missing header
- 26: Invalid header value
- 27: Missing query-string parameter
- 28: Invalid query-string parameter value

swagger:response geographicSiteFindBadRequest
*/
type GeographicSiteFindBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewGeographicSiteFindBadRequest creates GeographicSiteFindBadRequest with default headers values
func NewGeographicSiteFindBadRequest() *GeographicSiteFindBadRequest {

	return &GeographicSiteFindBadRequest{}
}

// WithPayload adds the payload to the geographic site find bad request response
func (o *GeographicSiteFindBadRequest) WithPayload(payload *models.ErrorRepresentation) *GeographicSiteFindBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the geographic site find bad request response
func (o *GeographicSiteFindBadRequest) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GeographicSiteFindBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GeographicSiteFindUnauthorizedCode is the HTTP code returned for type GeographicSiteFindUnauthorized
const GeographicSiteFindUnauthorizedCode int = 401

/*GeographicSiteFindUnauthorized Unauthorized

List of supported error codes:
- 40: Missing credentials
- 41: Invalid credentials
- 42: Expired credentials

swagger:response geographicSiteFindUnauthorized
*/
type GeographicSiteFindUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewGeographicSiteFindUnauthorized creates GeographicSiteFindUnauthorized with default headers values
func NewGeographicSiteFindUnauthorized() *GeographicSiteFindUnauthorized {

	return &GeographicSiteFindUnauthorized{}
}

// WithPayload adds the payload to the geographic site find unauthorized response
func (o *GeographicSiteFindUnauthorized) WithPayload(payload *models.ErrorRepresentation) *GeographicSiteFindUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the geographic site find unauthorized response
func (o *GeographicSiteFindUnauthorized) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GeographicSiteFindUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GeographicSiteFindNotFoundCode is the HTTP code returned for type GeographicSiteFindNotFound
const GeographicSiteFindNotFoundCode int = 404

/*GeographicSiteFindNotFound Not Found

List of supported error codes:
- 60: Resource not found

swagger:response geographicSiteFindNotFound
*/
type GeographicSiteFindNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewGeographicSiteFindNotFound creates GeographicSiteFindNotFound with default headers values
func NewGeographicSiteFindNotFound() *GeographicSiteFindNotFound {

	return &GeographicSiteFindNotFound{}
}

// WithPayload adds the payload to the geographic site find not found response
func (o *GeographicSiteFindNotFound) WithPayload(payload *models.ErrorRepresentation) *GeographicSiteFindNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the geographic site find not found response
func (o *GeographicSiteFindNotFound) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GeographicSiteFindNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GeographicSiteFindRequestTimeoutCode is the HTTP code returned for type GeographicSiteFindRequestTimeout
const GeographicSiteFindRequestTimeoutCode int = 408

/*GeographicSiteFindRequestTimeout Request Time-out

List of supported error codes:
- 63: Request time-out

swagger:response geographicSiteFindRequestTimeout
*/
type GeographicSiteFindRequestTimeout struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewGeographicSiteFindRequestTimeout creates GeographicSiteFindRequestTimeout with default headers values
func NewGeographicSiteFindRequestTimeout() *GeographicSiteFindRequestTimeout {

	return &GeographicSiteFindRequestTimeout{}
}

// WithPayload adds the payload to the geographic site find request timeout response
func (o *GeographicSiteFindRequestTimeout) WithPayload(payload *models.ErrorRepresentation) *GeographicSiteFindRequestTimeout {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the geographic site find request timeout response
func (o *GeographicSiteFindRequestTimeout) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GeographicSiteFindRequestTimeout) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(408)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GeographicSiteFindUnprocessableEntityCode is the HTTP code returned for type GeographicSiteFindUnprocessableEntity
const GeographicSiteFindUnprocessableEntityCode int = 422

/*GeographicSiteFindUnprocessableEntity Unprocessable entity

Functional error





 - code: 100
message: Too many records retrieved - please restrict requested parameter value(s)
description:

swagger:response geographicSiteFindUnprocessableEntity
*/
type GeographicSiteFindUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewGeographicSiteFindUnprocessableEntity creates GeographicSiteFindUnprocessableEntity with default headers values
func NewGeographicSiteFindUnprocessableEntity() *GeographicSiteFindUnprocessableEntity {

	return &GeographicSiteFindUnprocessableEntity{}
}

// WithPayload adds the payload to the geographic site find unprocessable entity response
func (o *GeographicSiteFindUnprocessableEntity) WithPayload(payload *models.ErrorRepresentation) *GeographicSiteFindUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the geographic site find unprocessable entity response
func (o *GeographicSiteFindUnprocessableEntity) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GeographicSiteFindUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GeographicSiteFindInternalServerErrorCode is the HTTP code returned for type GeographicSiteFindInternalServerError
const GeographicSiteFindInternalServerErrorCode int = 500

/*GeographicSiteFindInternalServerError Internal Server Error

List of supported error codes:
- 1: Internal error

swagger:response geographicSiteFindInternalServerError
*/
type GeographicSiteFindInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewGeographicSiteFindInternalServerError creates GeographicSiteFindInternalServerError with default headers values
func NewGeographicSiteFindInternalServerError() *GeographicSiteFindInternalServerError {

	return &GeographicSiteFindInternalServerError{}
}

// WithPayload adds the payload to the geographic site find internal server error response
func (o *GeographicSiteFindInternalServerError) WithPayload(payload *models.ErrorRepresentation) *GeographicSiteFindInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the geographic site find internal server error response
func (o *GeographicSiteFindInternalServerError) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GeographicSiteFindInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GeographicSiteFindServiceUnavailableCode is the HTTP code returned for type GeographicSiteFindServiceUnavailable
const GeographicSiteFindServiceUnavailableCode int = 503

/*GeographicSiteFindServiceUnavailable Service Unavailable



swagger:response geographicSiteFindServiceUnavailable
*/
type GeographicSiteFindServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewGeographicSiteFindServiceUnavailable creates GeographicSiteFindServiceUnavailable with default headers values
func NewGeographicSiteFindServiceUnavailable() *GeographicSiteFindServiceUnavailable {

	return &GeographicSiteFindServiceUnavailable{}
}

// WithPayload adds the payload to the geographic site find service unavailable response
func (o *GeographicSiteFindServiceUnavailable) WithPayload(payload *models.ErrorRepresentation) *GeographicSiteFindServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the geographic site find service unavailable response
func (o *GeographicSiteFindServiceUnavailable) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GeographicSiteFindServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
