// Code generated by go-swagger; DO NOT EDIT.

package product_offering_qualification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/qlcchain/go-sonata-server/models"
)

// ProductOfferingQualificationGetOKCode is the HTTP code returned for type ProductOfferingQualificationGetOK
const ProductOfferingQualificationGetOKCode int = 200

/*ProductOfferingQualificationGetOK Ok

swagger:response productOfferingQualificationGetOK
*/
type ProductOfferingQualificationGetOK struct {

	/*
	  In: Body
	*/
	Payload *models.ProductOfferingQualification `json:"body,omitempty"`
}

// NewProductOfferingQualificationGetOK creates ProductOfferingQualificationGetOK with default headers values
func NewProductOfferingQualificationGetOK() *ProductOfferingQualificationGetOK {

	return &ProductOfferingQualificationGetOK{}
}

// WithPayload adds the payload to the product offering qualification get o k response
func (o *ProductOfferingQualificationGetOK) WithPayload(payload *models.ProductOfferingQualification) *ProductOfferingQualificationGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product offering qualification get o k response
func (o *ProductOfferingQualificationGetOK) SetPayload(payload *models.ProductOfferingQualification) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOfferingQualificationGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProductOfferingQualificationGetBadRequestCode is the HTTP code returned for type ProductOfferingQualificationGetBadRequest
const ProductOfferingQualificationGetBadRequestCode int = 400

/*ProductOfferingQualificationGetBadRequest Bad Request

List of supported error codes:
- 20: Invalid URL parameter value
- 21: Missing body
- 22: Invalid body
- 23: Missing body field
- 24: Invalid body field
- 25: Missing header
- 26: Invalid header value
- 27: Missing query-string parameter
- 28: Invalid query-string parameter value

swagger:response productOfferingQualificationGetBadRequest
*/
type ProductOfferingQualificationGetBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewProductOfferingQualificationGetBadRequest creates ProductOfferingQualificationGetBadRequest with default headers values
func NewProductOfferingQualificationGetBadRequest() *ProductOfferingQualificationGetBadRequest {

	return &ProductOfferingQualificationGetBadRequest{}
}

// WithPayload adds the payload to the product offering qualification get bad request response
func (o *ProductOfferingQualificationGetBadRequest) WithPayload(payload *models.ErrorRepresentation) *ProductOfferingQualificationGetBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product offering qualification get bad request response
func (o *ProductOfferingQualificationGetBadRequest) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOfferingQualificationGetBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProductOfferingQualificationGetUnauthorizedCode is the HTTP code returned for type ProductOfferingQualificationGetUnauthorized
const ProductOfferingQualificationGetUnauthorizedCode int = 401

/*ProductOfferingQualificationGetUnauthorized Unauthorized

List of supported error codes:
- 40: Missing credentials
- 41: Invalid credentials
- 42: Expired credentials

swagger:response productOfferingQualificationGetUnauthorized
*/
type ProductOfferingQualificationGetUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewProductOfferingQualificationGetUnauthorized creates ProductOfferingQualificationGetUnauthorized with default headers values
func NewProductOfferingQualificationGetUnauthorized() *ProductOfferingQualificationGetUnauthorized {

	return &ProductOfferingQualificationGetUnauthorized{}
}

// WithPayload adds the payload to the product offering qualification get unauthorized response
func (o *ProductOfferingQualificationGetUnauthorized) WithPayload(payload *models.ErrorRepresentation) *ProductOfferingQualificationGetUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product offering qualification get unauthorized response
func (o *ProductOfferingQualificationGetUnauthorized) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOfferingQualificationGetUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProductOfferingQualificationGetForbiddenCode is the HTTP code returned for type ProductOfferingQualificationGetForbidden
const ProductOfferingQualificationGetForbiddenCode int = 403

/*ProductOfferingQualificationGetForbidden Forbidden

List of supported error codes:
- 50: Access denied
- 51: Forbidden requester
- 52: Forbidden user
- 53: Too many requests

swagger:response productOfferingQualificationGetForbidden
*/
type ProductOfferingQualificationGetForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewProductOfferingQualificationGetForbidden creates ProductOfferingQualificationGetForbidden with default headers values
func NewProductOfferingQualificationGetForbidden() *ProductOfferingQualificationGetForbidden {

	return &ProductOfferingQualificationGetForbidden{}
}

// WithPayload adds the payload to the product offering qualification get forbidden response
func (o *ProductOfferingQualificationGetForbidden) WithPayload(payload *models.ErrorRepresentation) *ProductOfferingQualificationGetForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product offering qualification get forbidden response
func (o *ProductOfferingQualificationGetForbidden) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOfferingQualificationGetForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProductOfferingQualificationGetNotFoundCode is the HTTP code returned for type ProductOfferingQualificationGetNotFound
const ProductOfferingQualificationGetNotFoundCode int = 404

/*ProductOfferingQualificationGetNotFound Not Found

List of supported error codes:
- 60: Resource not found

swagger:response productOfferingQualificationGetNotFound
*/
type ProductOfferingQualificationGetNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewProductOfferingQualificationGetNotFound creates ProductOfferingQualificationGetNotFound with default headers values
func NewProductOfferingQualificationGetNotFound() *ProductOfferingQualificationGetNotFound {

	return &ProductOfferingQualificationGetNotFound{}
}

// WithPayload adds the payload to the product offering qualification get not found response
func (o *ProductOfferingQualificationGetNotFound) WithPayload(payload *models.ErrorRepresentation) *ProductOfferingQualificationGetNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product offering qualification get not found response
func (o *ProductOfferingQualificationGetNotFound) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOfferingQualificationGetNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProductOfferingQualificationGetRequestTimeoutCode is the HTTP code returned for type ProductOfferingQualificationGetRequestTimeout
const ProductOfferingQualificationGetRequestTimeoutCode int = 408

/*ProductOfferingQualificationGetRequestTimeout Request Time-out

List of supported error codes:
- 63: Request time-out

swagger:response productOfferingQualificationGetRequestTimeout
*/
type ProductOfferingQualificationGetRequestTimeout struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewProductOfferingQualificationGetRequestTimeout creates ProductOfferingQualificationGetRequestTimeout with default headers values
func NewProductOfferingQualificationGetRequestTimeout() *ProductOfferingQualificationGetRequestTimeout {

	return &ProductOfferingQualificationGetRequestTimeout{}
}

// WithPayload adds the payload to the product offering qualification get request timeout response
func (o *ProductOfferingQualificationGetRequestTimeout) WithPayload(payload *models.ErrorRepresentation) *ProductOfferingQualificationGetRequestTimeout {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product offering qualification get request timeout response
func (o *ProductOfferingQualificationGetRequestTimeout) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOfferingQualificationGetRequestTimeout) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(408)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProductOfferingQualificationGetUnprocessableEntityCode is the HTTP code returned for type ProductOfferingQualificationGetUnprocessableEntity
const ProductOfferingQualificationGetUnprocessableEntityCode int = 422

/*ProductOfferingQualificationGetUnprocessableEntity Unprocessable entity

Functional error

swagger:response productOfferingQualificationGetUnprocessableEntity
*/
type ProductOfferingQualificationGetUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewProductOfferingQualificationGetUnprocessableEntity creates ProductOfferingQualificationGetUnprocessableEntity with default headers values
func NewProductOfferingQualificationGetUnprocessableEntity() *ProductOfferingQualificationGetUnprocessableEntity {

	return &ProductOfferingQualificationGetUnprocessableEntity{}
}

// WithPayload adds the payload to the product offering qualification get unprocessable entity response
func (o *ProductOfferingQualificationGetUnprocessableEntity) WithPayload(payload *models.ErrorRepresentation) *ProductOfferingQualificationGetUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product offering qualification get unprocessable entity response
func (o *ProductOfferingQualificationGetUnprocessableEntity) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOfferingQualificationGetUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProductOfferingQualificationGetServiceUnavailableCode is the HTTP code returned for type ProductOfferingQualificationGetServiceUnavailable
const ProductOfferingQualificationGetServiceUnavailableCode int = 503

/*ProductOfferingQualificationGetServiceUnavailable Service Unavailable



swagger:response productOfferingQualificationGetServiceUnavailable
*/
type ProductOfferingQualificationGetServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewProductOfferingQualificationGetServiceUnavailable creates ProductOfferingQualificationGetServiceUnavailable with default headers values
func NewProductOfferingQualificationGetServiceUnavailable() *ProductOfferingQualificationGetServiceUnavailable {

	return &ProductOfferingQualificationGetServiceUnavailable{}
}

// WithPayload adds the payload to the product offering qualification get service unavailable response
func (o *ProductOfferingQualificationGetServiceUnavailable) WithPayload(payload *models.ErrorRepresentation) *ProductOfferingQualificationGetServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product offering qualification get service unavailable response
func (o *ProductOfferingQualificationGetServiceUnavailable) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOfferingQualificationGetServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
