// Code generated by go-swagger; DO NOT EDIT.

package product_offering_qualification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	"github.com/qlcchain/go-sonata-server/models"
)

// ProductOfferingQualificationFindOKCode is the HTTP code returned for type ProductOfferingQualificationFindOK
const ProductOfferingQualificationFindOKCode int = 200

/*ProductOfferingQualificationFindOK Ok

swagger:response productOfferingQualificationFindOK
*/
type ProductOfferingQualificationFindOK struct {
	/*The number of resources retrieved in the response

	 */
	XResultCount int32 `json:"X-Result-Count"`
	/*The total number of matching resources

	 */
	XTotalCount int32 `json:"X-Total-Count"`

	/*
	  In: Body
	*/
	Payload []*models.ProductOfferingQualificationFind `json:"body,omitempty"`
}

// NewProductOfferingQualificationFindOK creates ProductOfferingQualificationFindOK with default headers values
func NewProductOfferingQualificationFindOK() *ProductOfferingQualificationFindOK {

	return &ProductOfferingQualificationFindOK{}
}

// WithXResultCount adds the xResultCount to the product offering qualification find o k response
func (o *ProductOfferingQualificationFindOK) WithXResultCount(xResultCount int32) *ProductOfferingQualificationFindOK {
	o.XResultCount = xResultCount
	return o
}

// SetXResultCount sets the xResultCount to the product offering qualification find o k response
func (o *ProductOfferingQualificationFindOK) SetXResultCount(xResultCount int32) {
	o.XResultCount = xResultCount
}

// WithXTotalCount adds the xTotalCount to the product offering qualification find o k response
func (o *ProductOfferingQualificationFindOK) WithXTotalCount(xTotalCount int32) *ProductOfferingQualificationFindOK {
	o.XTotalCount = xTotalCount
	return o
}

// SetXTotalCount sets the xTotalCount to the product offering qualification find o k response
func (o *ProductOfferingQualificationFindOK) SetXTotalCount(xTotalCount int32) {
	o.XTotalCount = xTotalCount
}

// WithPayload adds the payload to the product offering qualification find o k response
func (o *ProductOfferingQualificationFindOK) WithPayload(payload []*models.ProductOfferingQualificationFind) *ProductOfferingQualificationFindOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product offering qualification find o k response
func (o *ProductOfferingQualificationFindOK) SetPayload(payload []*models.ProductOfferingQualificationFind) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOfferingQualificationFindOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Result-Count

	xResultCount := swag.FormatInt32(o.XResultCount)
	if xResultCount != "" {
		rw.Header().Set("X-Result-Count", xResultCount)
	}

	// response header X-Total-Count

	xTotalCount := swag.FormatInt32(o.XTotalCount)
	if xTotalCount != "" {
		rw.Header().Set("X-Total-Count", xTotalCount)
	}

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.ProductOfferingQualificationFind, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ProductOfferingQualificationFindBadRequestCode is the HTTP code returned for type ProductOfferingQualificationFindBadRequest
const ProductOfferingQualificationFindBadRequestCode int = 400

/*ProductOfferingQualificationFindBadRequest Bad Request

List of supported error codes:
- 20: Invalid URL parameter value
- 21: Missing body
- 22: Invalid body
- 23: Missing body field
- 24: Invalid body field
- 25: Missing header
- 26: Invalid header value
- 27: Missing query-string parameter
- 28: Invalid query-string parameter value

swagger:response productOfferingQualificationFindBadRequest
*/
type ProductOfferingQualificationFindBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewProductOfferingQualificationFindBadRequest creates ProductOfferingQualificationFindBadRequest with default headers values
func NewProductOfferingQualificationFindBadRequest() *ProductOfferingQualificationFindBadRequest {

	return &ProductOfferingQualificationFindBadRequest{}
}

// WithPayload adds the payload to the product offering qualification find bad request response
func (o *ProductOfferingQualificationFindBadRequest) WithPayload(payload *models.ErrorRepresentation) *ProductOfferingQualificationFindBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product offering qualification find bad request response
func (o *ProductOfferingQualificationFindBadRequest) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOfferingQualificationFindBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProductOfferingQualificationFindUnauthorizedCode is the HTTP code returned for type ProductOfferingQualificationFindUnauthorized
const ProductOfferingQualificationFindUnauthorizedCode int = 401

/*ProductOfferingQualificationFindUnauthorized Unauthorized

List of supported error codes:
- 40: Missing credentials
- 41: Invalid credentials
- 42: Expired credentials

swagger:response productOfferingQualificationFindUnauthorized
*/
type ProductOfferingQualificationFindUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewProductOfferingQualificationFindUnauthorized creates ProductOfferingQualificationFindUnauthorized with default headers values
func NewProductOfferingQualificationFindUnauthorized() *ProductOfferingQualificationFindUnauthorized {

	return &ProductOfferingQualificationFindUnauthorized{}
}

// WithPayload adds the payload to the product offering qualification find unauthorized response
func (o *ProductOfferingQualificationFindUnauthorized) WithPayload(payload *models.ErrorRepresentation) *ProductOfferingQualificationFindUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product offering qualification find unauthorized response
func (o *ProductOfferingQualificationFindUnauthorized) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOfferingQualificationFindUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProductOfferingQualificationFindForbiddenCode is the HTTP code returned for type ProductOfferingQualificationFindForbidden
const ProductOfferingQualificationFindForbiddenCode int = 403

/*ProductOfferingQualificationFindForbidden Forbidden

List of supported error codes:
- 50: Access denied
- 51: Forbidden requester
- 52: Forbidden user
- 53: Too many requests

swagger:response productOfferingQualificationFindForbidden
*/
type ProductOfferingQualificationFindForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewProductOfferingQualificationFindForbidden creates ProductOfferingQualificationFindForbidden with default headers values
func NewProductOfferingQualificationFindForbidden() *ProductOfferingQualificationFindForbidden {

	return &ProductOfferingQualificationFindForbidden{}
}

// WithPayload adds the payload to the product offering qualification find forbidden response
func (o *ProductOfferingQualificationFindForbidden) WithPayload(payload *models.ErrorRepresentation) *ProductOfferingQualificationFindForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product offering qualification find forbidden response
func (o *ProductOfferingQualificationFindForbidden) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOfferingQualificationFindForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProductOfferingQualificationFindNotFoundCode is the HTTP code returned for type ProductOfferingQualificationFindNotFound
const ProductOfferingQualificationFindNotFoundCode int = 404

/*ProductOfferingQualificationFindNotFound Not Found

List of supported error codes:
- 60: Resource not found

swagger:response productOfferingQualificationFindNotFound
*/
type ProductOfferingQualificationFindNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewProductOfferingQualificationFindNotFound creates ProductOfferingQualificationFindNotFound with default headers values
func NewProductOfferingQualificationFindNotFound() *ProductOfferingQualificationFindNotFound {

	return &ProductOfferingQualificationFindNotFound{}
}

// WithPayload adds the payload to the product offering qualification find not found response
func (o *ProductOfferingQualificationFindNotFound) WithPayload(payload *models.ErrorRepresentation) *ProductOfferingQualificationFindNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product offering qualification find not found response
func (o *ProductOfferingQualificationFindNotFound) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOfferingQualificationFindNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProductOfferingQualificationFindRequestTimeoutCode is the HTTP code returned for type ProductOfferingQualificationFindRequestTimeout
const ProductOfferingQualificationFindRequestTimeoutCode int = 408

/*ProductOfferingQualificationFindRequestTimeout Request Time-out

List of supported error codes:
- 63: Request time-out

swagger:response productOfferingQualificationFindRequestTimeout
*/
type ProductOfferingQualificationFindRequestTimeout struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewProductOfferingQualificationFindRequestTimeout creates ProductOfferingQualificationFindRequestTimeout with default headers values
func NewProductOfferingQualificationFindRequestTimeout() *ProductOfferingQualificationFindRequestTimeout {

	return &ProductOfferingQualificationFindRequestTimeout{}
}

// WithPayload adds the payload to the product offering qualification find request timeout response
func (o *ProductOfferingQualificationFindRequestTimeout) WithPayload(payload *models.ErrorRepresentation) *ProductOfferingQualificationFindRequestTimeout {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product offering qualification find request timeout response
func (o *ProductOfferingQualificationFindRequestTimeout) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOfferingQualificationFindRequestTimeout) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(408)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProductOfferingQualificationFindUnprocessableEntityCode is the HTTP code returned for type ProductOfferingQualificationFindUnprocessableEntity
const ProductOfferingQualificationFindUnprocessableEntityCode int = 422

/*ProductOfferingQualificationFindUnprocessableEntity Unprocessable entity

Functional error





 - code: 100
message: Too many records retrieved - please restrict requested parameter value(s)
description:

swagger:response productOfferingQualificationFindUnprocessableEntity
*/
type ProductOfferingQualificationFindUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewProductOfferingQualificationFindUnprocessableEntity creates ProductOfferingQualificationFindUnprocessableEntity with default headers values
func NewProductOfferingQualificationFindUnprocessableEntity() *ProductOfferingQualificationFindUnprocessableEntity {

	return &ProductOfferingQualificationFindUnprocessableEntity{}
}

// WithPayload adds the payload to the product offering qualification find unprocessable entity response
func (o *ProductOfferingQualificationFindUnprocessableEntity) WithPayload(payload *models.ErrorRepresentation) *ProductOfferingQualificationFindUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product offering qualification find unprocessable entity response
func (o *ProductOfferingQualificationFindUnprocessableEntity) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOfferingQualificationFindUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProductOfferingQualificationFindServiceUnavailableCode is the HTTP code returned for type ProductOfferingQualificationFindServiceUnavailable
const ProductOfferingQualificationFindServiceUnavailableCode int = 503

/*ProductOfferingQualificationFindServiceUnavailable Service Unavailable



swagger:response productOfferingQualificationFindServiceUnavailable
*/
type ProductOfferingQualificationFindServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewProductOfferingQualificationFindServiceUnavailable creates ProductOfferingQualificationFindServiceUnavailable with default headers values
func NewProductOfferingQualificationFindServiceUnavailable() *ProductOfferingQualificationFindServiceUnavailable {

	return &ProductOfferingQualificationFindServiceUnavailable{}
}

// WithPayload adds the payload to the product offering qualification find service unavailable response
func (o *ProductOfferingQualificationFindServiceUnavailable) WithPayload(payload *models.ErrorRepresentation) *ProductOfferingQualificationFindServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product offering qualification find service unavailable response
func (o *ProductOfferingQualificationFindServiceUnavailable) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOfferingQualificationFindServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
