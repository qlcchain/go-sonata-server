// Code generated by go-swagger; DO NOT EDIT.

package product_offering_qualification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/qlcchain/go-sonata-server/models"
)

// ProductOfferingQualificationCreateCreatedCode is the HTTP code returned for type ProductOfferingQualificationCreateCreated
const ProductOfferingQualificationCreateCreatedCode int = 201

/*ProductOfferingQualificationCreateCreated Created

swagger:response productOfferingQualificationCreateCreated
*/
type ProductOfferingQualificationCreateCreated struct {

	/*
	  In: Body
	*/
	Payload *models.ProductOfferingQualification `json:"body,omitempty"`
}

// NewProductOfferingQualificationCreateCreated creates ProductOfferingQualificationCreateCreated with default headers values
func NewProductOfferingQualificationCreateCreated() *ProductOfferingQualificationCreateCreated {

	return &ProductOfferingQualificationCreateCreated{}
}

// WithPayload adds the payload to the product offering qualification create created response
func (o *ProductOfferingQualificationCreateCreated) WithPayload(payload *models.ProductOfferingQualification) *ProductOfferingQualificationCreateCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product offering qualification create created response
func (o *ProductOfferingQualificationCreateCreated) SetPayload(payload *models.ProductOfferingQualification) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOfferingQualificationCreateCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProductOfferingQualificationCreateBadRequestCode is the HTTP code returned for type ProductOfferingQualificationCreateBadRequest
const ProductOfferingQualificationCreateBadRequestCode int = 400

/*ProductOfferingQualificationCreateBadRequest Bad Request

List of supported error codes:
- 20: Invalid URL parameter value
- 21: Missing body
- 22: Invalid body
- 23: Missing body field
- 24: Invalid body field
- 25: Missing header
- 26: Invalid header value
- 27: Missing query-string parameter
- 28: Invalid query-string parameter value

swagger:response productOfferingQualificationCreateBadRequest
*/
type ProductOfferingQualificationCreateBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewProductOfferingQualificationCreateBadRequest creates ProductOfferingQualificationCreateBadRequest with default headers values
func NewProductOfferingQualificationCreateBadRequest() *ProductOfferingQualificationCreateBadRequest {

	return &ProductOfferingQualificationCreateBadRequest{}
}

// WithPayload adds the payload to the product offering qualification create bad request response
func (o *ProductOfferingQualificationCreateBadRequest) WithPayload(payload *models.ErrorRepresentation) *ProductOfferingQualificationCreateBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product offering qualification create bad request response
func (o *ProductOfferingQualificationCreateBadRequest) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOfferingQualificationCreateBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProductOfferingQualificationCreateUnauthorizedCode is the HTTP code returned for type ProductOfferingQualificationCreateUnauthorized
const ProductOfferingQualificationCreateUnauthorizedCode int = 401

/*ProductOfferingQualificationCreateUnauthorized Unauthorized

List of supported error codes:
- 40: Missing credentials
- 41: Invalid credentials
- 42: Expired credentials

swagger:response productOfferingQualificationCreateUnauthorized
*/
type ProductOfferingQualificationCreateUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewProductOfferingQualificationCreateUnauthorized creates ProductOfferingQualificationCreateUnauthorized with default headers values
func NewProductOfferingQualificationCreateUnauthorized() *ProductOfferingQualificationCreateUnauthorized {

	return &ProductOfferingQualificationCreateUnauthorized{}
}

// WithPayload adds the payload to the product offering qualification create unauthorized response
func (o *ProductOfferingQualificationCreateUnauthorized) WithPayload(payload *models.ErrorRepresentation) *ProductOfferingQualificationCreateUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product offering qualification create unauthorized response
func (o *ProductOfferingQualificationCreateUnauthorized) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOfferingQualificationCreateUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProductOfferingQualificationCreateForbiddenCode is the HTTP code returned for type ProductOfferingQualificationCreateForbidden
const ProductOfferingQualificationCreateForbiddenCode int = 403

/*ProductOfferingQualificationCreateForbidden Forbidden

List of supported error codes:
- 50: Access denied
- 51: Forbidden requester
- 52: Forbidden user
- 53: Too many requests

swagger:response productOfferingQualificationCreateForbidden
*/
type ProductOfferingQualificationCreateForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewProductOfferingQualificationCreateForbidden creates ProductOfferingQualificationCreateForbidden with default headers values
func NewProductOfferingQualificationCreateForbidden() *ProductOfferingQualificationCreateForbidden {

	return &ProductOfferingQualificationCreateForbidden{}
}

// WithPayload adds the payload to the product offering qualification create forbidden response
func (o *ProductOfferingQualificationCreateForbidden) WithPayload(payload *models.ErrorRepresentation) *ProductOfferingQualificationCreateForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product offering qualification create forbidden response
func (o *ProductOfferingQualificationCreateForbidden) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOfferingQualificationCreateForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProductOfferingQualificationCreateNotFoundCode is the HTTP code returned for type ProductOfferingQualificationCreateNotFound
const ProductOfferingQualificationCreateNotFoundCode int = 404

/*ProductOfferingQualificationCreateNotFound Not Found

List of supported error codes:
- 60: Resource not found

swagger:response productOfferingQualificationCreateNotFound
*/
type ProductOfferingQualificationCreateNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewProductOfferingQualificationCreateNotFound creates ProductOfferingQualificationCreateNotFound with default headers values
func NewProductOfferingQualificationCreateNotFound() *ProductOfferingQualificationCreateNotFound {

	return &ProductOfferingQualificationCreateNotFound{}
}

// WithPayload adds the payload to the product offering qualification create not found response
func (o *ProductOfferingQualificationCreateNotFound) WithPayload(payload *models.ErrorRepresentation) *ProductOfferingQualificationCreateNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product offering qualification create not found response
func (o *ProductOfferingQualificationCreateNotFound) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOfferingQualificationCreateNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProductOfferingQualificationCreateRequestTimeoutCode is the HTTP code returned for type ProductOfferingQualificationCreateRequestTimeout
const ProductOfferingQualificationCreateRequestTimeoutCode int = 408

/*ProductOfferingQualificationCreateRequestTimeout Request Time-out

List of supported error codes:
- 63: Request time-out

swagger:response productOfferingQualificationCreateRequestTimeout
*/
type ProductOfferingQualificationCreateRequestTimeout struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewProductOfferingQualificationCreateRequestTimeout creates ProductOfferingQualificationCreateRequestTimeout with default headers values
func NewProductOfferingQualificationCreateRequestTimeout() *ProductOfferingQualificationCreateRequestTimeout {

	return &ProductOfferingQualificationCreateRequestTimeout{}
}

// WithPayload adds the payload to the product offering qualification create request timeout response
func (o *ProductOfferingQualificationCreateRequestTimeout) WithPayload(payload *models.ErrorRepresentation) *ProductOfferingQualificationCreateRequestTimeout {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product offering qualification create request timeout response
func (o *ProductOfferingQualificationCreateRequestTimeout) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOfferingQualificationCreateRequestTimeout) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(408)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProductOfferingQualificationCreateUnprocessableEntityCode is the HTTP code returned for type ProductOfferingQualificationCreateUnprocessableEntity
const ProductOfferingQualificationCreateUnprocessableEntityCode int = 422

/*ProductOfferingQualificationCreateUnprocessableEntity Unprocessable entity

Functional error





 - code: 100
message: A relatedParty - at productOfferingQualification level - with a role 'Buyer' must be provided (including contact information)
description:


 - code: 101
message: A least a productOffering OR a productSpecification OR a Product must be provided for a POQItem
description:


 - code: 102
message: Provided Product Offering Identifier is unknown
description:


 - code: 103
message: Provided Product Specification Identifier is unknown
description:


 - code: 104
message: Provided Product Identifier is unknown
description:


 - code: 105
message: The place information provided are invalid
description:


 - code: 106
message: A least one date provided is invalid
description:


 - code: 107
message: Incorrect related party role provided
description:

swagger:response productOfferingQualificationCreateUnprocessableEntity
*/
type ProductOfferingQualificationCreateUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewProductOfferingQualificationCreateUnprocessableEntity creates ProductOfferingQualificationCreateUnprocessableEntity with default headers values
func NewProductOfferingQualificationCreateUnprocessableEntity() *ProductOfferingQualificationCreateUnprocessableEntity {

	return &ProductOfferingQualificationCreateUnprocessableEntity{}
}

// WithPayload adds the payload to the product offering qualification create unprocessable entity response
func (o *ProductOfferingQualificationCreateUnprocessableEntity) WithPayload(payload *models.ErrorRepresentation) *ProductOfferingQualificationCreateUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product offering qualification create unprocessable entity response
func (o *ProductOfferingQualificationCreateUnprocessableEntity) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOfferingQualificationCreateUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProductOfferingQualificationCreateServiceUnavailableCode is the HTTP code returned for type ProductOfferingQualificationCreateServiceUnavailable
const ProductOfferingQualificationCreateServiceUnavailableCode int = 503

/*ProductOfferingQualificationCreateServiceUnavailable Service Unavailable



swagger:response productOfferingQualificationCreateServiceUnavailable
*/
type ProductOfferingQualificationCreateServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewProductOfferingQualificationCreateServiceUnavailable creates ProductOfferingQualificationCreateServiceUnavailable with default headers values
func NewProductOfferingQualificationCreateServiceUnavailable() *ProductOfferingQualificationCreateServiceUnavailable {

	return &ProductOfferingQualificationCreateServiceUnavailable{}
}

// WithPayload adds the payload to the product offering qualification create service unavailable response
func (o *ProductOfferingQualificationCreateServiceUnavailable) WithPayload(payload *models.ErrorRepresentation) *ProductOfferingQualificationCreateServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product offering qualification create service unavailable response
func (o *ProductOfferingQualificationCreateServiceUnavailable) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOfferingQualificationCreateServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
