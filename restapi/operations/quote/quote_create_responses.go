// Code generated by go-swagger; DO NOT EDIT.

package quote

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/qlcchain/go-sonata-server/models"
)

// QuoteCreateCreatedCode is the HTTP code returned for type QuoteCreateCreated
const QuoteCreateCreatedCode int = 201

/*QuoteCreateCreated Created

swagger:response quoteCreateCreated
*/
type QuoteCreateCreated struct {

	/*
	  In: Body
	*/
	Payload models.Quote `json:"body,omitempty"`
}

// NewQuoteCreateCreated creates QuoteCreateCreated with default headers values
func NewQuoteCreateCreated() *QuoteCreateCreated {

	return &QuoteCreateCreated{}
}

// WithPayload adds the payload to the quote create created response
func (o *QuoteCreateCreated) WithPayload(payload models.Quote) *QuoteCreateCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote create created response
func (o *QuoteCreateCreated) SetPayload(payload models.Quote) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteCreateCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QuoteCreateBadRequestCode is the HTTP code returned for type QuoteCreateBadRequest
const QuoteCreateBadRequestCode int = 400

/*QuoteCreateBadRequest Bad Request

List of supported error codes:
- 20: Invalid URL parameter value
- 21: Missing body
- 22: Invalid body
- 23: Missing body field
- 24: Invalid body field
- 25: Missing header
- 26: Invalid header value
- 27: Missing query-string parameter
- 28: Invalid query-string parameter value

swagger:response quoteCreateBadRequest
*/
type QuoteCreateBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewQuoteCreateBadRequest creates QuoteCreateBadRequest with default headers values
func NewQuoteCreateBadRequest() *QuoteCreateBadRequest {

	return &QuoteCreateBadRequest{}
}

// WithPayload adds the payload to the quote create bad request response
func (o *QuoteCreateBadRequest) WithPayload(payload *models.ErrorRepresentation) *QuoteCreateBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote create bad request response
func (o *QuoteCreateBadRequest) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteCreateBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QuoteCreateUnauthorizedCode is the HTTP code returned for type QuoteCreateUnauthorized
const QuoteCreateUnauthorizedCode int = 401

/*QuoteCreateUnauthorized Unauthorized

List of supported error codes:
- 40: Missing credentials
- 41: Invalid credentials
- 42: Expired credentials

swagger:response quoteCreateUnauthorized
*/
type QuoteCreateUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewQuoteCreateUnauthorized creates QuoteCreateUnauthorized with default headers values
func NewQuoteCreateUnauthorized() *QuoteCreateUnauthorized {

	return &QuoteCreateUnauthorized{}
}

// WithPayload adds the payload to the quote create unauthorized response
func (o *QuoteCreateUnauthorized) WithPayload(payload *models.ErrorRepresentation) *QuoteCreateUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote create unauthorized response
func (o *QuoteCreateUnauthorized) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteCreateUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QuoteCreateForbiddenCode is the HTTP code returned for type QuoteCreateForbidden
const QuoteCreateForbiddenCode int = 403

/*QuoteCreateForbidden Forbidden

List of supported error codes:
- 50: Access denied
- 51: Forbidden requester
- 52: Forbidden user
- 53: Too many requests

swagger:response quoteCreateForbidden
*/
type QuoteCreateForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewQuoteCreateForbidden creates QuoteCreateForbidden with default headers values
func NewQuoteCreateForbidden() *QuoteCreateForbidden {

	return &QuoteCreateForbidden{}
}

// WithPayload adds the payload to the quote create forbidden response
func (o *QuoteCreateForbidden) WithPayload(payload *models.ErrorRepresentation) *QuoteCreateForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote create forbidden response
func (o *QuoteCreateForbidden) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteCreateForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QuoteCreateNotFoundCode is the HTTP code returned for type QuoteCreateNotFound
const QuoteCreateNotFoundCode int = 404

/*QuoteCreateNotFound Not Found

List of supported error codes:
- 60: Resource not found

swagger:response quoteCreateNotFound
*/
type QuoteCreateNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewQuoteCreateNotFound creates QuoteCreateNotFound with default headers values
func NewQuoteCreateNotFound() *QuoteCreateNotFound {

	return &QuoteCreateNotFound{}
}

// WithPayload adds the payload to the quote create not found response
func (o *QuoteCreateNotFound) WithPayload(payload *models.ErrorRepresentation) *QuoteCreateNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote create not found response
func (o *QuoteCreateNotFound) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteCreateNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QuoteCreateMethodNotAllowedCode is the HTTP code returned for type QuoteCreateMethodNotAllowed
const QuoteCreateMethodNotAllowedCode int = 405

/*QuoteCreateMethodNotAllowed Method Not Allowed

List of supported error codes:
- 61: Method not allowed

swagger:response quoteCreateMethodNotAllowed
*/
type QuoteCreateMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewQuoteCreateMethodNotAllowed creates QuoteCreateMethodNotAllowed with default headers values
func NewQuoteCreateMethodNotAllowed() *QuoteCreateMethodNotAllowed {

	return &QuoteCreateMethodNotAllowed{}
}

// WithPayload adds the payload to the quote create method not allowed response
func (o *QuoteCreateMethodNotAllowed) WithPayload(payload *models.ErrorRepresentation) *QuoteCreateMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote create method not allowed response
func (o *QuoteCreateMethodNotAllowed) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteCreateMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QuoteCreateUnprocessableEntityCode is the HTTP code returned for type QuoteCreateUnprocessableEntity
const QuoteCreateUnprocessableEntityCode int = 422

/*QuoteCreateUnprocessableEntity Unprocessable entity

Functional error





 - code: 101
message: A relatedPartyRole for Buyer role must be provided
description:


 - code: 103
message: A relatedPartyRole is incomplete (must have partyRole.id or role.id+relatedParty)
description:


 - code: 104
message: A relatedParty is incomplete (must have a party.id or a party.name)
description:


 - code: 105
message: Qualification Id provided did not exist or expired
description:


 - code: 106
message: At least a productOffering Id or a product.id or a productSpec.id must be provided in quote item
description:


 - code: 107
message: inconsistency between  requestedQuoteCompletionDate and expectedFulfillmentStartDate
description:


 - code: 108
message: Seller requires agreement under which the buyer is requesting but is missing from the request.
description:


 - code: 109
message: The agreement provided cannot be validated by the seller
description:


 - code: 110
message: Product requested is not part of the provided agreement
description:


 - code: 111
message: Mandatory product/item relationship is missing
description:

swagger:response quoteCreateUnprocessableEntity
*/
type QuoteCreateUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewQuoteCreateUnprocessableEntity creates QuoteCreateUnprocessableEntity with default headers values
func NewQuoteCreateUnprocessableEntity() *QuoteCreateUnprocessableEntity {

	return &QuoteCreateUnprocessableEntity{}
}

// WithPayload adds the payload to the quote create unprocessable entity response
func (o *QuoteCreateUnprocessableEntity) WithPayload(payload *models.ErrorRepresentation) *QuoteCreateUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote create unprocessable entity response
func (o *QuoteCreateUnprocessableEntity) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteCreateUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QuoteCreateInternalServerErrorCode is the HTTP code returned for type QuoteCreateInternalServerError
const QuoteCreateInternalServerErrorCode int = 500

/*QuoteCreateInternalServerError Internal Server Error

List of supported error codes:
- 1: Internal error

swagger:response quoteCreateInternalServerError
*/
type QuoteCreateInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewQuoteCreateInternalServerError creates QuoteCreateInternalServerError with default headers values
func NewQuoteCreateInternalServerError() *QuoteCreateInternalServerError {

	return &QuoteCreateInternalServerError{}
}

// WithPayload adds the payload to the quote create internal server error response
func (o *QuoteCreateInternalServerError) WithPayload(payload *models.ErrorRepresentation) *QuoteCreateInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote create internal server error response
func (o *QuoteCreateInternalServerError) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteCreateInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QuoteCreateServiceUnavailableCode is the HTTP code returned for type QuoteCreateServiceUnavailable
const QuoteCreateServiceUnavailableCode int = 503

/*QuoteCreateServiceUnavailable Service Unavailable



swagger:response quoteCreateServiceUnavailable
*/
type QuoteCreateServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewQuoteCreateServiceUnavailable creates QuoteCreateServiceUnavailable with default headers values
func NewQuoteCreateServiceUnavailable() *QuoteCreateServiceUnavailable {

	return &QuoteCreateServiceUnavailable{}
}

// WithPayload adds the payload to the quote create service unavailable response
func (o *QuoteCreateServiceUnavailable) WithPayload(payload *models.ErrorRepresentation) *QuoteCreateServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote create service unavailable response
func (o *QuoteCreateServiceUnavailable) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteCreateServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
