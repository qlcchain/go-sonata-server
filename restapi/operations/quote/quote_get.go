// Code generated by go-swagger; DO NOT EDIT.

package quote

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// QuoteGetHandlerFunc turns a function with the right signature into a quote get handler
type QuoteGetHandlerFunc func(QuoteGetParams) middleware.Responder

// Handle executing the request and returning a response
func (fn QuoteGetHandlerFunc) Handle(params QuoteGetParams) middleware.Responder {
	return fn(params)
}

// QuoteGetHandler interface for that can handle valid quote get params
type QuoteGetHandler interface {
	Handle(QuoteGetParams) middleware.Responder
}

// NewQuoteGet creates a new http.Handler for the quote get operation
func NewQuoteGet(ctx *middleware.Context, handler QuoteGetHandler) *QuoteGet {
	return &QuoteGet{Context: ctx, Handler: handler}
}

/*QuoteGet swagger:route GET /quoteManagement/v2/quote/{id} Quote quoteGet

Retrieve a quote

This operation is used to retrieve quote information using the ID.

*/
type QuoteGet struct {
	Context *middleware.Context
	Handler QuoteGetHandler
}

func (o *QuoteGet) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewQuoteGetParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
