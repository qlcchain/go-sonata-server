// Code generated by go-swagger; DO NOT EDIT.

package quote

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	"github.com/qlcchain/go-sonata-server/models"
)

// QuoteFindOKCode is the HTTP code returned for type QuoteFindOK
const QuoteFindOKCode int = 200

/*QuoteFindOK Ok

swagger:response quoteFindOK
*/
type QuoteFindOK struct {
	/*The number of resources retrieved in the response

	 */
	XResultCount int32 `json:"X-Result-Count"`
	/*Total number of items matching criteria

	 */
	XTotalCount int32 `json:"X-Total-Count"`

	/*
	  In: Body
	*/
	Payload []*models.QuoteFind `json:"body,omitempty"`
}

// NewQuoteFindOK creates QuoteFindOK with default headers values
func NewQuoteFindOK() *QuoteFindOK {

	return &QuoteFindOK{}
}

// WithXResultCount adds the xResultCount to the quote find o k response
func (o *QuoteFindOK) WithXResultCount(xResultCount int32) *QuoteFindOK {
	o.XResultCount = xResultCount
	return o
}

// SetXResultCount sets the xResultCount to the quote find o k response
func (o *QuoteFindOK) SetXResultCount(xResultCount int32) {
	o.XResultCount = xResultCount
}

// WithXTotalCount adds the xTotalCount to the quote find o k response
func (o *QuoteFindOK) WithXTotalCount(xTotalCount int32) *QuoteFindOK {
	o.XTotalCount = xTotalCount
	return o
}

// SetXTotalCount sets the xTotalCount to the quote find o k response
func (o *QuoteFindOK) SetXTotalCount(xTotalCount int32) {
	o.XTotalCount = xTotalCount
}

// WithPayload adds the payload to the quote find o k response
func (o *QuoteFindOK) WithPayload(payload []*models.QuoteFind) *QuoteFindOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote find o k response
func (o *QuoteFindOK) SetPayload(payload []*models.QuoteFind) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteFindOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Result-Count

	xResultCount := swag.FormatInt32(o.XResultCount)
	if xResultCount != "" {
		rw.Header().Set("X-Result-Count", xResultCount)
	}

	// response header X-Total-Count

	xTotalCount := swag.FormatInt32(o.XTotalCount)
	if xTotalCount != "" {
		rw.Header().Set("X-Total-Count", xTotalCount)
	}

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.QuoteFind, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// QuoteFindBadRequestCode is the HTTP code returned for type QuoteFindBadRequest
const QuoteFindBadRequestCode int = 400

/*QuoteFindBadRequest Bad Request

List of supported error codes:
- 20: Invalid URL parameter value
- 21: Missing body
- 22: Invalid body
- 23: Missing body field
- 24: Invalid body field
- 25: Missing header
- 26: Invalid header value
- 27: Missing query-string parameter
- 28: Invalid query-string parameter value

swagger:response quoteFindBadRequest
*/
type QuoteFindBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewQuoteFindBadRequest creates QuoteFindBadRequest with default headers values
func NewQuoteFindBadRequest() *QuoteFindBadRequest {

	return &QuoteFindBadRequest{}
}

// WithPayload adds the payload to the quote find bad request response
func (o *QuoteFindBadRequest) WithPayload(payload *models.ErrorRepresentation) *QuoteFindBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote find bad request response
func (o *QuoteFindBadRequest) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteFindBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QuoteFindUnauthorizedCode is the HTTP code returned for type QuoteFindUnauthorized
const QuoteFindUnauthorizedCode int = 401

/*QuoteFindUnauthorized Unauthorized

List of supported error codes:
- 40: Missing credentials
- 41: Invalid credentials
- 42: Expired credentials

swagger:response quoteFindUnauthorized
*/
type QuoteFindUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewQuoteFindUnauthorized creates QuoteFindUnauthorized with default headers values
func NewQuoteFindUnauthorized() *QuoteFindUnauthorized {

	return &QuoteFindUnauthorized{}
}

// WithPayload adds the payload to the quote find unauthorized response
func (o *QuoteFindUnauthorized) WithPayload(payload *models.ErrorRepresentation) *QuoteFindUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote find unauthorized response
func (o *QuoteFindUnauthorized) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteFindUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QuoteFindForbiddenCode is the HTTP code returned for type QuoteFindForbidden
const QuoteFindForbiddenCode int = 403

/*QuoteFindForbidden Forbidden

List of supported error codes:
- 50: Access denied
- 51: Forbidden requester
- 52: Forbidden user
- 53: Too many requests

swagger:response quoteFindForbidden
*/
type QuoteFindForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewQuoteFindForbidden creates QuoteFindForbidden with default headers values
func NewQuoteFindForbidden() *QuoteFindForbidden {

	return &QuoteFindForbidden{}
}

// WithPayload adds the payload to the quote find forbidden response
func (o *QuoteFindForbidden) WithPayload(payload *models.ErrorRepresentation) *QuoteFindForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote find forbidden response
func (o *QuoteFindForbidden) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteFindForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QuoteFindNotFoundCode is the HTTP code returned for type QuoteFindNotFound
const QuoteFindNotFoundCode int = 404

/*QuoteFindNotFound Not Found

List of supported error codes:
- 60: Resource not found

swagger:response quoteFindNotFound
*/
type QuoteFindNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewQuoteFindNotFound creates QuoteFindNotFound with default headers values
func NewQuoteFindNotFound() *QuoteFindNotFound {

	return &QuoteFindNotFound{}
}

// WithPayload adds the payload to the quote find not found response
func (o *QuoteFindNotFound) WithPayload(payload *models.ErrorRepresentation) *QuoteFindNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote find not found response
func (o *QuoteFindNotFound) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteFindNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QuoteFindMethodNotAllowedCode is the HTTP code returned for type QuoteFindMethodNotAllowed
const QuoteFindMethodNotAllowedCode int = 405

/*QuoteFindMethodNotAllowed Method Not Allowed

List of supported error codes:
- 61: Method not allowed

swagger:response quoteFindMethodNotAllowed
*/
type QuoteFindMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewQuoteFindMethodNotAllowed creates QuoteFindMethodNotAllowed with default headers values
func NewQuoteFindMethodNotAllowed() *QuoteFindMethodNotAllowed {

	return &QuoteFindMethodNotAllowed{}
}

// WithPayload adds the payload to the quote find method not allowed response
func (o *QuoteFindMethodNotAllowed) WithPayload(payload *models.ErrorRepresentation) *QuoteFindMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote find method not allowed response
func (o *QuoteFindMethodNotAllowed) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteFindMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QuoteFindUnprocessableEntityCode is the HTTP code returned for type QuoteFindUnprocessableEntity
const QuoteFindUnprocessableEntityCode int = 422

/*QuoteFindUnprocessableEntity Unprocessable entity

Functional error





 - code: 100
message: Too many records retrieved - please restrict requested parameter value(s)
description:

swagger:response quoteFindUnprocessableEntity
*/
type QuoteFindUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewQuoteFindUnprocessableEntity creates QuoteFindUnprocessableEntity with default headers values
func NewQuoteFindUnprocessableEntity() *QuoteFindUnprocessableEntity {

	return &QuoteFindUnprocessableEntity{}
}

// WithPayload adds the payload to the quote find unprocessable entity response
func (o *QuoteFindUnprocessableEntity) WithPayload(payload *models.ErrorRepresentation) *QuoteFindUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote find unprocessable entity response
func (o *QuoteFindUnprocessableEntity) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteFindUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QuoteFindInternalServerErrorCode is the HTTP code returned for type QuoteFindInternalServerError
const QuoteFindInternalServerErrorCode int = 500

/*QuoteFindInternalServerError Internal Server Error

List of supported error codes:
- 1: Internal error

swagger:response quoteFindInternalServerError
*/
type QuoteFindInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewQuoteFindInternalServerError creates QuoteFindInternalServerError with default headers values
func NewQuoteFindInternalServerError() *QuoteFindInternalServerError {

	return &QuoteFindInternalServerError{}
}

// WithPayload adds the payload to the quote find internal server error response
func (o *QuoteFindInternalServerError) WithPayload(payload *models.ErrorRepresentation) *QuoteFindInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote find internal server error response
func (o *QuoteFindInternalServerError) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteFindInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QuoteFindServiceUnavailableCode is the HTTP code returned for type QuoteFindServiceUnavailable
const QuoteFindServiceUnavailableCode int = 503

/*QuoteFindServiceUnavailable Service Unavailable



swagger:response quoteFindServiceUnavailable
*/
type QuoteFindServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewQuoteFindServiceUnavailable creates QuoteFindServiceUnavailable with default headers values
func NewQuoteFindServiceUnavailable() *QuoteFindServiceUnavailable {

	return &QuoteFindServiceUnavailable{}
}

// WithPayload adds the payload to the quote find service unavailable response
func (o *QuoteFindServiceUnavailable) WithPayload(payload *models.ErrorRepresentation) *QuoteFindServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote find service unavailable response
func (o *QuoteFindServiceUnavailable) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteFindServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
