// Code generated by go-swagger; DO NOT EDIT.

package hub

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/qlcchain/go-sonata-server/models"
)

// ProductOrderManagementHubFindOKCode is the HTTP code returned for type ProductOrderManagementHubFindOK
const ProductOrderManagementHubFindOKCode int = 200

/*ProductOrderManagementHubFindOK Ok

swagger:response productOrderManagementHubFindOK
*/
type ProductOrderManagementHubFindOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Hub `json:"body,omitempty"`
}

// NewProductOrderManagementHubFindOK creates ProductOrderManagementHubFindOK with default headers values
func NewProductOrderManagementHubFindOK() *ProductOrderManagementHubFindOK {

	return &ProductOrderManagementHubFindOK{}
}

// WithPayload adds the payload to the product order management hub find o k response
func (o *ProductOrderManagementHubFindOK) WithPayload(payload []*models.Hub) *ProductOrderManagementHubFindOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product order management hub find o k response
func (o *ProductOrderManagementHubFindOK) SetPayload(payload []*models.Hub) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOrderManagementHubFindOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Hub, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ProductOrderManagementHubFindBadRequestCode is the HTTP code returned for type ProductOrderManagementHubFindBadRequest
const ProductOrderManagementHubFindBadRequestCode int = 400

/*ProductOrderManagementHubFindBadRequest Bad Request

List of supported error codes:
- 20: Invalid URL parameter value
- 21: Missing body
- 22: Invalid body
- 23: Missing body field
- 24: Invalid body field
- 25: Missing header
- 26: Invalid header value
- 27: Missing query-string parameter
- 28: Invalid query-string parameter value

swagger:response productOrderManagementHubFindBadRequest
*/
type ProductOrderManagementHubFindBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewProductOrderManagementHubFindBadRequest creates ProductOrderManagementHubFindBadRequest with default headers values
func NewProductOrderManagementHubFindBadRequest() *ProductOrderManagementHubFindBadRequest {

	return &ProductOrderManagementHubFindBadRequest{}
}

// WithPayload adds the payload to the product order management hub find bad request response
func (o *ProductOrderManagementHubFindBadRequest) WithPayload(payload *models.ErrorRepresentation) *ProductOrderManagementHubFindBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product order management hub find bad request response
func (o *ProductOrderManagementHubFindBadRequest) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOrderManagementHubFindBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProductOrderManagementHubFindUnauthorizedCode is the HTTP code returned for type ProductOrderManagementHubFindUnauthorized
const ProductOrderManagementHubFindUnauthorizedCode int = 401

/*ProductOrderManagementHubFindUnauthorized Unauthorized

List of supported error codes:
- 40: Missing credentials
- 41: Invalid credentials
- 42: Expired credentials

swagger:response productOrderManagementHubFindUnauthorized
*/
type ProductOrderManagementHubFindUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewProductOrderManagementHubFindUnauthorized creates ProductOrderManagementHubFindUnauthorized with default headers values
func NewProductOrderManagementHubFindUnauthorized() *ProductOrderManagementHubFindUnauthorized {

	return &ProductOrderManagementHubFindUnauthorized{}
}

// WithPayload adds the payload to the product order management hub find unauthorized response
func (o *ProductOrderManagementHubFindUnauthorized) WithPayload(payload *models.ErrorRepresentation) *ProductOrderManagementHubFindUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product order management hub find unauthorized response
func (o *ProductOrderManagementHubFindUnauthorized) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOrderManagementHubFindUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProductOrderManagementHubFindForbiddenCode is the HTTP code returned for type ProductOrderManagementHubFindForbidden
const ProductOrderManagementHubFindForbiddenCode int = 403

/*ProductOrderManagementHubFindForbidden Forbidden

List of supported error codes:
- 50: Access denied
- 51: Forbidden requester
- 52: Forbidden user
- 53: Too many requests

swagger:response productOrderManagementHubFindForbidden
*/
type ProductOrderManagementHubFindForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewProductOrderManagementHubFindForbidden creates ProductOrderManagementHubFindForbidden with default headers values
func NewProductOrderManagementHubFindForbidden() *ProductOrderManagementHubFindForbidden {

	return &ProductOrderManagementHubFindForbidden{}
}

// WithPayload adds the payload to the product order management hub find forbidden response
func (o *ProductOrderManagementHubFindForbidden) WithPayload(payload *models.ErrorRepresentation) *ProductOrderManagementHubFindForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product order management hub find forbidden response
func (o *ProductOrderManagementHubFindForbidden) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOrderManagementHubFindForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProductOrderManagementHubFindNotFoundCode is the HTTP code returned for type ProductOrderManagementHubFindNotFound
const ProductOrderManagementHubFindNotFoundCode int = 404

/*ProductOrderManagementHubFindNotFound Not Found

List of supported error codes:
- 60: Resource not found

swagger:response productOrderManagementHubFindNotFound
*/
type ProductOrderManagementHubFindNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewProductOrderManagementHubFindNotFound creates ProductOrderManagementHubFindNotFound with default headers values
func NewProductOrderManagementHubFindNotFound() *ProductOrderManagementHubFindNotFound {

	return &ProductOrderManagementHubFindNotFound{}
}

// WithPayload adds the payload to the product order management hub find not found response
func (o *ProductOrderManagementHubFindNotFound) WithPayload(payload *models.ErrorRepresentation) *ProductOrderManagementHubFindNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product order management hub find not found response
func (o *ProductOrderManagementHubFindNotFound) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOrderManagementHubFindNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProductOrderManagementHubFindMethodNotAllowedCode is the HTTP code returned for type ProductOrderManagementHubFindMethodNotAllowed
const ProductOrderManagementHubFindMethodNotAllowedCode int = 405

/*ProductOrderManagementHubFindMethodNotAllowed Method Not Allowed

List of supported error codes:
- 61: Method not allowed

swagger:response productOrderManagementHubFindMethodNotAllowed
*/
type ProductOrderManagementHubFindMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewProductOrderManagementHubFindMethodNotAllowed creates ProductOrderManagementHubFindMethodNotAllowed with default headers values
func NewProductOrderManagementHubFindMethodNotAllowed() *ProductOrderManagementHubFindMethodNotAllowed {

	return &ProductOrderManagementHubFindMethodNotAllowed{}
}

// WithPayload adds the payload to the product order management hub find method not allowed response
func (o *ProductOrderManagementHubFindMethodNotAllowed) WithPayload(payload *models.ErrorRepresentation) *ProductOrderManagementHubFindMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product order management hub find method not allowed response
func (o *ProductOrderManagementHubFindMethodNotAllowed) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOrderManagementHubFindMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProductOrderManagementHubFindRequestTimeoutCode is the HTTP code returned for type ProductOrderManagementHubFindRequestTimeout
const ProductOrderManagementHubFindRequestTimeoutCode int = 408

/*ProductOrderManagementHubFindRequestTimeout Request Time-out

List of supported error codes:
- 63: Request time-out

swagger:response productOrderManagementHubFindRequestTimeout
*/
type ProductOrderManagementHubFindRequestTimeout struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewProductOrderManagementHubFindRequestTimeout creates ProductOrderManagementHubFindRequestTimeout with default headers values
func NewProductOrderManagementHubFindRequestTimeout() *ProductOrderManagementHubFindRequestTimeout {

	return &ProductOrderManagementHubFindRequestTimeout{}
}

// WithPayload adds the payload to the product order management hub find request timeout response
func (o *ProductOrderManagementHubFindRequestTimeout) WithPayload(payload *models.ErrorRepresentation) *ProductOrderManagementHubFindRequestTimeout {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product order management hub find request timeout response
func (o *ProductOrderManagementHubFindRequestTimeout) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOrderManagementHubFindRequestTimeout) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(408)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProductOrderManagementHubFindUnprocessableEntityCode is the HTTP code returned for type ProductOrderManagementHubFindUnprocessableEntity
const ProductOrderManagementHubFindUnprocessableEntityCode int = 422

/*ProductOrderManagementHubFindUnprocessableEntity Unprocessable entity

Functional error

swagger:response productOrderManagementHubFindUnprocessableEntity
*/
type ProductOrderManagementHubFindUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewProductOrderManagementHubFindUnprocessableEntity creates ProductOrderManagementHubFindUnprocessableEntity with default headers values
func NewProductOrderManagementHubFindUnprocessableEntity() *ProductOrderManagementHubFindUnprocessableEntity {

	return &ProductOrderManagementHubFindUnprocessableEntity{}
}

// WithPayload adds the payload to the product order management hub find unprocessable entity response
func (o *ProductOrderManagementHubFindUnprocessableEntity) WithPayload(payload *models.ErrorRepresentation) *ProductOrderManagementHubFindUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product order management hub find unprocessable entity response
func (o *ProductOrderManagementHubFindUnprocessableEntity) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOrderManagementHubFindUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProductOrderManagementHubFindInternalServerErrorCode is the HTTP code returned for type ProductOrderManagementHubFindInternalServerError
const ProductOrderManagementHubFindInternalServerErrorCode int = 500

/*ProductOrderManagementHubFindInternalServerError Internal Server Error

List of supported error codes:
- 1: Internal error

swagger:response productOrderManagementHubFindInternalServerError
*/
type ProductOrderManagementHubFindInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewProductOrderManagementHubFindInternalServerError creates ProductOrderManagementHubFindInternalServerError with default headers values
func NewProductOrderManagementHubFindInternalServerError() *ProductOrderManagementHubFindInternalServerError {

	return &ProductOrderManagementHubFindInternalServerError{}
}

// WithPayload adds the payload to the product order management hub find internal server error response
func (o *ProductOrderManagementHubFindInternalServerError) WithPayload(payload *models.ErrorRepresentation) *ProductOrderManagementHubFindInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product order management hub find internal server error response
func (o *ProductOrderManagementHubFindInternalServerError) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOrderManagementHubFindInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ProductOrderManagementHubFindServiceUnavailableCode is the HTTP code returned for type ProductOrderManagementHubFindServiceUnavailable
const ProductOrderManagementHubFindServiceUnavailableCode int = 503

/*ProductOrderManagementHubFindServiceUnavailable Service Unavailable



swagger:response productOrderManagementHubFindServiceUnavailable
*/
type ProductOrderManagementHubFindServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewProductOrderManagementHubFindServiceUnavailable creates ProductOrderManagementHubFindServiceUnavailable with default headers values
func NewProductOrderManagementHubFindServiceUnavailable() *ProductOrderManagementHubFindServiceUnavailable {

	return &ProductOrderManagementHubFindServiceUnavailable{}
}

// WithPayload adds the payload to the product order management hub find service unavailable response
func (o *ProductOrderManagementHubFindServiceUnavailable) WithPayload(payload *models.ErrorRepresentation) *ProductOrderManagementHubFindServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the product order management hub find service unavailable response
func (o *ProductOrderManagementHubFindServiceUnavailable) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ProductOrderManagementHubFindServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
