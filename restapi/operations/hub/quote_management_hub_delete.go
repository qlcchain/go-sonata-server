// Code generated by go-swagger; DO NOT EDIT.

package hub

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// QuoteManagementHubDeleteHandlerFunc turns a function with the right signature into a quote management hub delete handler
type QuoteManagementHubDeleteHandlerFunc func(QuoteManagementHubDeleteParams) middleware.Responder

// Handle executing the request and returning a response
func (fn QuoteManagementHubDeleteHandlerFunc) Handle(params QuoteManagementHubDeleteParams) middleware.Responder {
	return fn(params)
}

// QuoteManagementHubDeleteHandler interface for that can handle valid quote management hub delete params
type QuoteManagementHubDeleteHandler interface {
	Handle(QuoteManagementHubDeleteParams) middleware.Responder
}

// NewQuoteManagementHubDelete creates a new http.Handler for the quote management hub delete operation
func NewQuoteManagementHubDelete(ctx *middleware.Context, handler QuoteManagementHubDeleteHandler) *QuoteManagementHubDelete {
	return &QuoteManagementHubDelete{Context: ctx, Handler: handler}
}

/*QuoteManagementHubDelete swagger:route DELETE /quoteManagement/v2/hub/{HubId} Hub quoteManagementHubDelete

Unregister a listener

Clears the communication endpoint address that was set by creating the Hub

*/
type QuoteManagementHubDelete struct {
	Context *middleware.Context
	Handler QuoteManagementHubDeleteHandler
}

func (o *QuoteManagementHubDelete) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewQuoteManagementHubDeleteParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
