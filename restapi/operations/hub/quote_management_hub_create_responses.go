// Code generated by go-swagger; DO NOT EDIT.

package hub

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/qlcchain/go-sonata-server/models"
)

// QuoteManagementHubCreateCreatedCode is the HTTP code returned for type QuoteManagementHubCreateCreated
const QuoteManagementHubCreateCreatedCode int = 201

/*QuoteManagementHubCreateCreated Created

swagger:response quoteManagementHubCreateCreated
*/
type QuoteManagementHubCreateCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Hub `json:"body,omitempty"`
}

// NewQuoteManagementHubCreateCreated creates QuoteManagementHubCreateCreated with default headers values
func NewQuoteManagementHubCreateCreated() *QuoteManagementHubCreateCreated {

	return &QuoteManagementHubCreateCreated{}
}

// WithPayload adds the payload to the quote management hub create created response
func (o *QuoteManagementHubCreateCreated) WithPayload(payload *models.Hub) *QuoteManagementHubCreateCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote management hub create created response
func (o *QuoteManagementHubCreateCreated) SetPayload(payload *models.Hub) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteManagementHubCreateCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QuoteManagementHubCreateBadRequestCode is the HTTP code returned for type QuoteManagementHubCreateBadRequest
const QuoteManagementHubCreateBadRequestCode int = 400

/*QuoteManagementHubCreateBadRequest Bad Request

List of supported error codes:
- 20: Invalid URL parameter value
- 21: Missing body
- 22: Invalid body
- 23: Missing body field
- 24: Invalid body field
- 25: Missing header
- 26: Invalid header value
- 27: Missing query-string parameter
- 28: Invalid query-string parameter value

swagger:response quoteManagementHubCreateBadRequest
*/
type QuoteManagementHubCreateBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewQuoteManagementHubCreateBadRequest creates QuoteManagementHubCreateBadRequest with default headers values
func NewQuoteManagementHubCreateBadRequest() *QuoteManagementHubCreateBadRequest {

	return &QuoteManagementHubCreateBadRequest{}
}

// WithPayload adds the payload to the quote management hub create bad request response
func (o *QuoteManagementHubCreateBadRequest) WithPayload(payload *models.ErrorRepresentation) *QuoteManagementHubCreateBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote management hub create bad request response
func (o *QuoteManagementHubCreateBadRequest) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteManagementHubCreateBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QuoteManagementHubCreateUnauthorizedCode is the HTTP code returned for type QuoteManagementHubCreateUnauthorized
const QuoteManagementHubCreateUnauthorizedCode int = 401

/*QuoteManagementHubCreateUnauthorized Unauthorized

List of supported error codes:
- 40: Missing credentials
- 41: Invalid credentials
- 42: Expired credentials

swagger:response quoteManagementHubCreateUnauthorized
*/
type QuoteManagementHubCreateUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewQuoteManagementHubCreateUnauthorized creates QuoteManagementHubCreateUnauthorized with default headers values
func NewQuoteManagementHubCreateUnauthorized() *QuoteManagementHubCreateUnauthorized {

	return &QuoteManagementHubCreateUnauthorized{}
}

// WithPayload adds the payload to the quote management hub create unauthorized response
func (o *QuoteManagementHubCreateUnauthorized) WithPayload(payload *models.ErrorRepresentation) *QuoteManagementHubCreateUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote management hub create unauthorized response
func (o *QuoteManagementHubCreateUnauthorized) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteManagementHubCreateUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QuoteManagementHubCreateForbiddenCode is the HTTP code returned for type QuoteManagementHubCreateForbidden
const QuoteManagementHubCreateForbiddenCode int = 403

/*QuoteManagementHubCreateForbidden Forbidden

List of supported error codes:
- 50: Access denied
- 51: Forbidden requester
- 52: Forbidden user
- 53: Too many requests

swagger:response quoteManagementHubCreateForbidden
*/
type QuoteManagementHubCreateForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewQuoteManagementHubCreateForbidden creates QuoteManagementHubCreateForbidden with default headers values
func NewQuoteManagementHubCreateForbidden() *QuoteManagementHubCreateForbidden {

	return &QuoteManagementHubCreateForbidden{}
}

// WithPayload adds the payload to the quote management hub create forbidden response
func (o *QuoteManagementHubCreateForbidden) WithPayload(payload *models.ErrorRepresentation) *QuoteManagementHubCreateForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote management hub create forbidden response
func (o *QuoteManagementHubCreateForbidden) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteManagementHubCreateForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QuoteManagementHubCreateNotFoundCode is the HTTP code returned for type QuoteManagementHubCreateNotFound
const QuoteManagementHubCreateNotFoundCode int = 404

/*QuoteManagementHubCreateNotFound Not Found

List of supported error codes:
- 60: Resource not found

swagger:response quoteManagementHubCreateNotFound
*/
type QuoteManagementHubCreateNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewQuoteManagementHubCreateNotFound creates QuoteManagementHubCreateNotFound with default headers values
func NewQuoteManagementHubCreateNotFound() *QuoteManagementHubCreateNotFound {

	return &QuoteManagementHubCreateNotFound{}
}

// WithPayload adds the payload to the quote management hub create not found response
func (o *QuoteManagementHubCreateNotFound) WithPayload(payload *models.ErrorRepresentation) *QuoteManagementHubCreateNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote management hub create not found response
func (o *QuoteManagementHubCreateNotFound) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteManagementHubCreateNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QuoteManagementHubCreateMethodNotAllowedCode is the HTTP code returned for type QuoteManagementHubCreateMethodNotAllowed
const QuoteManagementHubCreateMethodNotAllowedCode int = 405

/*QuoteManagementHubCreateMethodNotAllowed Method Not Allowed

List of supported error codes:
- 61: Method not allowed

swagger:response quoteManagementHubCreateMethodNotAllowed
*/
type QuoteManagementHubCreateMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewQuoteManagementHubCreateMethodNotAllowed creates QuoteManagementHubCreateMethodNotAllowed with default headers values
func NewQuoteManagementHubCreateMethodNotAllowed() *QuoteManagementHubCreateMethodNotAllowed {

	return &QuoteManagementHubCreateMethodNotAllowed{}
}

// WithPayload adds the payload to the quote management hub create method not allowed response
func (o *QuoteManagementHubCreateMethodNotAllowed) WithPayload(payload *models.ErrorRepresentation) *QuoteManagementHubCreateMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote management hub create method not allowed response
func (o *QuoteManagementHubCreateMethodNotAllowed) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteManagementHubCreateMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QuoteManagementHubCreateUnprocessableEntityCode is the HTTP code returned for type QuoteManagementHubCreateUnprocessableEntity
const QuoteManagementHubCreateUnprocessableEntityCode int = 422

/*QuoteManagementHubCreateUnprocessableEntity Unprocessable entity

Functional error

swagger:response quoteManagementHubCreateUnprocessableEntity
*/
type QuoteManagementHubCreateUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewQuoteManagementHubCreateUnprocessableEntity creates QuoteManagementHubCreateUnprocessableEntity with default headers values
func NewQuoteManagementHubCreateUnprocessableEntity() *QuoteManagementHubCreateUnprocessableEntity {

	return &QuoteManagementHubCreateUnprocessableEntity{}
}

// WithPayload adds the payload to the quote management hub create unprocessable entity response
func (o *QuoteManagementHubCreateUnprocessableEntity) WithPayload(payload *models.ErrorRepresentation) *QuoteManagementHubCreateUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote management hub create unprocessable entity response
func (o *QuoteManagementHubCreateUnprocessableEntity) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteManagementHubCreateUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QuoteManagementHubCreateInternalServerErrorCode is the HTTP code returned for type QuoteManagementHubCreateInternalServerError
const QuoteManagementHubCreateInternalServerErrorCode int = 500

/*QuoteManagementHubCreateInternalServerError Internal Server Error

List of supported error codes:
- 1: Internal error

swagger:response quoteManagementHubCreateInternalServerError
*/
type QuoteManagementHubCreateInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewQuoteManagementHubCreateInternalServerError creates QuoteManagementHubCreateInternalServerError with default headers values
func NewQuoteManagementHubCreateInternalServerError() *QuoteManagementHubCreateInternalServerError {

	return &QuoteManagementHubCreateInternalServerError{}
}

// WithPayload adds the payload to the quote management hub create internal server error response
func (o *QuoteManagementHubCreateInternalServerError) WithPayload(payload *models.ErrorRepresentation) *QuoteManagementHubCreateInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote management hub create internal server error response
func (o *QuoteManagementHubCreateInternalServerError) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteManagementHubCreateInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QuoteManagementHubCreateServiceUnavailableCode is the HTTP code returned for type QuoteManagementHubCreateServiceUnavailable
const QuoteManagementHubCreateServiceUnavailableCode int = 503

/*QuoteManagementHubCreateServiceUnavailable Service Unavailable



swagger:response quoteManagementHubCreateServiceUnavailable
*/
type QuoteManagementHubCreateServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewQuoteManagementHubCreateServiceUnavailable creates QuoteManagementHubCreateServiceUnavailable with default headers values
func NewQuoteManagementHubCreateServiceUnavailable() *QuoteManagementHubCreateServiceUnavailable {

	return &QuoteManagementHubCreateServiceUnavailable{}
}

// WithPayload adds the payload to the quote management hub create service unavailable response
func (o *QuoteManagementHubCreateServiceUnavailable) WithPayload(payload *models.ErrorRepresentation) *QuoteManagementHubCreateServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote management hub create service unavailable response
func (o *QuoteManagementHubCreateServiceUnavailable) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteManagementHubCreateServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
