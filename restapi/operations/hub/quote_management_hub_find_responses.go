// Code generated by go-swagger; DO NOT EDIT.

package hub

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/qlcchain/go-sonata-server/models"
)

// QuoteManagementHubFindOKCode is the HTTP code returned for type QuoteManagementHubFindOK
const QuoteManagementHubFindOKCode int = 200

/*QuoteManagementHubFindOK Ok

swagger:response quoteManagementHubFindOK
*/
type QuoteManagementHubFindOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Hub `json:"body,omitempty"`
}

// NewQuoteManagementHubFindOK creates QuoteManagementHubFindOK with default headers values
func NewQuoteManagementHubFindOK() *QuoteManagementHubFindOK {

	return &QuoteManagementHubFindOK{}
}

// WithPayload adds the payload to the quote management hub find o k response
func (o *QuoteManagementHubFindOK) WithPayload(payload []*models.Hub) *QuoteManagementHubFindOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote management hub find o k response
func (o *QuoteManagementHubFindOK) SetPayload(payload []*models.Hub) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteManagementHubFindOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Hub, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// QuoteManagementHubFindBadRequestCode is the HTTP code returned for type QuoteManagementHubFindBadRequest
const QuoteManagementHubFindBadRequestCode int = 400

/*QuoteManagementHubFindBadRequest Bad Request

List of supported error codes:
- 20: Invalid URL parameter value
- 21: Missing body
- 22: Invalid body
- 23: Missing body field
- 24: Invalid body field
- 25: Missing header
- 26: Invalid header value
- 27: Missing query-string parameter
- 28: Invalid query-string parameter value

swagger:response quoteManagementHubFindBadRequest
*/
type QuoteManagementHubFindBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewQuoteManagementHubFindBadRequest creates QuoteManagementHubFindBadRequest with default headers values
func NewQuoteManagementHubFindBadRequest() *QuoteManagementHubFindBadRequest {

	return &QuoteManagementHubFindBadRequest{}
}

// WithPayload adds the payload to the quote management hub find bad request response
func (o *QuoteManagementHubFindBadRequest) WithPayload(payload *models.ErrorRepresentation) *QuoteManagementHubFindBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote management hub find bad request response
func (o *QuoteManagementHubFindBadRequest) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteManagementHubFindBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QuoteManagementHubFindUnauthorizedCode is the HTTP code returned for type QuoteManagementHubFindUnauthorized
const QuoteManagementHubFindUnauthorizedCode int = 401

/*QuoteManagementHubFindUnauthorized Unauthorized

List of supported error codes:
- 40: Missing credentials
- 41: Invalid credentials
- 42: Expired credentials

swagger:response quoteManagementHubFindUnauthorized
*/
type QuoteManagementHubFindUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewQuoteManagementHubFindUnauthorized creates QuoteManagementHubFindUnauthorized with default headers values
func NewQuoteManagementHubFindUnauthorized() *QuoteManagementHubFindUnauthorized {

	return &QuoteManagementHubFindUnauthorized{}
}

// WithPayload adds the payload to the quote management hub find unauthorized response
func (o *QuoteManagementHubFindUnauthorized) WithPayload(payload *models.ErrorRepresentation) *QuoteManagementHubFindUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote management hub find unauthorized response
func (o *QuoteManagementHubFindUnauthorized) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteManagementHubFindUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QuoteManagementHubFindForbiddenCode is the HTTP code returned for type QuoteManagementHubFindForbidden
const QuoteManagementHubFindForbiddenCode int = 403

/*QuoteManagementHubFindForbidden Forbidden

List of supported error codes:
- 50: Access denied
- 51: Forbidden requester
- 52: Forbidden user
- 53: Too many requests

swagger:response quoteManagementHubFindForbidden
*/
type QuoteManagementHubFindForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewQuoteManagementHubFindForbidden creates QuoteManagementHubFindForbidden with default headers values
func NewQuoteManagementHubFindForbidden() *QuoteManagementHubFindForbidden {

	return &QuoteManagementHubFindForbidden{}
}

// WithPayload adds the payload to the quote management hub find forbidden response
func (o *QuoteManagementHubFindForbidden) WithPayload(payload *models.ErrorRepresentation) *QuoteManagementHubFindForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote management hub find forbidden response
func (o *QuoteManagementHubFindForbidden) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteManagementHubFindForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QuoteManagementHubFindNotFoundCode is the HTTP code returned for type QuoteManagementHubFindNotFound
const QuoteManagementHubFindNotFoundCode int = 404

/*QuoteManagementHubFindNotFound Not Found

List of supported error codes:
- 60: Resource not found

swagger:response quoteManagementHubFindNotFound
*/
type QuoteManagementHubFindNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewQuoteManagementHubFindNotFound creates QuoteManagementHubFindNotFound with default headers values
func NewQuoteManagementHubFindNotFound() *QuoteManagementHubFindNotFound {

	return &QuoteManagementHubFindNotFound{}
}

// WithPayload adds the payload to the quote management hub find not found response
func (o *QuoteManagementHubFindNotFound) WithPayload(payload *models.ErrorRepresentation) *QuoteManagementHubFindNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote management hub find not found response
func (o *QuoteManagementHubFindNotFound) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteManagementHubFindNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QuoteManagementHubFindMethodNotAllowedCode is the HTTP code returned for type QuoteManagementHubFindMethodNotAllowed
const QuoteManagementHubFindMethodNotAllowedCode int = 405

/*QuoteManagementHubFindMethodNotAllowed Method Not Allowed

List of supported error codes:
- 61: Method not allowed

swagger:response quoteManagementHubFindMethodNotAllowed
*/
type QuoteManagementHubFindMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewQuoteManagementHubFindMethodNotAllowed creates QuoteManagementHubFindMethodNotAllowed with default headers values
func NewQuoteManagementHubFindMethodNotAllowed() *QuoteManagementHubFindMethodNotAllowed {

	return &QuoteManagementHubFindMethodNotAllowed{}
}

// WithPayload adds the payload to the quote management hub find method not allowed response
func (o *QuoteManagementHubFindMethodNotAllowed) WithPayload(payload *models.ErrorRepresentation) *QuoteManagementHubFindMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote management hub find method not allowed response
func (o *QuoteManagementHubFindMethodNotAllowed) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteManagementHubFindMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QuoteManagementHubFindUnprocessableEntityCode is the HTTP code returned for type QuoteManagementHubFindUnprocessableEntity
const QuoteManagementHubFindUnprocessableEntityCode int = 422

/*QuoteManagementHubFindUnprocessableEntity Unprocessable entity

Functional error

swagger:response quoteManagementHubFindUnprocessableEntity
*/
type QuoteManagementHubFindUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewQuoteManagementHubFindUnprocessableEntity creates QuoteManagementHubFindUnprocessableEntity with default headers values
func NewQuoteManagementHubFindUnprocessableEntity() *QuoteManagementHubFindUnprocessableEntity {

	return &QuoteManagementHubFindUnprocessableEntity{}
}

// WithPayload adds the payload to the quote management hub find unprocessable entity response
func (o *QuoteManagementHubFindUnprocessableEntity) WithPayload(payload *models.ErrorRepresentation) *QuoteManagementHubFindUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote management hub find unprocessable entity response
func (o *QuoteManagementHubFindUnprocessableEntity) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteManagementHubFindUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QuoteManagementHubFindInternalServerErrorCode is the HTTP code returned for type QuoteManagementHubFindInternalServerError
const QuoteManagementHubFindInternalServerErrorCode int = 500

/*QuoteManagementHubFindInternalServerError Internal Server Error

List of supported error codes:
- 1: Internal error

swagger:response quoteManagementHubFindInternalServerError
*/
type QuoteManagementHubFindInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewQuoteManagementHubFindInternalServerError creates QuoteManagementHubFindInternalServerError with default headers values
func NewQuoteManagementHubFindInternalServerError() *QuoteManagementHubFindInternalServerError {

	return &QuoteManagementHubFindInternalServerError{}
}

// WithPayload adds the payload to the quote management hub find internal server error response
func (o *QuoteManagementHubFindInternalServerError) WithPayload(payload *models.ErrorRepresentation) *QuoteManagementHubFindInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote management hub find internal server error response
func (o *QuoteManagementHubFindInternalServerError) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteManagementHubFindInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// QuoteManagementHubFindServiceUnavailableCode is the HTTP code returned for type QuoteManagementHubFindServiceUnavailable
const QuoteManagementHubFindServiceUnavailableCode int = 503

/*QuoteManagementHubFindServiceUnavailable Service Unavailable



swagger:response quoteManagementHubFindServiceUnavailable
*/
type QuoteManagementHubFindServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewQuoteManagementHubFindServiceUnavailable creates QuoteManagementHubFindServiceUnavailable with default headers values
func NewQuoteManagementHubFindServiceUnavailable() *QuoteManagementHubFindServiceUnavailable {

	return &QuoteManagementHubFindServiceUnavailable{}
}

// WithPayload adds the payload to the quote management hub find service unavailable response
func (o *QuoteManagementHubFindServiceUnavailable) WithPayload(payload *models.ErrorRepresentation) *QuoteManagementHubFindServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the quote management hub find service unavailable response
func (o *QuoteManagementHubFindServiceUnavailable) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *QuoteManagementHubFindServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
