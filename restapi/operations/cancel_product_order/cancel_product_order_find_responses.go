// Code generated by go-swagger; DO NOT EDIT.

package cancel_product_order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/qlcchain/go-sonata-server/models"
)

// CancelProductOrderFindOKCode is the HTTP code returned for type CancelProductOrderFindOK
const CancelProductOrderFindOKCode int = 200

/*CancelProductOrderFindOK Ok

swagger:response cancelProductOrderFindOK
*/
type CancelProductOrderFindOK struct {

	/*
	  In: Body
	*/
	Payload []*models.CancelProductOrder `json:"body,omitempty"`
}

// NewCancelProductOrderFindOK creates CancelProductOrderFindOK with default headers values
func NewCancelProductOrderFindOK() *CancelProductOrderFindOK {

	return &CancelProductOrderFindOK{}
}

// WithPayload adds the payload to the cancel product order find o k response
func (o *CancelProductOrderFindOK) WithPayload(payload []*models.CancelProductOrder) *CancelProductOrderFindOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel product order find o k response
func (o *CancelProductOrderFindOK) SetPayload(payload []*models.CancelProductOrder) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelProductOrderFindOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.CancelProductOrder, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// CancelProductOrderFindBadRequestCode is the HTTP code returned for type CancelProductOrderFindBadRequest
const CancelProductOrderFindBadRequestCode int = 400

/*CancelProductOrderFindBadRequest Bad Request

List of supported error codes:
- 20: Invalid URL parameter value
- 21: Missing body
- 22: Invalid body
- 23: Missing body field
- 24: Invalid body field
- 25: Missing header
- 26: Invalid header value
- 27: Missing query-string parameter
- 28: Invalid query-string parameter value

swagger:response cancelProductOrderFindBadRequest
*/
type CancelProductOrderFindBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewCancelProductOrderFindBadRequest creates CancelProductOrderFindBadRequest with default headers values
func NewCancelProductOrderFindBadRequest() *CancelProductOrderFindBadRequest {

	return &CancelProductOrderFindBadRequest{}
}

// WithPayload adds the payload to the cancel product order find bad request response
func (o *CancelProductOrderFindBadRequest) WithPayload(payload *models.ErrorRepresentation) *CancelProductOrderFindBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel product order find bad request response
func (o *CancelProductOrderFindBadRequest) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelProductOrderFindBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CancelProductOrderFindUnauthorizedCode is the HTTP code returned for type CancelProductOrderFindUnauthorized
const CancelProductOrderFindUnauthorizedCode int = 401

/*CancelProductOrderFindUnauthorized Unauthorized

List of supported error codes:
- 40: Missing credentials
- 41: Invalid credentials
- 42: Expired credentials

swagger:response cancelProductOrderFindUnauthorized
*/
type CancelProductOrderFindUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewCancelProductOrderFindUnauthorized creates CancelProductOrderFindUnauthorized with default headers values
func NewCancelProductOrderFindUnauthorized() *CancelProductOrderFindUnauthorized {

	return &CancelProductOrderFindUnauthorized{}
}

// WithPayload adds the payload to the cancel product order find unauthorized response
func (o *CancelProductOrderFindUnauthorized) WithPayload(payload *models.ErrorRepresentation) *CancelProductOrderFindUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel product order find unauthorized response
func (o *CancelProductOrderFindUnauthorized) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelProductOrderFindUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CancelProductOrderFindForbiddenCode is the HTTP code returned for type CancelProductOrderFindForbidden
const CancelProductOrderFindForbiddenCode int = 403

/*CancelProductOrderFindForbidden Forbidden

List of supported error codes:
- 50: Access denied
- 51: Forbidden requester
- 52: Forbidden user
- 53: Too many requests

swagger:response cancelProductOrderFindForbidden
*/
type CancelProductOrderFindForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewCancelProductOrderFindForbidden creates CancelProductOrderFindForbidden with default headers values
func NewCancelProductOrderFindForbidden() *CancelProductOrderFindForbidden {

	return &CancelProductOrderFindForbidden{}
}

// WithPayload adds the payload to the cancel product order find forbidden response
func (o *CancelProductOrderFindForbidden) WithPayload(payload *models.ErrorRepresentation) *CancelProductOrderFindForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel product order find forbidden response
func (o *CancelProductOrderFindForbidden) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelProductOrderFindForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CancelProductOrderFindNotFoundCode is the HTTP code returned for type CancelProductOrderFindNotFound
const CancelProductOrderFindNotFoundCode int = 404

/*CancelProductOrderFindNotFound Not Found

List of supported error codes:
- 60: Resource not found

swagger:response cancelProductOrderFindNotFound
*/
type CancelProductOrderFindNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewCancelProductOrderFindNotFound creates CancelProductOrderFindNotFound with default headers values
func NewCancelProductOrderFindNotFound() *CancelProductOrderFindNotFound {

	return &CancelProductOrderFindNotFound{}
}

// WithPayload adds the payload to the cancel product order find not found response
func (o *CancelProductOrderFindNotFound) WithPayload(payload *models.ErrorRepresentation) *CancelProductOrderFindNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel product order find not found response
func (o *CancelProductOrderFindNotFound) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelProductOrderFindNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CancelProductOrderFindMethodNotAllowedCode is the HTTP code returned for type CancelProductOrderFindMethodNotAllowed
const CancelProductOrderFindMethodNotAllowedCode int = 405

/*CancelProductOrderFindMethodNotAllowed Method Not Allowed

List of supported error codes:
- 61: Method not allowed

swagger:response cancelProductOrderFindMethodNotAllowed
*/
type CancelProductOrderFindMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewCancelProductOrderFindMethodNotAllowed creates CancelProductOrderFindMethodNotAllowed with default headers values
func NewCancelProductOrderFindMethodNotAllowed() *CancelProductOrderFindMethodNotAllowed {

	return &CancelProductOrderFindMethodNotAllowed{}
}

// WithPayload adds the payload to the cancel product order find method not allowed response
func (o *CancelProductOrderFindMethodNotAllowed) WithPayload(payload *models.ErrorRepresentation) *CancelProductOrderFindMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel product order find method not allowed response
func (o *CancelProductOrderFindMethodNotAllowed) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelProductOrderFindMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CancelProductOrderFindRequestTimeoutCode is the HTTP code returned for type CancelProductOrderFindRequestTimeout
const CancelProductOrderFindRequestTimeoutCode int = 408

/*CancelProductOrderFindRequestTimeout Request Time-out

List of supported error codes:
- 63: Request time-out

swagger:response cancelProductOrderFindRequestTimeout
*/
type CancelProductOrderFindRequestTimeout struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewCancelProductOrderFindRequestTimeout creates CancelProductOrderFindRequestTimeout with default headers values
func NewCancelProductOrderFindRequestTimeout() *CancelProductOrderFindRequestTimeout {

	return &CancelProductOrderFindRequestTimeout{}
}

// WithPayload adds the payload to the cancel product order find request timeout response
func (o *CancelProductOrderFindRequestTimeout) WithPayload(payload *models.ErrorRepresentation) *CancelProductOrderFindRequestTimeout {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel product order find request timeout response
func (o *CancelProductOrderFindRequestTimeout) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelProductOrderFindRequestTimeout) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(408)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CancelProductOrderFindUnprocessableEntityCode is the HTTP code returned for type CancelProductOrderFindUnprocessableEntity
const CancelProductOrderFindUnprocessableEntityCode int = 422

/*CancelProductOrderFindUnprocessableEntity Unprocessable entity

Functional error

swagger:response cancelProductOrderFindUnprocessableEntity
*/
type CancelProductOrderFindUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewCancelProductOrderFindUnprocessableEntity creates CancelProductOrderFindUnprocessableEntity with default headers values
func NewCancelProductOrderFindUnprocessableEntity() *CancelProductOrderFindUnprocessableEntity {

	return &CancelProductOrderFindUnprocessableEntity{}
}

// WithPayload adds the payload to the cancel product order find unprocessable entity response
func (o *CancelProductOrderFindUnprocessableEntity) WithPayload(payload *models.ErrorRepresentation) *CancelProductOrderFindUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel product order find unprocessable entity response
func (o *CancelProductOrderFindUnprocessableEntity) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelProductOrderFindUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CancelProductOrderFindInternalServerErrorCode is the HTTP code returned for type CancelProductOrderFindInternalServerError
const CancelProductOrderFindInternalServerErrorCode int = 500

/*CancelProductOrderFindInternalServerError Internal Server Error

List of supported error codes:
- 1: Internal error

swagger:response cancelProductOrderFindInternalServerError
*/
type CancelProductOrderFindInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewCancelProductOrderFindInternalServerError creates CancelProductOrderFindInternalServerError with default headers values
func NewCancelProductOrderFindInternalServerError() *CancelProductOrderFindInternalServerError {

	return &CancelProductOrderFindInternalServerError{}
}

// WithPayload adds the payload to the cancel product order find internal server error response
func (o *CancelProductOrderFindInternalServerError) WithPayload(payload *models.ErrorRepresentation) *CancelProductOrderFindInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel product order find internal server error response
func (o *CancelProductOrderFindInternalServerError) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelProductOrderFindInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CancelProductOrderFindServiceUnavailableCode is the HTTP code returned for type CancelProductOrderFindServiceUnavailable
const CancelProductOrderFindServiceUnavailableCode int = 503

/*CancelProductOrderFindServiceUnavailable Service Unavailable



swagger:response cancelProductOrderFindServiceUnavailable
*/
type CancelProductOrderFindServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewCancelProductOrderFindServiceUnavailable creates CancelProductOrderFindServiceUnavailable with default headers values
func NewCancelProductOrderFindServiceUnavailable() *CancelProductOrderFindServiceUnavailable {

	return &CancelProductOrderFindServiceUnavailable{}
}

// WithPayload adds the payload to the cancel product order find service unavailable response
func (o *CancelProductOrderFindServiceUnavailable) WithPayload(payload *models.ErrorRepresentation) *CancelProductOrderFindServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel product order find service unavailable response
func (o *CancelProductOrderFindServiceUnavailable) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelProductOrderFindServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
