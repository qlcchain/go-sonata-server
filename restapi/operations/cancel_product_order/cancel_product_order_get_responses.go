// Code generated by go-swagger; DO NOT EDIT.

package cancel_product_order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/qlcchain/go-sonata-server/models"
)

// CancelProductOrderGetOKCode is the HTTP code returned for type CancelProductOrderGetOK
const CancelProductOrderGetOKCode int = 200

/*CancelProductOrderGetOK Ok

swagger:response cancelProductOrderGetOK
*/
type CancelProductOrderGetOK struct {

	/*
	  In: Body
	*/
	Payload *models.CancelProductOrder `json:"body,omitempty"`
}

// NewCancelProductOrderGetOK creates CancelProductOrderGetOK with default headers values
func NewCancelProductOrderGetOK() *CancelProductOrderGetOK {

	return &CancelProductOrderGetOK{}
}

// WithPayload adds the payload to the cancel product order get o k response
func (o *CancelProductOrderGetOK) WithPayload(payload *models.CancelProductOrder) *CancelProductOrderGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel product order get o k response
func (o *CancelProductOrderGetOK) SetPayload(payload *models.CancelProductOrder) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelProductOrderGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CancelProductOrderGetBadRequestCode is the HTTP code returned for type CancelProductOrderGetBadRequest
const CancelProductOrderGetBadRequestCode int = 400

/*CancelProductOrderGetBadRequest Bad Request

List of supported error codes:
- 20: Invalid URL parameter value
- 21: Missing body
- 22: Invalid body
- 23: Missing body field
- 24: Invalid body field
- 25: Missing header
- 26: Invalid header value
- 27: Missing query-string parameter
- 28: Invalid query-string parameter value

swagger:response cancelProductOrderGetBadRequest
*/
type CancelProductOrderGetBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewCancelProductOrderGetBadRequest creates CancelProductOrderGetBadRequest with default headers values
func NewCancelProductOrderGetBadRequest() *CancelProductOrderGetBadRequest {

	return &CancelProductOrderGetBadRequest{}
}

// WithPayload adds the payload to the cancel product order get bad request response
func (o *CancelProductOrderGetBadRequest) WithPayload(payload *models.ErrorRepresentation) *CancelProductOrderGetBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel product order get bad request response
func (o *CancelProductOrderGetBadRequest) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelProductOrderGetBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CancelProductOrderGetUnauthorizedCode is the HTTP code returned for type CancelProductOrderGetUnauthorized
const CancelProductOrderGetUnauthorizedCode int = 401

/*CancelProductOrderGetUnauthorized Unauthorized

List of supported error codes:
- 40: Missing credentials
- 41: Invalid credentials
- 42: Expired credentials

swagger:response cancelProductOrderGetUnauthorized
*/
type CancelProductOrderGetUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewCancelProductOrderGetUnauthorized creates CancelProductOrderGetUnauthorized with default headers values
func NewCancelProductOrderGetUnauthorized() *CancelProductOrderGetUnauthorized {

	return &CancelProductOrderGetUnauthorized{}
}

// WithPayload adds the payload to the cancel product order get unauthorized response
func (o *CancelProductOrderGetUnauthorized) WithPayload(payload *models.ErrorRepresentation) *CancelProductOrderGetUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel product order get unauthorized response
func (o *CancelProductOrderGetUnauthorized) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelProductOrderGetUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CancelProductOrderGetForbiddenCode is the HTTP code returned for type CancelProductOrderGetForbidden
const CancelProductOrderGetForbiddenCode int = 403

/*CancelProductOrderGetForbidden Forbidden

List of supported error codes:
- 50: Access denied
- 51: Forbidden requester
- 52: Forbidden user
- 53: Too many requests

swagger:response cancelProductOrderGetForbidden
*/
type CancelProductOrderGetForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewCancelProductOrderGetForbidden creates CancelProductOrderGetForbidden with default headers values
func NewCancelProductOrderGetForbidden() *CancelProductOrderGetForbidden {

	return &CancelProductOrderGetForbidden{}
}

// WithPayload adds the payload to the cancel product order get forbidden response
func (o *CancelProductOrderGetForbidden) WithPayload(payload *models.ErrorRepresentation) *CancelProductOrderGetForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel product order get forbidden response
func (o *CancelProductOrderGetForbidden) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelProductOrderGetForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CancelProductOrderGetNotFoundCode is the HTTP code returned for type CancelProductOrderGetNotFound
const CancelProductOrderGetNotFoundCode int = 404

/*CancelProductOrderGetNotFound Not Found

List of supported error codes:
- 60: Resource not found

swagger:response cancelProductOrderGetNotFound
*/
type CancelProductOrderGetNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewCancelProductOrderGetNotFound creates CancelProductOrderGetNotFound with default headers values
func NewCancelProductOrderGetNotFound() *CancelProductOrderGetNotFound {

	return &CancelProductOrderGetNotFound{}
}

// WithPayload adds the payload to the cancel product order get not found response
func (o *CancelProductOrderGetNotFound) WithPayload(payload *models.ErrorRepresentation) *CancelProductOrderGetNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel product order get not found response
func (o *CancelProductOrderGetNotFound) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelProductOrderGetNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CancelProductOrderGetMethodNotAllowedCode is the HTTP code returned for type CancelProductOrderGetMethodNotAllowed
const CancelProductOrderGetMethodNotAllowedCode int = 405

/*CancelProductOrderGetMethodNotAllowed Method Not Allowed

List of supported error codes:
- 61: Method not allowed

swagger:response cancelProductOrderGetMethodNotAllowed
*/
type CancelProductOrderGetMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewCancelProductOrderGetMethodNotAllowed creates CancelProductOrderGetMethodNotAllowed with default headers values
func NewCancelProductOrderGetMethodNotAllowed() *CancelProductOrderGetMethodNotAllowed {

	return &CancelProductOrderGetMethodNotAllowed{}
}

// WithPayload adds the payload to the cancel product order get method not allowed response
func (o *CancelProductOrderGetMethodNotAllowed) WithPayload(payload *models.ErrorRepresentation) *CancelProductOrderGetMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel product order get method not allowed response
func (o *CancelProductOrderGetMethodNotAllowed) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelProductOrderGetMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CancelProductOrderGetRequestTimeoutCode is the HTTP code returned for type CancelProductOrderGetRequestTimeout
const CancelProductOrderGetRequestTimeoutCode int = 408

/*CancelProductOrderGetRequestTimeout Request Time-out

List of supported error codes:
- 63: Request time-out

swagger:response cancelProductOrderGetRequestTimeout
*/
type CancelProductOrderGetRequestTimeout struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewCancelProductOrderGetRequestTimeout creates CancelProductOrderGetRequestTimeout with default headers values
func NewCancelProductOrderGetRequestTimeout() *CancelProductOrderGetRequestTimeout {

	return &CancelProductOrderGetRequestTimeout{}
}

// WithPayload adds the payload to the cancel product order get request timeout response
func (o *CancelProductOrderGetRequestTimeout) WithPayload(payload *models.ErrorRepresentation) *CancelProductOrderGetRequestTimeout {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel product order get request timeout response
func (o *CancelProductOrderGetRequestTimeout) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelProductOrderGetRequestTimeout) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(408)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CancelProductOrderGetUnprocessableEntityCode is the HTTP code returned for type CancelProductOrderGetUnprocessableEntity
const CancelProductOrderGetUnprocessableEntityCode int = 422

/*CancelProductOrderGetUnprocessableEntity Unprocessable entity

Functional error

swagger:response cancelProductOrderGetUnprocessableEntity
*/
type CancelProductOrderGetUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewCancelProductOrderGetUnprocessableEntity creates CancelProductOrderGetUnprocessableEntity with default headers values
func NewCancelProductOrderGetUnprocessableEntity() *CancelProductOrderGetUnprocessableEntity {

	return &CancelProductOrderGetUnprocessableEntity{}
}

// WithPayload adds the payload to the cancel product order get unprocessable entity response
func (o *CancelProductOrderGetUnprocessableEntity) WithPayload(payload *models.ErrorRepresentation) *CancelProductOrderGetUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel product order get unprocessable entity response
func (o *CancelProductOrderGetUnprocessableEntity) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelProductOrderGetUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CancelProductOrderGetInternalServerErrorCode is the HTTP code returned for type CancelProductOrderGetInternalServerError
const CancelProductOrderGetInternalServerErrorCode int = 500

/*CancelProductOrderGetInternalServerError Internal Server Error

List of supported error codes:
- 1: Internal error

swagger:response cancelProductOrderGetInternalServerError
*/
type CancelProductOrderGetInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewCancelProductOrderGetInternalServerError creates CancelProductOrderGetInternalServerError with default headers values
func NewCancelProductOrderGetInternalServerError() *CancelProductOrderGetInternalServerError {

	return &CancelProductOrderGetInternalServerError{}
}

// WithPayload adds the payload to the cancel product order get internal server error response
func (o *CancelProductOrderGetInternalServerError) WithPayload(payload *models.ErrorRepresentation) *CancelProductOrderGetInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel product order get internal server error response
func (o *CancelProductOrderGetInternalServerError) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelProductOrderGetInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CancelProductOrderGetServiceUnavailableCode is the HTTP code returned for type CancelProductOrderGetServiceUnavailable
const CancelProductOrderGetServiceUnavailableCode int = 503

/*CancelProductOrderGetServiceUnavailable Service Unavailable



swagger:response cancelProductOrderGetServiceUnavailable
*/
type CancelProductOrderGetServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewCancelProductOrderGetServiceUnavailable creates CancelProductOrderGetServiceUnavailable with default headers values
func NewCancelProductOrderGetServiceUnavailable() *CancelProductOrderGetServiceUnavailable {

	return &CancelProductOrderGetServiceUnavailable{}
}

// WithPayload adds the payload to the cancel product order get service unavailable response
func (o *CancelProductOrderGetServiceUnavailable) WithPayload(payload *models.ErrorRepresentation) *CancelProductOrderGetServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel product order get service unavailable response
func (o *CancelProductOrderGetServiceUnavailable) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelProductOrderGetServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
