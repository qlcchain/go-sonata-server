// Code generated by go-swagger; DO NOT EDIT.

package cancel_product_order

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/qlcchain/go-sonata-server/models"
)

// CancelProductOrderCreateCreatedCode is the HTTP code returned for type CancelProductOrderCreateCreated
const CancelProductOrderCreateCreatedCode int = 201

/*CancelProductOrderCreateCreated Created

swagger:response cancelProductOrderCreateCreated
*/
type CancelProductOrderCreateCreated struct {

	/*
	  In: Body
	*/
	Payload *models.CancelProductOrder `json:"body,omitempty"`
}

// NewCancelProductOrderCreateCreated creates CancelProductOrderCreateCreated with default headers values
func NewCancelProductOrderCreateCreated() *CancelProductOrderCreateCreated {

	return &CancelProductOrderCreateCreated{}
}

// WithPayload adds the payload to the cancel product order create created response
func (o *CancelProductOrderCreateCreated) WithPayload(payload *models.CancelProductOrder) *CancelProductOrderCreateCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel product order create created response
func (o *CancelProductOrderCreateCreated) SetPayload(payload *models.CancelProductOrder) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelProductOrderCreateCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CancelProductOrderCreateBadRequestCode is the HTTP code returned for type CancelProductOrderCreateBadRequest
const CancelProductOrderCreateBadRequestCode int = 400

/*CancelProductOrderCreateBadRequest Bad Request

List of supported error codes:
- 20: Invalid URL parameter value
- 21: Missing body
- 22: Invalid body
- 23: Missing body field
- 24: Invalid body field
- 25: Missing header
- 26: Invalid header value
- 27: Missing query-string parameter
- 28: Invalid query-string parameter value

swagger:response cancelProductOrderCreateBadRequest
*/
type CancelProductOrderCreateBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewCancelProductOrderCreateBadRequest creates CancelProductOrderCreateBadRequest with default headers values
func NewCancelProductOrderCreateBadRequest() *CancelProductOrderCreateBadRequest {

	return &CancelProductOrderCreateBadRequest{}
}

// WithPayload adds the payload to the cancel product order create bad request response
func (o *CancelProductOrderCreateBadRequest) WithPayload(payload *models.ErrorRepresentation) *CancelProductOrderCreateBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel product order create bad request response
func (o *CancelProductOrderCreateBadRequest) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelProductOrderCreateBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CancelProductOrderCreateUnauthorizedCode is the HTTP code returned for type CancelProductOrderCreateUnauthorized
const CancelProductOrderCreateUnauthorizedCode int = 401

/*CancelProductOrderCreateUnauthorized Unauthorized

List of supported error codes:
- 40: Missing credentials
- 41: Invalid credentials
- 42: Expired credentials

swagger:response cancelProductOrderCreateUnauthorized
*/
type CancelProductOrderCreateUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewCancelProductOrderCreateUnauthorized creates CancelProductOrderCreateUnauthorized with default headers values
func NewCancelProductOrderCreateUnauthorized() *CancelProductOrderCreateUnauthorized {

	return &CancelProductOrderCreateUnauthorized{}
}

// WithPayload adds the payload to the cancel product order create unauthorized response
func (o *CancelProductOrderCreateUnauthorized) WithPayload(payload *models.ErrorRepresentation) *CancelProductOrderCreateUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel product order create unauthorized response
func (o *CancelProductOrderCreateUnauthorized) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelProductOrderCreateUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CancelProductOrderCreateForbiddenCode is the HTTP code returned for type CancelProductOrderCreateForbidden
const CancelProductOrderCreateForbiddenCode int = 403

/*CancelProductOrderCreateForbidden Forbidden

List of supported error codes:
- 50: Access denied
- 51: Forbidden requester
- 52: Forbidden user
- 53: Too many requests

swagger:response cancelProductOrderCreateForbidden
*/
type CancelProductOrderCreateForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewCancelProductOrderCreateForbidden creates CancelProductOrderCreateForbidden with default headers values
func NewCancelProductOrderCreateForbidden() *CancelProductOrderCreateForbidden {

	return &CancelProductOrderCreateForbidden{}
}

// WithPayload adds the payload to the cancel product order create forbidden response
func (o *CancelProductOrderCreateForbidden) WithPayload(payload *models.ErrorRepresentation) *CancelProductOrderCreateForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel product order create forbidden response
func (o *CancelProductOrderCreateForbidden) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelProductOrderCreateForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CancelProductOrderCreateNotFoundCode is the HTTP code returned for type CancelProductOrderCreateNotFound
const CancelProductOrderCreateNotFoundCode int = 404

/*CancelProductOrderCreateNotFound Not Found

List of supported error codes:
- 60: Resource not found

swagger:response cancelProductOrderCreateNotFound
*/
type CancelProductOrderCreateNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewCancelProductOrderCreateNotFound creates CancelProductOrderCreateNotFound with default headers values
func NewCancelProductOrderCreateNotFound() *CancelProductOrderCreateNotFound {

	return &CancelProductOrderCreateNotFound{}
}

// WithPayload adds the payload to the cancel product order create not found response
func (o *CancelProductOrderCreateNotFound) WithPayload(payload *models.ErrorRepresentation) *CancelProductOrderCreateNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel product order create not found response
func (o *CancelProductOrderCreateNotFound) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelProductOrderCreateNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CancelProductOrderCreateMethodNotAllowedCode is the HTTP code returned for type CancelProductOrderCreateMethodNotAllowed
const CancelProductOrderCreateMethodNotAllowedCode int = 405

/*CancelProductOrderCreateMethodNotAllowed Method Not Allowed

List of supported error codes:
- 61: Method not allowed

swagger:response cancelProductOrderCreateMethodNotAllowed
*/
type CancelProductOrderCreateMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewCancelProductOrderCreateMethodNotAllowed creates CancelProductOrderCreateMethodNotAllowed with default headers values
func NewCancelProductOrderCreateMethodNotAllowed() *CancelProductOrderCreateMethodNotAllowed {

	return &CancelProductOrderCreateMethodNotAllowed{}
}

// WithPayload adds the payload to the cancel product order create method not allowed response
func (o *CancelProductOrderCreateMethodNotAllowed) WithPayload(payload *models.ErrorRepresentation) *CancelProductOrderCreateMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel product order create method not allowed response
func (o *CancelProductOrderCreateMethodNotAllowed) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelProductOrderCreateMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CancelProductOrderCreateRequestTimeoutCode is the HTTP code returned for type CancelProductOrderCreateRequestTimeout
const CancelProductOrderCreateRequestTimeoutCode int = 408

/*CancelProductOrderCreateRequestTimeout Request Time-out

List of supported error codes:
- 63: Request time-out

swagger:response cancelProductOrderCreateRequestTimeout
*/
type CancelProductOrderCreateRequestTimeout struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewCancelProductOrderCreateRequestTimeout creates CancelProductOrderCreateRequestTimeout with default headers values
func NewCancelProductOrderCreateRequestTimeout() *CancelProductOrderCreateRequestTimeout {

	return &CancelProductOrderCreateRequestTimeout{}
}

// WithPayload adds the payload to the cancel product order create request timeout response
func (o *CancelProductOrderCreateRequestTimeout) WithPayload(payload *models.ErrorRepresentation) *CancelProductOrderCreateRequestTimeout {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel product order create request timeout response
func (o *CancelProductOrderCreateRequestTimeout) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelProductOrderCreateRequestTimeout) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(408)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CancelProductOrderCreateUnprocessableEntityCode is the HTTP code returned for type CancelProductOrderCreateUnprocessableEntity
const CancelProductOrderCreateUnprocessableEntityCode int = 422

/*CancelProductOrderCreateUnprocessableEntity Unprocessable entity

Functional error





 - code: 100
message: externalId must be provided
description:


 - code: 101
message: externalId does not match productOrderId
description:


 - code: 102
message: Product order state is not compliant with this request
description:

swagger:response cancelProductOrderCreateUnprocessableEntity
*/
type CancelProductOrderCreateUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewCancelProductOrderCreateUnprocessableEntity creates CancelProductOrderCreateUnprocessableEntity with default headers values
func NewCancelProductOrderCreateUnprocessableEntity() *CancelProductOrderCreateUnprocessableEntity {

	return &CancelProductOrderCreateUnprocessableEntity{}
}

// WithPayload adds the payload to the cancel product order create unprocessable entity response
func (o *CancelProductOrderCreateUnprocessableEntity) WithPayload(payload *models.ErrorRepresentation) *CancelProductOrderCreateUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel product order create unprocessable entity response
func (o *CancelProductOrderCreateUnprocessableEntity) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelProductOrderCreateUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CancelProductOrderCreateInternalServerErrorCode is the HTTP code returned for type CancelProductOrderCreateInternalServerError
const CancelProductOrderCreateInternalServerErrorCode int = 500

/*CancelProductOrderCreateInternalServerError Internal Server Error

List of supported error codes:
- 1: Internal error

swagger:response cancelProductOrderCreateInternalServerError
*/
type CancelProductOrderCreateInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewCancelProductOrderCreateInternalServerError creates CancelProductOrderCreateInternalServerError with default headers values
func NewCancelProductOrderCreateInternalServerError() *CancelProductOrderCreateInternalServerError {

	return &CancelProductOrderCreateInternalServerError{}
}

// WithPayload adds the payload to the cancel product order create internal server error response
func (o *CancelProductOrderCreateInternalServerError) WithPayload(payload *models.ErrorRepresentation) *CancelProductOrderCreateInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel product order create internal server error response
func (o *CancelProductOrderCreateInternalServerError) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelProductOrderCreateInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CancelProductOrderCreateServiceUnavailableCode is the HTTP code returned for type CancelProductOrderCreateServiceUnavailable
const CancelProductOrderCreateServiceUnavailableCode int = 503

/*CancelProductOrderCreateServiceUnavailable Service Unavailable



swagger:response cancelProductOrderCreateServiceUnavailable
*/
type CancelProductOrderCreateServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorRepresentation `json:"body,omitempty"`
}

// NewCancelProductOrderCreateServiceUnavailable creates CancelProductOrderCreateServiceUnavailable with default headers values
func NewCancelProductOrderCreateServiceUnavailable() *CancelProductOrderCreateServiceUnavailable {

	return &CancelProductOrderCreateServiceUnavailable{}
}

// WithPayload adds the payload to the cancel product order create service unavailable response
func (o *CancelProductOrderCreateServiceUnavailable) WithPayload(payload *models.ErrorRepresentation) *CancelProductOrderCreateServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel product order create service unavailable response
func (o *CancelProductOrderCreateServiceUnavailable) SetPayload(payload *models.ErrorRepresentation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelProductOrderCreateServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
