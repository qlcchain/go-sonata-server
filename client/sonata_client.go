// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/qlcchain/go-sonata-server/client/cancel_product_order"
	"github.com/qlcchain/go-sonata-server/client/geographic_address"
	"github.com/qlcchain/go-sonata-server/client/geographic_address_validation"
	"github.com/qlcchain/go-sonata-server/client/geographic_site"
	"github.com/qlcchain/go-sonata-server/client/hub"
	"github.com/qlcchain/go-sonata-server/client/notification"
	"github.com/qlcchain/go-sonata-server/client/product"
	"github.com/qlcchain/go-sonata-server/client/product_offering_qualification"
	"github.com/qlcchain/go-sonata-server/client/product_order"
	"github.com/qlcchain/go-sonata-server/client/quote"
)

// Default sonata HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "serverRoot"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/api/mef"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"https"}

// NewHTTPClient creates a new sonata HTTP client.
func NewHTTPClient(formats strfmt.Registry) *Sonata {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new sonata HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *Sonata {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new sonata client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Sonata {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(Sonata)
	cli.Transport = transport
	cli.CancelProductOrder = cancel_product_order.New(transport, formats)
	cli.GeographicAddress = geographic_address.New(transport, formats)
	cli.GeographicAddressValidation = geographic_address_validation.New(transport, formats)
	cli.GeographicSite = geographic_site.New(transport, formats)
	cli.Hub = hub.New(transport, formats)
	cli.Notification = notification.New(transport, formats)
	cli.Product = product.New(transport, formats)
	cli.ProductOfferingQualification = product_offering_qualification.New(transport, formats)
	cli.ProductOrder = product_order.New(transport, formats)
	cli.Quote = quote.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// Sonata is a client for sonata
type Sonata struct {
	CancelProductOrder cancel_product_order.ClientService

	GeographicAddress geographic_address.ClientService

	GeographicAddressValidation geographic_address_validation.ClientService

	GeographicSite geographic_site.ClientService

	Hub hub.ClientService

	Notification notification.ClientService

	Product product.ClientService

	ProductOfferingQualification product_offering_qualification.ClientService

	ProductOrder product_order.ClientService

	Quote quote.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *Sonata) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.CancelProductOrder.SetTransport(transport)
	c.GeographicAddress.SetTransport(transport)
	c.GeographicAddressValidation.SetTransport(transport)
	c.GeographicSite.SetTransport(transport)
	c.Hub.SetTransport(transport)
	c.Notification.SetTransport(transport)
	c.Product.SetTransport(transport)
	c.ProductOfferingQualification.SetTransport(transport)
	c.ProductOrder.SetTransport(transport)
	c.Quote.SetTransport(transport)
}
