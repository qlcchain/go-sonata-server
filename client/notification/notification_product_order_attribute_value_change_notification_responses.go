// Code generated by go-swagger; DO NOT EDIT.

package notification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/qlcchain/go-sonata-server/models"
)

// NotificationProductOrderAttributeValueChangeNotificationReader is a Reader for the NotificationProductOrderAttributeValueChangeNotification structure.
type NotificationProductOrderAttributeValueChangeNotificationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NotificationProductOrderAttributeValueChangeNotificationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewNotificationProductOrderAttributeValueChangeNotificationNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewNotificationProductOrderAttributeValueChangeNotificationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewNotificationProductOrderAttributeValueChangeNotificationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewNotificationProductOrderAttributeValueChangeNotificationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewNotificationProductOrderAttributeValueChangeNotificationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewNotificationProductOrderAttributeValueChangeNotificationMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewNotificationProductOrderAttributeValueChangeNotificationRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewNotificationProductOrderAttributeValueChangeNotificationUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewNotificationProductOrderAttributeValueChangeNotificationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewNotificationProductOrderAttributeValueChangeNotificationServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewNotificationProductOrderAttributeValueChangeNotificationNoContent creates a NotificationProductOrderAttributeValueChangeNotificationNoContent with default headers values
func NewNotificationProductOrderAttributeValueChangeNotificationNoContent() *NotificationProductOrderAttributeValueChangeNotificationNoContent {
	return &NotificationProductOrderAttributeValueChangeNotificationNoContent{}
}

/*NotificationProductOrderAttributeValueChangeNotificationNoContent handles this case with default header values.

No Content
*/
type NotificationProductOrderAttributeValueChangeNotificationNoContent struct {
}

func (o *NotificationProductOrderAttributeValueChangeNotificationNoContent) Error() string {
	return fmt.Sprintf("[POST /productOrderNotification/v3/notification/productOrderAttributeValueChangeNotification][%d] notificationProductOrderAttributeValueChangeNotificationNoContent ", 204)
}

func (o *NotificationProductOrderAttributeValueChangeNotificationNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNotificationProductOrderAttributeValueChangeNotificationBadRequest creates a NotificationProductOrderAttributeValueChangeNotificationBadRequest with default headers values
func NewNotificationProductOrderAttributeValueChangeNotificationBadRequest() *NotificationProductOrderAttributeValueChangeNotificationBadRequest {
	return &NotificationProductOrderAttributeValueChangeNotificationBadRequest{}
}

/*NotificationProductOrderAttributeValueChangeNotificationBadRequest handles this case with default header values.

Bad Request

List of supported error codes:
- 20: Invalid URL parameter value
- 21: Missing body
- 22: Invalid body
- 23: Missing body field
- 24: Invalid body field
- 25: Missing header
- 26: Invalid header value
- 27: Missing query-string parameter
- 28: Invalid query-string parameter value
*/
type NotificationProductOrderAttributeValueChangeNotificationBadRequest struct {
	Payload *models.ErrorRepresentation
}

func (o *NotificationProductOrderAttributeValueChangeNotificationBadRequest) Error() string {
	return fmt.Sprintf("[POST /productOrderNotification/v3/notification/productOrderAttributeValueChangeNotification][%d] notificationProductOrderAttributeValueChangeNotificationBadRequest  %+v", 400, o.Payload)
}

func (o *NotificationProductOrderAttributeValueChangeNotificationBadRequest) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *NotificationProductOrderAttributeValueChangeNotificationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationProductOrderAttributeValueChangeNotificationUnauthorized creates a NotificationProductOrderAttributeValueChangeNotificationUnauthorized with default headers values
func NewNotificationProductOrderAttributeValueChangeNotificationUnauthorized() *NotificationProductOrderAttributeValueChangeNotificationUnauthorized {
	return &NotificationProductOrderAttributeValueChangeNotificationUnauthorized{}
}

/*NotificationProductOrderAttributeValueChangeNotificationUnauthorized handles this case with default header values.

Unauthorized

List of supported error codes:
- 40: Missing credentials
- 41: Invalid credentials
- 42: Expired credentials
*/
type NotificationProductOrderAttributeValueChangeNotificationUnauthorized struct {
	Payload *models.ErrorRepresentation
}

func (o *NotificationProductOrderAttributeValueChangeNotificationUnauthorized) Error() string {
	return fmt.Sprintf("[POST /productOrderNotification/v3/notification/productOrderAttributeValueChangeNotification][%d] notificationProductOrderAttributeValueChangeNotificationUnauthorized  %+v", 401, o.Payload)
}

func (o *NotificationProductOrderAttributeValueChangeNotificationUnauthorized) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *NotificationProductOrderAttributeValueChangeNotificationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationProductOrderAttributeValueChangeNotificationForbidden creates a NotificationProductOrderAttributeValueChangeNotificationForbidden with default headers values
func NewNotificationProductOrderAttributeValueChangeNotificationForbidden() *NotificationProductOrderAttributeValueChangeNotificationForbidden {
	return &NotificationProductOrderAttributeValueChangeNotificationForbidden{}
}

/*NotificationProductOrderAttributeValueChangeNotificationForbidden handles this case with default header values.

Forbidden

List of supported error codes:
- 50: Access denied
- 51: Forbidden requester
- 52: Forbidden user
- 53: Too many requests
*/
type NotificationProductOrderAttributeValueChangeNotificationForbidden struct {
	Payload *models.ErrorRepresentation
}

func (o *NotificationProductOrderAttributeValueChangeNotificationForbidden) Error() string {
	return fmt.Sprintf("[POST /productOrderNotification/v3/notification/productOrderAttributeValueChangeNotification][%d] notificationProductOrderAttributeValueChangeNotificationForbidden  %+v", 403, o.Payload)
}

func (o *NotificationProductOrderAttributeValueChangeNotificationForbidden) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *NotificationProductOrderAttributeValueChangeNotificationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationProductOrderAttributeValueChangeNotificationNotFound creates a NotificationProductOrderAttributeValueChangeNotificationNotFound with default headers values
func NewNotificationProductOrderAttributeValueChangeNotificationNotFound() *NotificationProductOrderAttributeValueChangeNotificationNotFound {
	return &NotificationProductOrderAttributeValueChangeNotificationNotFound{}
}

/*NotificationProductOrderAttributeValueChangeNotificationNotFound handles this case with default header values.

Not Found

List of supported error codes:
- 60: Resource not found
*/
type NotificationProductOrderAttributeValueChangeNotificationNotFound struct {
	Payload *models.ErrorRepresentation
}

func (o *NotificationProductOrderAttributeValueChangeNotificationNotFound) Error() string {
	return fmt.Sprintf("[POST /productOrderNotification/v3/notification/productOrderAttributeValueChangeNotification][%d] notificationProductOrderAttributeValueChangeNotificationNotFound  %+v", 404, o.Payload)
}

func (o *NotificationProductOrderAttributeValueChangeNotificationNotFound) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *NotificationProductOrderAttributeValueChangeNotificationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationProductOrderAttributeValueChangeNotificationMethodNotAllowed creates a NotificationProductOrderAttributeValueChangeNotificationMethodNotAllowed with default headers values
func NewNotificationProductOrderAttributeValueChangeNotificationMethodNotAllowed() *NotificationProductOrderAttributeValueChangeNotificationMethodNotAllowed {
	return &NotificationProductOrderAttributeValueChangeNotificationMethodNotAllowed{}
}

/*NotificationProductOrderAttributeValueChangeNotificationMethodNotAllowed handles this case with default header values.

Method Not Allowed

List of supported error codes:
- 61: Method not allowed
*/
type NotificationProductOrderAttributeValueChangeNotificationMethodNotAllowed struct {
	Payload *models.ErrorRepresentation
}

func (o *NotificationProductOrderAttributeValueChangeNotificationMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /productOrderNotification/v3/notification/productOrderAttributeValueChangeNotification][%d] notificationProductOrderAttributeValueChangeNotificationMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *NotificationProductOrderAttributeValueChangeNotificationMethodNotAllowed) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *NotificationProductOrderAttributeValueChangeNotificationMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationProductOrderAttributeValueChangeNotificationRequestTimeout creates a NotificationProductOrderAttributeValueChangeNotificationRequestTimeout with default headers values
func NewNotificationProductOrderAttributeValueChangeNotificationRequestTimeout() *NotificationProductOrderAttributeValueChangeNotificationRequestTimeout {
	return &NotificationProductOrderAttributeValueChangeNotificationRequestTimeout{}
}

/*NotificationProductOrderAttributeValueChangeNotificationRequestTimeout handles this case with default header values.

Request Time-out

List of supported error codes:
- 63: Request time-out
*/
type NotificationProductOrderAttributeValueChangeNotificationRequestTimeout struct {
	Payload *models.ErrorRepresentation
}

func (o *NotificationProductOrderAttributeValueChangeNotificationRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /productOrderNotification/v3/notification/productOrderAttributeValueChangeNotification][%d] notificationProductOrderAttributeValueChangeNotificationRequestTimeout  %+v", 408, o.Payload)
}

func (o *NotificationProductOrderAttributeValueChangeNotificationRequestTimeout) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *NotificationProductOrderAttributeValueChangeNotificationRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationProductOrderAttributeValueChangeNotificationUnprocessableEntity creates a NotificationProductOrderAttributeValueChangeNotificationUnprocessableEntity with default headers values
func NewNotificationProductOrderAttributeValueChangeNotificationUnprocessableEntity() *NotificationProductOrderAttributeValueChangeNotificationUnprocessableEntity {
	return &NotificationProductOrderAttributeValueChangeNotificationUnprocessableEntity{}
}

/*NotificationProductOrderAttributeValueChangeNotificationUnprocessableEntity handles this case with default header values.

Unprocessable entity

Functional error
*/
type NotificationProductOrderAttributeValueChangeNotificationUnprocessableEntity struct {
	Payload *models.ErrorRepresentation
}

func (o *NotificationProductOrderAttributeValueChangeNotificationUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /productOrderNotification/v3/notification/productOrderAttributeValueChangeNotification][%d] notificationProductOrderAttributeValueChangeNotificationUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *NotificationProductOrderAttributeValueChangeNotificationUnprocessableEntity) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *NotificationProductOrderAttributeValueChangeNotificationUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationProductOrderAttributeValueChangeNotificationInternalServerError creates a NotificationProductOrderAttributeValueChangeNotificationInternalServerError with default headers values
func NewNotificationProductOrderAttributeValueChangeNotificationInternalServerError() *NotificationProductOrderAttributeValueChangeNotificationInternalServerError {
	return &NotificationProductOrderAttributeValueChangeNotificationInternalServerError{}
}

/*NotificationProductOrderAttributeValueChangeNotificationInternalServerError handles this case with default header values.

Internal Server Error

List of supported error codes:
- 1: Internal error
*/
type NotificationProductOrderAttributeValueChangeNotificationInternalServerError struct {
	Payload *models.ErrorRepresentation
}

func (o *NotificationProductOrderAttributeValueChangeNotificationInternalServerError) Error() string {
	return fmt.Sprintf("[POST /productOrderNotification/v3/notification/productOrderAttributeValueChangeNotification][%d] notificationProductOrderAttributeValueChangeNotificationInternalServerError  %+v", 500, o.Payload)
}

func (o *NotificationProductOrderAttributeValueChangeNotificationInternalServerError) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *NotificationProductOrderAttributeValueChangeNotificationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationProductOrderAttributeValueChangeNotificationServiceUnavailable creates a NotificationProductOrderAttributeValueChangeNotificationServiceUnavailable with default headers values
func NewNotificationProductOrderAttributeValueChangeNotificationServiceUnavailable() *NotificationProductOrderAttributeValueChangeNotificationServiceUnavailable {
	return &NotificationProductOrderAttributeValueChangeNotificationServiceUnavailable{}
}

/*NotificationProductOrderAttributeValueChangeNotificationServiceUnavailable handles this case with default header values.

Service Unavailable


*/
type NotificationProductOrderAttributeValueChangeNotificationServiceUnavailable struct {
	Payload *models.ErrorRepresentation
}

func (o *NotificationProductOrderAttributeValueChangeNotificationServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /productOrderNotification/v3/notification/productOrderAttributeValueChangeNotification][%d] notificationProductOrderAttributeValueChangeNotificationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *NotificationProductOrderAttributeValueChangeNotificationServiceUnavailable) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *NotificationProductOrderAttributeValueChangeNotificationServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
