// Code generated by go-swagger; DO NOT EDIT.

package notification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/qlcchain/go-sonata-server/models"
)

// NotificationQuoteAttributeValueChangeNotificationReader is a Reader for the NotificationQuoteAttributeValueChangeNotification structure.
type NotificationQuoteAttributeValueChangeNotificationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NotificationQuoteAttributeValueChangeNotificationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewNotificationQuoteAttributeValueChangeNotificationNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewNotificationQuoteAttributeValueChangeNotificationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewNotificationQuoteAttributeValueChangeNotificationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewNotificationQuoteAttributeValueChangeNotificationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewNotificationQuoteAttributeValueChangeNotificationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewNotificationQuoteAttributeValueChangeNotificationMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewNotificationQuoteAttributeValueChangeNotificationUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewNotificationQuoteAttributeValueChangeNotificationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewNotificationQuoteAttributeValueChangeNotificationServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewNotificationQuoteAttributeValueChangeNotificationNoContent creates a NotificationQuoteAttributeValueChangeNotificationNoContent with default headers values
func NewNotificationQuoteAttributeValueChangeNotificationNoContent() *NotificationQuoteAttributeValueChangeNotificationNoContent {
	return &NotificationQuoteAttributeValueChangeNotificationNoContent{}
}

/*NotificationQuoteAttributeValueChangeNotificationNoContent handles this case with default header values.

Success
*/
type NotificationQuoteAttributeValueChangeNotificationNoContent struct {
}

func (o *NotificationQuoteAttributeValueChangeNotificationNoContent) Error() string {
	return fmt.Sprintf("[POST /quoteNotification/v1/quoteNotification/v1/notification/quoteAttributeValueChangeNotification][%d] notificationQuoteAttributeValueChangeNotificationNoContent ", 204)
}

func (o *NotificationQuoteAttributeValueChangeNotificationNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNotificationQuoteAttributeValueChangeNotificationBadRequest creates a NotificationQuoteAttributeValueChangeNotificationBadRequest with default headers values
func NewNotificationQuoteAttributeValueChangeNotificationBadRequest() *NotificationQuoteAttributeValueChangeNotificationBadRequest {
	return &NotificationQuoteAttributeValueChangeNotificationBadRequest{}
}

/*NotificationQuoteAttributeValueChangeNotificationBadRequest handles this case with default header values.

Bad Request

List of supported error codes:
- 20: Invalid URL parameter value
- 21: Missing body
- 22: Invalid body
- 23: Missing body field
- 24: Invalid body field
- 25: Missing header
- 26: Invalid header value
- 27: Missing query-string parameter
- 28: Invalid query-string parameter value
*/
type NotificationQuoteAttributeValueChangeNotificationBadRequest struct {
	Payload *models.ErrorRepresentation
}

func (o *NotificationQuoteAttributeValueChangeNotificationBadRequest) Error() string {
	return fmt.Sprintf("[POST /quoteNotification/v1/quoteNotification/v1/notification/quoteAttributeValueChangeNotification][%d] notificationQuoteAttributeValueChangeNotificationBadRequest  %+v", 400, o.Payload)
}

func (o *NotificationQuoteAttributeValueChangeNotificationBadRequest) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *NotificationQuoteAttributeValueChangeNotificationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationQuoteAttributeValueChangeNotificationUnauthorized creates a NotificationQuoteAttributeValueChangeNotificationUnauthorized with default headers values
func NewNotificationQuoteAttributeValueChangeNotificationUnauthorized() *NotificationQuoteAttributeValueChangeNotificationUnauthorized {
	return &NotificationQuoteAttributeValueChangeNotificationUnauthorized{}
}

/*NotificationQuoteAttributeValueChangeNotificationUnauthorized handles this case with default header values.

Unauthorized

List of supported error codes:
- 40: Missing credentials
- 41: Invalid credentials
- 42: Expired credentials
*/
type NotificationQuoteAttributeValueChangeNotificationUnauthorized struct {
	Payload *models.ErrorRepresentation
}

func (o *NotificationQuoteAttributeValueChangeNotificationUnauthorized) Error() string {
	return fmt.Sprintf("[POST /quoteNotification/v1/quoteNotification/v1/notification/quoteAttributeValueChangeNotification][%d] notificationQuoteAttributeValueChangeNotificationUnauthorized  %+v", 401, o.Payload)
}

func (o *NotificationQuoteAttributeValueChangeNotificationUnauthorized) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *NotificationQuoteAttributeValueChangeNotificationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationQuoteAttributeValueChangeNotificationForbidden creates a NotificationQuoteAttributeValueChangeNotificationForbidden with default headers values
func NewNotificationQuoteAttributeValueChangeNotificationForbidden() *NotificationQuoteAttributeValueChangeNotificationForbidden {
	return &NotificationQuoteAttributeValueChangeNotificationForbidden{}
}

/*NotificationQuoteAttributeValueChangeNotificationForbidden handles this case with default header values.

Forbidden

List of supported error codes:
- 50: Access denied
- 51: Forbidden requester
- 52: Forbidden user
- 53: Too many requests
*/
type NotificationQuoteAttributeValueChangeNotificationForbidden struct {
	Payload *models.ErrorRepresentation
}

func (o *NotificationQuoteAttributeValueChangeNotificationForbidden) Error() string {
	return fmt.Sprintf("[POST /quoteNotification/v1/quoteNotification/v1/notification/quoteAttributeValueChangeNotification][%d] notificationQuoteAttributeValueChangeNotificationForbidden  %+v", 403, o.Payload)
}

func (o *NotificationQuoteAttributeValueChangeNotificationForbidden) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *NotificationQuoteAttributeValueChangeNotificationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationQuoteAttributeValueChangeNotificationNotFound creates a NotificationQuoteAttributeValueChangeNotificationNotFound with default headers values
func NewNotificationQuoteAttributeValueChangeNotificationNotFound() *NotificationQuoteAttributeValueChangeNotificationNotFound {
	return &NotificationQuoteAttributeValueChangeNotificationNotFound{}
}

/*NotificationQuoteAttributeValueChangeNotificationNotFound handles this case with default header values.

Not Found

List of supported error codes:
- 60: Resource not found
*/
type NotificationQuoteAttributeValueChangeNotificationNotFound struct {
	Payload *models.ErrorRepresentation
}

func (o *NotificationQuoteAttributeValueChangeNotificationNotFound) Error() string {
	return fmt.Sprintf("[POST /quoteNotification/v1/quoteNotification/v1/notification/quoteAttributeValueChangeNotification][%d] notificationQuoteAttributeValueChangeNotificationNotFound  %+v", 404, o.Payload)
}

func (o *NotificationQuoteAttributeValueChangeNotificationNotFound) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *NotificationQuoteAttributeValueChangeNotificationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationQuoteAttributeValueChangeNotificationMethodNotAllowed creates a NotificationQuoteAttributeValueChangeNotificationMethodNotAllowed with default headers values
func NewNotificationQuoteAttributeValueChangeNotificationMethodNotAllowed() *NotificationQuoteAttributeValueChangeNotificationMethodNotAllowed {
	return &NotificationQuoteAttributeValueChangeNotificationMethodNotAllowed{}
}

/*NotificationQuoteAttributeValueChangeNotificationMethodNotAllowed handles this case with default header values.

Method Not Allowed

List of supported error codes:
- 61: Method not allowed
*/
type NotificationQuoteAttributeValueChangeNotificationMethodNotAllowed struct {
	Payload *models.ErrorRepresentation
}

func (o *NotificationQuoteAttributeValueChangeNotificationMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /quoteNotification/v1/quoteNotification/v1/notification/quoteAttributeValueChangeNotification][%d] notificationQuoteAttributeValueChangeNotificationMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *NotificationQuoteAttributeValueChangeNotificationMethodNotAllowed) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *NotificationQuoteAttributeValueChangeNotificationMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationQuoteAttributeValueChangeNotificationUnprocessableEntity creates a NotificationQuoteAttributeValueChangeNotificationUnprocessableEntity with default headers values
func NewNotificationQuoteAttributeValueChangeNotificationUnprocessableEntity() *NotificationQuoteAttributeValueChangeNotificationUnprocessableEntity {
	return &NotificationQuoteAttributeValueChangeNotificationUnprocessableEntity{}
}

/*NotificationQuoteAttributeValueChangeNotificationUnprocessableEntity handles this case with default header values.

Unprocessable entity

Functional error
*/
type NotificationQuoteAttributeValueChangeNotificationUnprocessableEntity struct {
	Payload *models.ErrorRepresentation
}

func (o *NotificationQuoteAttributeValueChangeNotificationUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /quoteNotification/v1/quoteNotification/v1/notification/quoteAttributeValueChangeNotification][%d] notificationQuoteAttributeValueChangeNotificationUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *NotificationQuoteAttributeValueChangeNotificationUnprocessableEntity) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *NotificationQuoteAttributeValueChangeNotificationUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationQuoteAttributeValueChangeNotificationInternalServerError creates a NotificationQuoteAttributeValueChangeNotificationInternalServerError with default headers values
func NewNotificationQuoteAttributeValueChangeNotificationInternalServerError() *NotificationQuoteAttributeValueChangeNotificationInternalServerError {
	return &NotificationQuoteAttributeValueChangeNotificationInternalServerError{}
}

/*NotificationQuoteAttributeValueChangeNotificationInternalServerError handles this case with default header values.

Internal Server Error

List of supported error codes:
- 1: Internal error
*/
type NotificationQuoteAttributeValueChangeNotificationInternalServerError struct {
	Payload *models.ErrorRepresentation
}

func (o *NotificationQuoteAttributeValueChangeNotificationInternalServerError) Error() string {
	return fmt.Sprintf("[POST /quoteNotification/v1/quoteNotification/v1/notification/quoteAttributeValueChangeNotification][%d] notificationQuoteAttributeValueChangeNotificationInternalServerError  %+v", 500, o.Payload)
}

func (o *NotificationQuoteAttributeValueChangeNotificationInternalServerError) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *NotificationQuoteAttributeValueChangeNotificationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationQuoteAttributeValueChangeNotificationServiceUnavailable creates a NotificationQuoteAttributeValueChangeNotificationServiceUnavailable with default headers values
func NewNotificationQuoteAttributeValueChangeNotificationServiceUnavailable() *NotificationQuoteAttributeValueChangeNotificationServiceUnavailable {
	return &NotificationQuoteAttributeValueChangeNotificationServiceUnavailable{}
}

/*NotificationQuoteAttributeValueChangeNotificationServiceUnavailable handles this case with default header values.

Service Unavailable


*/
type NotificationQuoteAttributeValueChangeNotificationServiceUnavailable struct {
	Payload *models.ErrorRepresentation
}

func (o *NotificationQuoteAttributeValueChangeNotificationServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /quoteNotification/v1/quoteNotification/v1/notification/quoteAttributeValueChangeNotification][%d] notificationQuoteAttributeValueChangeNotificationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *NotificationQuoteAttributeValueChangeNotificationServiceUnavailable) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *NotificationQuoteAttributeValueChangeNotificationServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
