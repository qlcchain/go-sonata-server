// Code generated by go-swagger; DO NOT EDIT.

package notification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/qlcchain/go-sonata-server/models"
)

// NewNotificationProductOrderAttributeValueChangeNotificationParams creates a new NotificationProductOrderAttributeValueChangeNotificationParams object
// with the default values initialized.
func NewNotificationProductOrderAttributeValueChangeNotificationParams() *NotificationProductOrderAttributeValueChangeNotificationParams {
	var ()
	return &NotificationProductOrderAttributeValueChangeNotificationParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewNotificationProductOrderAttributeValueChangeNotificationParamsWithTimeout creates a new NotificationProductOrderAttributeValueChangeNotificationParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewNotificationProductOrderAttributeValueChangeNotificationParamsWithTimeout(timeout time.Duration) *NotificationProductOrderAttributeValueChangeNotificationParams {
	var ()
	return &NotificationProductOrderAttributeValueChangeNotificationParams{

		timeout: timeout,
	}
}

// NewNotificationProductOrderAttributeValueChangeNotificationParamsWithContext creates a new NotificationProductOrderAttributeValueChangeNotificationParams object
// with the default values initialized, and the ability to set a context for a request
func NewNotificationProductOrderAttributeValueChangeNotificationParamsWithContext(ctx context.Context) *NotificationProductOrderAttributeValueChangeNotificationParams {
	var ()
	return &NotificationProductOrderAttributeValueChangeNotificationParams{

		Context: ctx,
	}
}

// NewNotificationProductOrderAttributeValueChangeNotificationParamsWithHTTPClient creates a new NotificationProductOrderAttributeValueChangeNotificationParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewNotificationProductOrderAttributeValueChangeNotificationParamsWithHTTPClient(client *http.Client) *NotificationProductOrderAttributeValueChangeNotificationParams {
	var ()
	return &NotificationProductOrderAttributeValueChangeNotificationParams{
		HTTPClient: client,
	}
}

/*NotificationProductOrderAttributeValueChangeNotificationParams contains all the parameters to send to the API endpoint
for the notification product order attribute value change notification operation typically these are written to a http.Request
*/
type NotificationProductOrderAttributeValueChangeNotificationParams struct {

	/*ProductOrderAttributeValueChange*/
	ProductOrderAttributeValueChange *models.EventPlus

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the notification product order attribute value change notification params
func (o *NotificationProductOrderAttributeValueChangeNotificationParams) WithTimeout(timeout time.Duration) *NotificationProductOrderAttributeValueChangeNotificationParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the notification product order attribute value change notification params
func (o *NotificationProductOrderAttributeValueChangeNotificationParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the notification product order attribute value change notification params
func (o *NotificationProductOrderAttributeValueChangeNotificationParams) WithContext(ctx context.Context) *NotificationProductOrderAttributeValueChangeNotificationParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the notification product order attribute value change notification params
func (o *NotificationProductOrderAttributeValueChangeNotificationParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the notification product order attribute value change notification params
func (o *NotificationProductOrderAttributeValueChangeNotificationParams) WithHTTPClient(client *http.Client) *NotificationProductOrderAttributeValueChangeNotificationParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the notification product order attribute value change notification params
func (o *NotificationProductOrderAttributeValueChangeNotificationParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithProductOrderAttributeValueChange adds the productOrderAttributeValueChange to the notification product order attribute value change notification params
func (o *NotificationProductOrderAttributeValueChangeNotificationParams) WithProductOrderAttributeValueChange(productOrderAttributeValueChange *models.EventPlus) *NotificationProductOrderAttributeValueChangeNotificationParams {
	o.SetProductOrderAttributeValueChange(productOrderAttributeValueChange)
	return o
}

// SetProductOrderAttributeValueChange adds the productOrderAttributeValueChange to the notification product order attribute value change notification params
func (o *NotificationProductOrderAttributeValueChangeNotificationParams) SetProductOrderAttributeValueChange(productOrderAttributeValueChange *models.EventPlus) {
	o.ProductOrderAttributeValueChange = productOrderAttributeValueChange
}

// WriteToRequest writes these params to a swagger request
func (o *NotificationProductOrderAttributeValueChangeNotificationParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ProductOrderAttributeValueChange != nil {
		if err := r.SetBodyParam(o.ProductOrderAttributeValueChange); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
