// Code generated by go-swagger; DO NOT EDIT.

package notification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/qlcchain/go-sonata-server/models"
)

// NotificationProductOfferingQualificationStateChangeNotificationReader is a Reader for the NotificationProductOfferingQualificationStateChangeNotification structure.
type NotificationProductOfferingQualificationStateChangeNotificationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NotificationProductOfferingQualificationStateChangeNotificationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewNotificationProductOfferingQualificationStateChangeNotificationNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewNotificationProductOfferingQualificationStateChangeNotificationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewNotificationProductOfferingQualificationStateChangeNotificationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewNotificationProductOfferingQualificationStateChangeNotificationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewNotificationProductOfferingQualificationStateChangeNotificationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewNotificationProductOfferingQualificationStateChangeNotificationRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewNotificationProductOfferingQualificationStateChangeNotificationUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewNotificationProductOfferingQualificationStateChangeNotificationServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewNotificationProductOfferingQualificationStateChangeNotificationNoContent creates a NotificationProductOfferingQualificationStateChangeNotificationNoContent with default headers values
func NewNotificationProductOfferingQualificationStateChangeNotificationNoContent() *NotificationProductOfferingQualificationStateChangeNotificationNoContent {
	return &NotificationProductOfferingQualificationStateChangeNotificationNoContent{}
}

/* NotificationProductOfferingQualificationStateChangeNotificationNoContent describes a response with status code 204, with default header values.

No Content
*/
type NotificationProductOfferingQualificationStateChangeNotificationNoContent struct {
}

func (o *NotificationProductOfferingQualificationStateChangeNotificationNoContent) Error() string {
	return fmt.Sprintf("[POST /productOfferingQualificationNotification/v3/notification/productOfferingQualificationStateChangeNotification][%d] notificationProductOfferingQualificationStateChangeNotificationNoContent ", 204)
}

func (o *NotificationProductOfferingQualificationStateChangeNotificationNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNotificationProductOfferingQualificationStateChangeNotificationBadRequest creates a NotificationProductOfferingQualificationStateChangeNotificationBadRequest with default headers values
func NewNotificationProductOfferingQualificationStateChangeNotificationBadRequest() *NotificationProductOfferingQualificationStateChangeNotificationBadRequest {
	return &NotificationProductOfferingQualificationStateChangeNotificationBadRequest{}
}

/* NotificationProductOfferingQualificationStateChangeNotificationBadRequest describes a response with status code 400, with default header values.

 Bad Request

List of supported error codes:
- 20: Invalid URL parameter value
- 21: Missing body
- 22: Invalid body
- 23: Missing body field
- 24: Invalid body field
- 25: Missing header
- 26: Invalid header value
- 27: Missing query-string parameter
- 28: Invalid query-string parameter value
*/
type NotificationProductOfferingQualificationStateChangeNotificationBadRequest struct {
	Payload *models.ErrorRepresentation
}

func (o *NotificationProductOfferingQualificationStateChangeNotificationBadRequest) Error() string {
	return fmt.Sprintf("[POST /productOfferingQualificationNotification/v3/notification/productOfferingQualificationStateChangeNotification][%d] notificationProductOfferingQualificationStateChangeNotificationBadRequest  %+v", 400, o.Payload)
}
func (o *NotificationProductOfferingQualificationStateChangeNotificationBadRequest) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *NotificationProductOfferingQualificationStateChangeNotificationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationProductOfferingQualificationStateChangeNotificationUnauthorized creates a NotificationProductOfferingQualificationStateChangeNotificationUnauthorized with default headers values
func NewNotificationProductOfferingQualificationStateChangeNotificationUnauthorized() *NotificationProductOfferingQualificationStateChangeNotificationUnauthorized {
	return &NotificationProductOfferingQualificationStateChangeNotificationUnauthorized{}
}

/* NotificationProductOfferingQualificationStateChangeNotificationUnauthorized describes a response with status code 401, with default header values.

 Unauthorized

List of supported error codes:
- 40: Missing credentials
- 41: Invalid credentials
- 42: Expired credentials
*/
type NotificationProductOfferingQualificationStateChangeNotificationUnauthorized struct {
	Payload *models.ErrorRepresentation
}

func (o *NotificationProductOfferingQualificationStateChangeNotificationUnauthorized) Error() string {
	return fmt.Sprintf("[POST /productOfferingQualificationNotification/v3/notification/productOfferingQualificationStateChangeNotification][%d] notificationProductOfferingQualificationStateChangeNotificationUnauthorized  %+v", 401, o.Payload)
}
func (o *NotificationProductOfferingQualificationStateChangeNotificationUnauthorized) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *NotificationProductOfferingQualificationStateChangeNotificationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationProductOfferingQualificationStateChangeNotificationForbidden creates a NotificationProductOfferingQualificationStateChangeNotificationForbidden with default headers values
func NewNotificationProductOfferingQualificationStateChangeNotificationForbidden() *NotificationProductOfferingQualificationStateChangeNotificationForbidden {
	return &NotificationProductOfferingQualificationStateChangeNotificationForbidden{}
}

/* NotificationProductOfferingQualificationStateChangeNotificationForbidden describes a response with status code 403, with default header values.

 Forbidden

List of supported error codes:
- 50: Access denied
- 51: Forbidden requester
- 52: Forbidden user
- 53: Too many requests
*/
type NotificationProductOfferingQualificationStateChangeNotificationForbidden struct {
	Payload *models.ErrorRepresentation
}

func (o *NotificationProductOfferingQualificationStateChangeNotificationForbidden) Error() string {
	return fmt.Sprintf("[POST /productOfferingQualificationNotification/v3/notification/productOfferingQualificationStateChangeNotification][%d] notificationProductOfferingQualificationStateChangeNotificationForbidden  %+v", 403, o.Payload)
}
func (o *NotificationProductOfferingQualificationStateChangeNotificationForbidden) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *NotificationProductOfferingQualificationStateChangeNotificationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationProductOfferingQualificationStateChangeNotificationNotFound creates a NotificationProductOfferingQualificationStateChangeNotificationNotFound with default headers values
func NewNotificationProductOfferingQualificationStateChangeNotificationNotFound() *NotificationProductOfferingQualificationStateChangeNotificationNotFound {
	return &NotificationProductOfferingQualificationStateChangeNotificationNotFound{}
}

/* NotificationProductOfferingQualificationStateChangeNotificationNotFound describes a response with status code 404, with default header values.

 Not Found

List of supported error codes:
- 60: Resource not found
*/
type NotificationProductOfferingQualificationStateChangeNotificationNotFound struct {
	Payload *models.ErrorRepresentation
}

func (o *NotificationProductOfferingQualificationStateChangeNotificationNotFound) Error() string {
	return fmt.Sprintf("[POST /productOfferingQualificationNotification/v3/notification/productOfferingQualificationStateChangeNotification][%d] notificationProductOfferingQualificationStateChangeNotificationNotFound  %+v", 404, o.Payload)
}
func (o *NotificationProductOfferingQualificationStateChangeNotificationNotFound) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *NotificationProductOfferingQualificationStateChangeNotificationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationProductOfferingQualificationStateChangeNotificationRequestTimeout creates a NotificationProductOfferingQualificationStateChangeNotificationRequestTimeout with default headers values
func NewNotificationProductOfferingQualificationStateChangeNotificationRequestTimeout() *NotificationProductOfferingQualificationStateChangeNotificationRequestTimeout {
	return &NotificationProductOfferingQualificationStateChangeNotificationRequestTimeout{}
}

/* NotificationProductOfferingQualificationStateChangeNotificationRequestTimeout describes a response with status code 408, with default header values.

 Request Time-out

List of supported error codes:
- 63: Request time-out
*/
type NotificationProductOfferingQualificationStateChangeNotificationRequestTimeout struct {
	Payload *models.ErrorRepresentation
}

func (o *NotificationProductOfferingQualificationStateChangeNotificationRequestTimeout) Error() string {
	return fmt.Sprintf("[POST /productOfferingQualificationNotification/v3/notification/productOfferingQualificationStateChangeNotification][%d] notificationProductOfferingQualificationStateChangeNotificationRequestTimeout  %+v", 408, o.Payload)
}
func (o *NotificationProductOfferingQualificationStateChangeNotificationRequestTimeout) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *NotificationProductOfferingQualificationStateChangeNotificationRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationProductOfferingQualificationStateChangeNotificationUnprocessableEntity creates a NotificationProductOfferingQualificationStateChangeNotificationUnprocessableEntity with default headers values
func NewNotificationProductOfferingQualificationStateChangeNotificationUnprocessableEntity() *NotificationProductOfferingQualificationStateChangeNotificationUnprocessableEntity {
	return &NotificationProductOfferingQualificationStateChangeNotificationUnprocessableEntity{}
}

/* NotificationProductOfferingQualificationStateChangeNotificationUnprocessableEntity describes a response with status code 422, with default header values.

 Unprocessable entity

Functional error
*/
type NotificationProductOfferingQualificationStateChangeNotificationUnprocessableEntity struct {
	Payload *models.ErrorRepresentation
}

func (o *NotificationProductOfferingQualificationStateChangeNotificationUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /productOfferingQualificationNotification/v3/notification/productOfferingQualificationStateChangeNotification][%d] notificationProductOfferingQualificationStateChangeNotificationUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *NotificationProductOfferingQualificationStateChangeNotificationUnprocessableEntity) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *NotificationProductOfferingQualificationStateChangeNotificationUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationProductOfferingQualificationStateChangeNotificationServiceUnavailable creates a NotificationProductOfferingQualificationStateChangeNotificationServiceUnavailable with default headers values
func NewNotificationProductOfferingQualificationStateChangeNotificationServiceUnavailable() *NotificationProductOfferingQualificationStateChangeNotificationServiceUnavailable {
	return &NotificationProductOfferingQualificationStateChangeNotificationServiceUnavailable{}
}

/* NotificationProductOfferingQualificationStateChangeNotificationServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable


*/
type NotificationProductOfferingQualificationStateChangeNotificationServiceUnavailable struct {
	Payload *models.ErrorRepresentation
}

func (o *NotificationProductOfferingQualificationStateChangeNotificationServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /productOfferingQualificationNotification/v3/notification/productOfferingQualificationStateChangeNotification][%d] notificationProductOfferingQualificationStateChangeNotificationServiceUnavailable  %+v", 503, o.Payload)
}
func (o *NotificationProductOfferingQualificationStateChangeNotificationServiceUnavailable) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *NotificationProductOfferingQualificationStateChangeNotificationServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
