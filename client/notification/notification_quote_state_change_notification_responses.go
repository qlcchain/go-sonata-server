// Code generated by go-swagger; DO NOT EDIT.

package notification

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/qlcchain/go-sonata-server/models"
)

// NotificationQuoteStateChangeNotificationReader is a Reader for the NotificationQuoteStateChangeNotification structure.
type NotificationQuoteStateChangeNotificationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NotificationQuoteStateChangeNotificationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewNotificationQuoteStateChangeNotificationNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewNotificationQuoteStateChangeNotificationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewNotificationQuoteStateChangeNotificationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewNotificationQuoteStateChangeNotificationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewNotificationQuoteStateChangeNotificationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewNotificationQuoteStateChangeNotificationMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewNotificationQuoteStateChangeNotificationUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewNotificationQuoteStateChangeNotificationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewNotificationQuoteStateChangeNotificationServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewNotificationQuoteStateChangeNotificationNoContent creates a NotificationQuoteStateChangeNotificationNoContent with default headers values
func NewNotificationQuoteStateChangeNotificationNoContent() *NotificationQuoteStateChangeNotificationNoContent {
	return &NotificationQuoteStateChangeNotificationNoContent{}
}

/*NotificationQuoteStateChangeNotificationNoContent handles this case with default header values.

Success
*/
type NotificationQuoteStateChangeNotificationNoContent struct {
}

func (o *NotificationQuoteStateChangeNotificationNoContent) Error() string {
	return fmt.Sprintf("[POST /quoteNotification/v1/notification/quoteStateChangeNotification][%d] notificationQuoteStateChangeNotificationNoContent ", 204)
}

func (o *NotificationQuoteStateChangeNotificationNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNotificationQuoteStateChangeNotificationBadRequest creates a NotificationQuoteStateChangeNotificationBadRequest with default headers values
func NewNotificationQuoteStateChangeNotificationBadRequest() *NotificationQuoteStateChangeNotificationBadRequest {
	return &NotificationQuoteStateChangeNotificationBadRequest{}
}

/*NotificationQuoteStateChangeNotificationBadRequest handles this case with default header values.

Bad Request

List of supported error codes:
- 20: Invalid URL parameter value
- 21: Missing body
- 22: Invalid body
- 23: Missing body field
- 24: Invalid body field
- 25: Missing header
- 26: Invalid header value
- 27: Missing query-string parameter
- 28: Invalid query-string parameter value
*/
type NotificationQuoteStateChangeNotificationBadRequest struct {
	Payload *models.ErrorRepresentation
}

func (o *NotificationQuoteStateChangeNotificationBadRequest) Error() string {
	return fmt.Sprintf("[POST /quoteNotification/v1/notification/quoteStateChangeNotification][%d] notificationQuoteStateChangeNotificationBadRequest  %+v", 400, o.Payload)
}

func (o *NotificationQuoteStateChangeNotificationBadRequest) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *NotificationQuoteStateChangeNotificationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationQuoteStateChangeNotificationUnauthorized creates a NotificationQuoteStateChangeNotificationUnauthorized with default headers values
func NewNotificationQuoteStateChangeNotificationUnauthorized() *NotificationQuoteStateChangeNotificationUnauthorized {
	return &NotificationQuoteStateChangeNotificationUnauthorized{}
}

/*NotificationQuoteStateChangeNotificationUnauthorized handles this case with default header values.

Unauthorized

List of supported error codes:
- 40: Missing credentials
- 41: Invalid credentials
- 42: Expired credentials
*/
type NotificationQuoteStateChangeNotificationUnauthorized struct {
	Payload *models.ErrorRepresentation
}

func (o *NotificationQuoteStateChangeNotificationUnauthorized) Error() string {
	return fmt.Sprintf("[POST /quoteNotification/v1/notification/quoteStateChangeNotification][%d] notificationQuoteStateChangeNotificationUnauthorized  %+v", 401, o.Payload)
}

func (o *NotificationQuoteStateChangeNotificationUnauthorized) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *NotificationQuoteStateChangeNotificationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationQuoteStateChangeNotificationForbidden creates a NotificationQuoteStateChangeNotificationForbidden with default headers values
func NewNotificationQuoteStateChangeNotificationForbidden() *NotificationQuoteStateChangeNotificationForbidden {
	return &NotificationQuoteStateChangeNotificationForbidden{}
}

/*NotificationQuoteStateChangeNotificationForbidden handles this case with default header values.

Forbidden

List of supported error codes:
- 50: Access denied
- 51: Forbidden requester
- 52: Forbidden user
- 53: Too many requests
*/
type NotificationQuoteStateChangeNotificationForbidden struct {
	Payload *models.ErrorRepresentation
}

func (o *NotificationQuoteStateChangeNotificationForbidden) Error() string {
	return fmt.Sprintf("[POST /quoteNotification/v1/notification/quoteStateChangeNotification][%d] notificationQuoteStateChangeNotificationForbidden  %+v", 403, o.Payload)
}

func (o *NotificationQuoteStateChangeNotificationForbidden) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *NotificationQuoteStateChangeNotificationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationQuoteStateChangeNotificationNotFound creates a NotificationQuoteStateChangeNotificationNotFound with default headers values
func NewNotificationQuoteStateChangeNotificationNotFound() *NotificationQuoteStateChangeNotificationNotFound {
	return &NotificationQuoteStateChangeNotificationNotFound{}
}

/*NotificationQuoteStateChangeNotificationNotFound handles this case with default header values.

Not Found

List of supported error codes:
- 60: Resource not found
*/
type NotificationQuoteStateChangeNotificationNotFound struct {
	Payload *models.ErrorRepresentation
}

func (o *NotificationQuoteStateChangeNotificationNotFound) Error() string {
	return fmt.Sprintf("[POST /quoteNotification/v1/notification/quoteStateChangeNotification][%d] notificationQuoteStateChangeNotificationNotFound  %+v", 404, o.Payload)
}

func (o *NotificationQuoteStateChangeNotificationNotFound) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *NotificationQuoteStateChangeNotificationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationQuoteStateChangeNotificationMethodNotAllowed creates a NotificationQuoteStateChangeNotificationMethodNotAllowed with default headers values
func NewNotificationQuoteStateChangeNotificationMethodNotAllowed() *NotificationQuoteStateChangeNotificationMethodNotAllowed {
	return &NotificationQuoteStateChangeNotificationMethodNotAllowed{}
}

/*NotificationQuoteStateChangeNotificationMethodNotAllowed handles this case with default header values.

Method Not Allowed

List of supported error codes:
- 61: Method not allowed
*/
type NotificationQuoteStateChangeNotificationMethodNotAllowed struct {
	Payload *models.ErrorRepresentation
}

func (o *NotificationQuoteStateChangeNotificationMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /quoteNotification/v1/notification/quoteStateChangeNotification][%d] notificationQuoteStateChangeNotificationMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *NotificationQuoteStateChangeNotificationMethodNotAllowed) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *NotificationQuoteStateChangeNotificationMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationQuoteStateChangeNotificationUnprocessableEntity creates a NotificationQuoteStateChangeNotificationUnprocessableEntity with default headers values
func NewNotificationQuoteStateChangeNotificationUnprocessableEntity() *NotificationQuoteStateChangeNotificationUnprocessableEntity {
	return &NotificationQuoteStateChangeNotificationUnprocessableEntity{}
}

/*NotificationQuoteStateChangeNotificationUnprocessableEntity handles this case with default header values.

Unprocessable entity

Functional error
*/
type NotificationQuoteStateChangeNotificationUnprocessableEntity struct {
	Payload *models.ErrorRepresentation
}

func (o *NotificationQuoteStateChangeNotificationUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /quoteNotification/v1/notification/quoteStateChangeNotification][%d] notificationQuoteStateChangeNotificationUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *NotificationQuoteStateChangeNotificationUnprocessableEntity) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *NotificationQuoteStateChangeNotificationUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationQuoteStateChangeNotificationInternalServerError creates a NotificationQuoteStateChangeNotificationInternalServerError with default headers values
func NewNotificationQuoteStateChangeNotificationInternalServerError() *NotificationQuoteStateChangeNotificationInternalServerError {
	return &NotificationQuoteStateChangeNotificationInternalServerError{}
}

/*NotificationQuoteStateChangeNotificationInternalServerError handles this case with default header values.

Internal Server Error

List of supported error codes:
- 1: Internal error
*/
type NotificationQuoteStateChangeNotificationInternalServerError struct {
	Payload *models.ErrorRepresentation
}

func (o *NotificationQuoteStateChangeNotificationInternalServerError) Error() string {
	return fmt.Sprintf("[POST /quoteNotification/v1/notification/quoteStateChangeNotification][%d] notificationQuoteStateChangeNotificationInternalServerError  %+v", 500, o.Payload)
}

func (o *NotificationQuoteStateChangeNotificationInternalServerError) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *NotificationQuoteStateChangeNotificationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotificationQuoteStateChangeNotificationServiceUnavailable creates a NotificationQuoteStateChangeNotificationServiceUnavailable with default headers values
func NewNotificationQuoteStateChangeNotificationServiceUnavailable() *NotificationQuoteStateChangeNotificationServiceUnavailable {
	return &NotificationQuoteStateChangeNotificationServiceUnavailable{}
}

/*NotificationQuoteStateChangeNotificationServiceUnavailable handles this case with default header values.

Service Unavailable


*/
type NotificationQuoteStateChangeNotificationServiceUnavailable struct {
	Payload *models.ErrorRepresentation
}

func (o *NotificationQuoteStateChangeNotificationServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /quoteNotification/v1/notification/quoteStateChangeNotification][%d] notificationQuoteStateChangeNotificationServiceUnavailable  %+v", 503, o.Payload)
}

func (o *NotificationQuoteStateChangeNotificationServiceUnavailable) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *NotificationQuoteStateChangeNotificationServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
