// Code generated by go-swagger; DO NOT EDIT.

package hub

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/qlcchain/go-sonata-server/models"
)

// QuoteManagementHubCreateReader is a Reader for the QuoteManagementHubCreate structure.
type QuoteManagementHubCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *QuoteManagementHubCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewQuoteManagementHubCreateCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewQuoteManagementHubCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewQuoteManagementHubCreateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewQuoteManagementHubCreateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewQuoteManagementHubCreateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewQuoteManagementHubCreateMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewQuoteManagementHubCreateUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewQuoteManagementHubCreateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewQuoteManagementHubCreateServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewQuoteManagementHubCreateCreated creates a QuoteManagementHubCreateCreated with default headers values
func NewQuoteManagementHubCreateCreated() *QuoteManagementHubCreateCreated {
	return &QuoteManagementHubCreateCreated{}
}

/*QuoteManagementHubCreateCreated handles this case with default header values.

Created
*/
type QuoteManagementHubCreateCreated struct {
	Payload *models.Hub
}

func (o *QuoteManagementHubCreateCreated) Error() string {
	return fmt.Sprintf("[POST /quoteManagement/v2/hub][%d] quoteManagementHubCreateCreated  %+v", 201, o.Payload)
}

func (o *QuoteManagementHubCreateCreated) GetPayload() *models.Hub {
	return o.Payload
}

func (o *QuoteManagementHubCreateCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Hub)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQuoteManagementHubCreateBadRequest creates a QuoteManagementHubCreateBadRequest with default headers values
func NewQuoteManagementHubCreateBadRequest() *QuoteManagementHubCreateBadRequest {
	return &QuoteManagementHubCreateBadRequest{}
}

/*QuoteManagementHubCreateBadRequest handles this case with default header values.

Bad Request

List of supported error codes:
- 20: Invalid URL parameter value
- 21: Missing body
- 22: Invalid body
- 23: Missing body field
- 24: Invalid body field
- 25: Missing header
- 26: Invalid header value
- 27: Missing query-string parameter
- 28: Invalid query-string parameter value
*/
type QuoteManagementHubCreateBadRequest struct {
	Payload *models.ErrorRepresentation
}

func (o *QuoteManagementHubCreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /quoteManagement/v2/hub][%d] quoteManagementHubCreateBadRequest  %+v", 400, o.Payload)
}

func (o *QuoteManagementHubCreateBadRequest) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *QuoteManagementHubCreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQuoteManagementHubCreateUnauthorized creates a QuoteManagementHubCreateUnauthorized with default headers values
func NewQuoteManagementHubCreateUnauthorized() *QuoteManagementHubCreateUnauthorized {
	return &QuoteManagementHubCreateUnauthorized{}
}

/*QuoteManagementHubCreateUnauthorized handles this case with default header values.

Unauthorized

List of supported error codes:
- 40: Missing credentials
- 41: Invalid credentials
- 42: Expired credentials
*/
type QuoteManagementHubCreateUnauthorized struct {
	Payload *models.ErrorRepresentation
}

func (o *QuoteManagementHubCreateUnauthorized) Error() string {
	return fmt.Sprintf("[POST /quoteManagement/v2/hub][%d] quoteManagementHubCreateUnauthorized  %+v", 401, o.Payload)
}

func (o *QuoteManagementHubCreateUnauthorized) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *QuoteManagementHubCreateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQuoteManagementHubCreateForbidden creates a QuoteManagementHubCreateForbidden with default headers values
func NewQuoteManagementHubCreateForbidden() *QuoteManagementHubCreateForbidden {
	return &QuoteManagementHubCreateForbidden{}
}

/*QuoteManagementHubCreateForbidden handles this case with default header values.

Forbidden

List of supported error codes:
- 50: Access denied
- 51: Forbidden requester
- 52: Forbidden user
- 53: Too many requests
*/
type QuoteManagementHubCreateForbidden struct {
	Payload *models.ErrorRepresentation
}

func (o *QuoteManagementHubCreateForbidden) Error() string {
	return fmt.Sprintf("[POST /quoteManagement/v2/hub][%d] quoteManagementHubCreateForbidden  %+v", 403, o.Payload)
}

func (o *QuoteManagementHubCreateForbidden) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *QuoteManagementHubCreateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQuoteManagementHubCreateNotFound creates a QuoteManagementHubCreateNotFound with default headers values
func NewQuoteManagementHubCreateNotFound() *QuoteManagementHubCreateNotFound {
	return &QuoteManagementHubCreateNotFound{}
}

/*QuoteManagementHubCreateNotFound handles this case with default header values.

Not Found

List of supported error codes:
- 60: Resource not found
*/
type QuoteManagementHubCreateNotFound struct {
	Payload *models.ErrorRepresentation
}

func (o *QuoteManagementHubCreateNotFound) Error() string {
	return fmt.Sprintf("[POST /quoteManagement/v2/hub][%d] quoteManagementHubCreateNotFound  %+v", 404, o.Payload)
}

func (o *QuoteManagementHubCreateNotFound) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *QuoteManagementHubCreateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQuoteManagementHubCreateMethodNotAllowed creates a QuoteManagementHubCreateMethodNotAllowed with default headers values
func NewQuoteManagementHubCreateMethodNotAllowed() *QuoteManagementHubCreateMethodNotAllowed {
	return &QuoteManagementHubCreateMethodNotAllowed{}
}

/*QuoteManagementHubCreateMethodNotAllowed handles this case with default header values.

Method Not Allowed

List of supported error codes:
- 61: Method not allowed
*/
type QuoteManagementHubCreateMethodNotAllowed struct {
	Payload *models.ErrorRepresentation
}

func (o *QuoteManagementHubCreateMethodNotAllowed) Error() string {
	return fmt.Sprintf("[POST /quoteManagement/v2/hub][%d] quoteManagementHubCreateMethodNotAllowed  %+v", 405, o.Payload)
}

func (o *QuoteManagementHubCreateMethodNotAllowed) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *QuoteManagementHubCreateMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQuoteManagementHubCreateUnprocessableEntity creates a QuoteManagementHubCreateUnprocessableEntity with default headers values
func NewQuoteManagementHubCreateUnprocessableEntity() *QuoteManagementHubCreateUnprocessableEntity {
	return &QuoteManagementHubCreateUnprocessableEntity{}
}

/*QuoteManagementHubCreateUnprocessableEntity handles this case with default header values.

Unprocessable entity

Functional error
*/
type QuoteManagementHubCreateUnprocessableEntity struct {
	Payload *models.ErrorRepresentation
}

func (o *QuoteManagementHubCreateUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /quoteManagement/v2/hub][%d] quoteManagementHubCreateUnprocessableEntity  %+v", 422, o.Payload)
}

func (o *QuoteManagementHubCreateUnprocessableEntity) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *QuoteManagementHubCreateUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQuoteManagementHubCreateInternalServerError creates a QuoteManagementHubCreateInternalServerError with default headers values
func NewQuoteManagementHubCreateInternalServerError() *QuoteManagementHubCreateInternalServerError {
	return &QuoteManagementHubCreateInternalServerError{}
}

/*QuoteManagementHubCreateInternalServerError handles this case with default header values.

Internal Server Error

List of supported error codes:
- 1: Internal error
*/
type QuoteManagementHubCreateInternalServerError struct {
	Payload *models.ErrorRepresentation
}

func (o *QuoteManagementHubCreateInternalServerError) Error() string {
	return fmt.Sprintf("[POST /quoteManagement/v2/hub][%d] quoteManagementHubCreateInternalServerError  %+v", 500, o.Payload)
}

func (o *QuoteManagementHubCreateInternalServerError) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *QuoteManagementHubCreateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewQuoteManagementHubCreateServiceUnavailable creates a QuoteManagementHubCreateServiceUnavailable with default headers values
func NewQuoteManagementHubCreateServiceUnavailable() *QuoteManagementHubCreateServiceUnavailable {
	return &QuoteManagementHubCreateServiceUnavailable{}
}

/*QuoteManagementHubCreateServiceUnavailable handles this case with default header values.

Service Unavailable


*/
type QuoteManagementHubCreateServiceUnavailable struct {
	Payload *models.ErrorRepresentation
}

func (o *QuoteManagementHubCreateServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /quoteManagement/v2/hub][%d] quoteManagementHubCreateServiceUnavailable  %+v", 503, o.Payload)
}

func (o *QuoteManagementHubCreateServiceUnavailable) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *QuoteManagementHubCreateServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
