// Code generated by go-swagger; DO NOT EDIT.

package hub

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/qlcchain/go-sonata-server/models"
)

// ProductOrderManagementHubFindReader is a Reader for the ProductOrderManagementHubFind structure.
type ProductOrderManagementHubFindReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProductOrderManagementHubFindReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProductOrderManagementHubFindOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewProductOrderManagementHubFindBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewProductOrderManagementHubFindUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewProductOrderManagementHubFindForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProductOrderManagementHubFindNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewProductOrderManagementHubFindMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 408:
		result := NewProductOrderManagementHubFindRequestTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewProductOrderManagementHubFindUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewProductOrderManagementHubFindInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewProductOrderManagementHubFindServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewProductOrderManagementHubFindOK creates a ProductOrderManagementHubFindOK with default headers values
func NewProductOrderManagementHubFindOK() *ProductOrderManagementHubFindOK {
	return &ProductOrderManagementHubFindOK{}
}

/* ProductOrderManagementHubFindOK describes a response with status code 200, with default header values.

Ok
*/
type ProductOrderManagementHubFindOK struct {
	Payload []*models.Hub
}

func (o *ProductOrderManagementHubFindOK) Error() string {
	return fmt.Sprintf("[GET /productOrderManagement/v3/hub][%d] productOrderManagementHubFindOK  %+v", 200, o.Payload)
}
func (o *ProductOrderManagementHubFindOK) GetPayload() []*models.Hub {
	return o.Payload
}

func (o *ProductOrderManagementHubFindOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProductOrderManagementHubFindBadRequest creates a ProductOrderManagementHubFindBadRequest with default headers values
func NewProductOrderManagementHubFindBadRequest() *ProductOrderManagementHubFindBadRequest {
	return &ProductOrderManagementHubFindBadRequest{}
}

/* ProductOrderManagementHubFindBadRequest describes a response with status code 400, with default header values.

 Bad Request

List of supported error codes:
- 20: Invalid URL parameter value
- 21: Missing body
- 22: Invalid body
- 23: Missing body field
- 24: Invalid body field
- 25: Missing header
- 26: Invalid header value
- 27: Missing query-string parameter
- 28: Invalid query-string parameter value
*/
type ProductOrderManagementHubFindBadRequest struct {
	Payload *models.ErrorRepresentation
}

func (o *ProductOrderManagementHubFindBadRequest) Error() string {
	return fmt.Sprintf("[GET /productOrderManagement/v3/hub][%d] productOrderManagementHubFindBadRequest  %+v", 400, o.Payload)
}
func (o *ProductOrderManagementHubFindBadRequest) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *ProductOrderManagementHubFindBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProductOrderManagementHubFindUnauthorized creates a ProductOrderManagementHubFindUnauthorized with default headers values
func NewProductOrderManagementHubFindUnauthorized() *ProductOrderManagementHubFindUnauthorized {
	return &ProductOrderManagementHubFindUnauthorized{}
}

/* ProductOrderManagementHubFindUnauthorized describes a response with status code 401, with default header values.

 Unauthorized

List of supported error codes:
- 40: Missing credentials
- 41: Invalid credentials
- 42: Expired credentials
*/
type ProductOrderManagementHubFindUnauthorized struct {
	Payload *models.ErrorRepresentation
}

func (o *ProductOrderManagementHubFindUnauthorized) Error() string {
	return fmt.Sprintf("[GET /productOrderManagement/v3/hub][%d] productOrderManagementHubFindUnauthorized  %+v", 401, o.Payload)
}
func (o *ProductOrderManagementHubFindUnauthorized) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *ProductOrderManagementHubFindUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProductOrderManagementHubFindForbidden creates a ProductOrderManagementHubFindForbidden with default headers values
func NewProductOrderManagementHubFindForbidden() *ProductOrderManagementHubFindForbidden {
	return &ProductOrderManagementHubFindForbidden{}
}

/* ProductOrderManagementHubFindForbidden describes a response with status code 403, with default header values.

 Forbidden

List of supported error codes:
- 50: Access denied
- 51: Forbidden requester
- 52: Forbidden user
- 53: Too many requests
*/
type ProductOrderManagementHubFindForbidden struct {
	Payload *models.ErrorRepresentation
}

func (o *ProductOrderManagementHubFindForbidden) Error() string {
	return fmt.Sprintf("[GET /productOrderManagement/v3/hub][%d] productOrderManagementHubFindForbidden  %+v", 403, o.Payload)
}
func (o *ProductOrderManagementHubFindForbidden) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *ProductOrderManagementHubFindForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProductOrderManagementHubFindNotFound creates a ProductOrderManagementHubFindNotFound with default headers values
func NewProductOrderManagementHubFindNotFound() *ProductOrderManagementHubFindNotFound {
	return &ProductOrderManagementHubFindNotFound{}
}

/* ProductOrderManagementHubFindNotFound describes a response with status code 404, with default header values.

 Not Found

List of supported error codes:
- 60: Resource not found
*/
type ProductOrderManagementHubFindNotFound struct {
	Payload *models.ErrorRepresentation
}

func (o *ProductOrderManagementHubFindNotFound) Error() string {
	return fmt.Sprintf("[GET /productOrderManagement/v3/hub][%d] productOrderManagementHubFindNotFound  %+v", 404, o.Payload)
}
func (o *ProductOrderManagementHubFindNotFound) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *ProductOrderManagementHubFindNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProductOrderManagementHubFindMethodNotAllowed creates a ProductOrderManagementHubFindMethodNotAllowed with default headers values
func NewProductOrderManagementHubFindMethodNotAllowed() *ProductOrderManagementHubFindMethodNotAllowed {
	return &ProductOrderManagementHubFindMethodNotAllowed{}
}

/* ProductOrderManagementHubFindMethodNotAllowed describes a response with status code 405, with default header values.

 Method Not Allowed

List of supported error codes:
- 61: Method not allowed
*/
type ProductOrderManagementHubFindMethodNotAllowed struct {
	Payload *models.ErrorRepresentation
}

func (o *ProductOrderManagementHubFindMethodNotAllowed) Error() string {
	return fmt.Sprintf("[GET /productOrderManagement/v3/hub][%d] productOrderManagementHubFindMethodNotAllowed  %+v", 405, o.Payload)
}
func (o *ProductOrderManagementHubFindMethodNotAllowed) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *ProductOrderManagementHubFindMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProductOrderManagementHubFindRequestTimeout creates a ProductOrderManagementHubFindRequestTimeout with default headers values
func NewProductOrderManagementHubFindRequestTimeout() *ProductOrderManagementHubFindRequestTimeout {
	return &ProductOrderManagementHubFindRequestTimeout{}
}

/* ProductOrderManagementHubFindRequestTimeout describes a response with status code 408, with default header values.

 Request Time-out

List of supported error codes:
- 63: Request time-out
*/
type ProductOrderManagementHubFindRequestTimeout struct {
	Payload *models.ErrorRepresentation
}

func (o *ProductOrderManagementHubFindRequestTimeout) Error() string {
	return fmt.Sprintf("[GET /productOrderManagement/v3/hub][%d] productOrderManagementHubFindRequestTimeout  %+v", 408, o.Payload)
}
func (o *ProductOrderManagementHubFindRequestTimeout) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *ProductOrderManagementHubFindRequestTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProductOrderManagementHubFindUnprocessableEntity creates a ProductOrderManagementHubFindUnprocessableEntity with default headers values
func NewProductOrderManagementHubFindUnprocessableEntity() *ProductOrderManagementHubFindUnprocessableEntity {
	return &ProductOrderManagementHubFindUnprocessableEntity{}
}

/* ProductOrderManagementHubFindUnprocessableEntity describes a response with status code 422, with default header values.

 Unprocessable entity

Functional error
*/
type ProductOrderManagementHubFindUnprocessableEntity struct {
	Payload *models.ErrorRepresentation
}

func (o *ProductOrderManagementHubFindUnprocessableEntity) Error() string {
	return fmt.Sprintf("[GET /productOrderManagement/v3/hub][%d] productOrderManagementHubFindUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *ProductOrderManagementHubFindUnprocessableEntity) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *ProductOrderManagementHubFindUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProductOrderManagementHubFindInternalServerError creates a ProductOrderManagementHubFindInternalServerError with default headers values
func NewProductOrderManagementHubFindInternalServerError() *ProductOrderManagementHubFindInternalServerError {
	return &ProductOrderManagementHubFindInternalServerError{}
}

/* ProductOrderManagementHubFindInternalServerError describes a response with status code 500, with default header values.

 Internal Server Error

List of supported error codes:
- 1: Internal error
*/
type ProductOrderManagementHubFindInternalServerError struct {
	Payload *models.ErrorRepresentation
}

func (o *ProductOrderManagementHubFindInternalServerError) Error() string {
	return fmt.Sprintf("[GET /productOrderManagement/v3/hub][%d] productOrderManagementHubFindInternalServerError  %+v", 500, o.Payload)
}
func (o *ProductOrderManagementHubFindInternalServerError) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *ProductOrderManagementHubFindInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProductOrderManagementHubFindServiceUnavailable creates a ProductOrderManagementHubFindServiceUnavailable with default headers values
func NewProductOrderManagementHubFindServiceUnavailable() *ProductOrderManagementHubFindServiceUnavailable {
	return &ProductOrderManagementHubFindServiceUnavailable{}
}

/* ProductOrderManagementHubFindServiceUnavailable describes a response with status code 503, with default header values.

Service Unavailable


*/
type ProductOrderManagementHubFindServiceUnavailable struct {
	Payload *models.ErrorRepresentation
}

func (o *ProductOrderManagementHubFindServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /productOrderManagement/v3/hub][%d] productOrderManagementHubFindServiceUnavailable  %+v", 503, o.Payload)
}
func (o *ProductOrderManagementHubFindServiceUnavailable) GetPayload() *models.ErrorRepresentation {
	return o.Payload
}

func (o *ProductOrderManagementHubFindServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorRepresentation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
