// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// PricingMethod An enumeration of valid pricing methods for ordered items
//
// swagger:model PricingMethod
type PricingMethod string

func NewPricingMethod(value PricingMethod) *PricingMethod {
	v := value
	return &v
}

const (

	// PricingMethodTariff captures enum value "tariff"
	PricingMethodTariff PricingMethod = "tariff"

	// PricingMethodContract captures enum value "contract"
	PricingMethodContract PricingMethod = "contract"

	// PricingMethodIndividualCaseBasis captures enum value "individualCaseBasis"
	PricingMethodIndividualCaseBasis PricingMethod = "individualCaseBasis"

	// PricingMethodOther captures enum value "other"
	PricingMethodOther PricingMethod = "other"
)

// for schema
var pricingMethodEnum []interface{}

func init() {
	var res []PricingMethod
	if err := json.Unmarshal([]byte(`["tariff","contract","individualCaseBasis","other"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		pricingMethodEnum = append(pricingMethodEnum, v)
	}
}

func (m PricingMethod) validatePricingMethodEnum(path, location string, value PricingMethod) error {
	if err := validate.EnumCase(path, location, value, pricingMethodEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this pricing method
func (m PricingMethod) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validatePricingMethodEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this pricing method based on context it is used
func (m PricingMethod) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
